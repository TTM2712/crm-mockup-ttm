{"version":3,"file":"static/js/371.deebe5bb.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/esm/DialogContentText/dialogContentTextClasses.js","../node_modules/@mui/material/esm/DialogContentText/DialogContentText.js","../node_modules/@mui/icons-material/esm/FilterList.js","pages/CustomerManagement/index.tsx"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getDialogContentTextUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContentText', slot);\n}\nconst dialogContentTextClasses = generateUtilityClasses('MuiDialogContentText', ['root']);\nexport default dialogContentTextClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Typography from \"../Typography/index.js\";\nimport { getDialogContentTextUtilityClass } from \"./dialogContentTextClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  const composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes);\n  return {\n    ...classes,\n    // forward classes to the Typography\n    ...composedClasses\n  };\n};\nconst DialogContentTextRoot = styled(Typography, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiDialogContentText',\n  slot: 'Root'\n})({});\nconst DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiDialogContentText'\n  });\n  const {\n    children,\n    className,\n    ...ownerState\n  } = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentTextRoot, {\n    component: \"p\",\n    variant: \"body1\",\n    color: \"textSecondary\",\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ...props,\n    classes: classes\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContentText;","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 18h4v-2h-4zM3 6v2h18V6zm3 7h12v-2H6z\"\n}), 'FilterList');","import React, { useState } from 'react';\nimport {\n  Box,\n  Typography,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TablePagination,\n  TextField,\n  Button,\n  IconButton,\n  MenuItem\n} from '@mui/material';\nimport { \n  Add as AddIcon, \n  Edit as EditIcon, \n  Delete as DeleteIcon,\n  Search as SearchIcon,\n  FilterList as FilterIcon\n} from '@mui/icons-material';\n\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  DialogContentText\n} from '@mui/material';\n\n// Fake data\nconst fakeCustomers = Array.from({ length: 25 }, (_, i) => ({\n  id: i + 1,\n  name: `Khách hàng ${i + 1}`,\n  phone: `0987${Math.floor(100000 + Math.random() * 900000)}`,\n  email: `customer${i + 1}@example.com`,\n  company: `Công ty ${String.fromCharCode(65 + (i % 5))}`,\n  status: ['Tiềm năng', 'Đang chăm sóc', 'Đã ký hợp đồng'][Math.floor(Math.random() * 3)],\n  owner: `Nhân viên ${String.fromCharCode(65 + (i % 5))}`,\n  createdAt: new Date(Date.now() - Math.floor(Math.random() * 30) * 24 * 60 * 60 * 1000).toLocaleDateString(),\n  notes: `Ghi chú cho khách hàng ${i + 1}`\n}));\n\nconst statusOptions = ['Tất cả', 'Tiềm năng', 'Đang chăm sóc', 'Đã ký hợp đồng'];\n\ntype Customer = typeof fakeCustomers[0];\n\nconst CustomerManagement = () => {\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState('Tất cả');\n  const [openDialog, setOpenDialog] = useState(false);\n  const [selectedCustomer, setSelectedCustomer] = useState<Customer | null>(null);\n  const [deleteConfirmOpen, setDeleteConfirmOpen] = useState(false);\n  const [formData, setFormData] = useState<Omit<Customer, 'id' | 'createdAt'>>({ \n    name: '', \n    phone: '', \n    email: '', \n    company: '', \n    status: 'Tiềm năng',\n    owner: 'Nhân viên A',\n    notes: '' \n  });\n\n  const handleOpenDialog = (customer: Customer | null = null) => {\n    if (customer) {\n      setFormData({\n        name: customer.name,\n        phone: customer.phone,\n        email: customer.email,\n        company: customer.company,\n        status: customer.status,\n        owner: customer.owner,\n        notes: customer.notes\n      });\n      setSelectedCustomer(customer);\n    } else {\n      setFormData({ \n        name: '', \n        phone: '', \n        email: '', \n        company: '', \n        status: 'Tiềm năng',\n        owner: 'Nhân viên A',\n        notes: '' \n      });\n      setSelectedCustomer(null);\n    }\n    setOpenDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setSelectedCustomer(null);\n  };\n\n  const handleFormChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | { name?: string; value: unknown }>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name as string]: value\n    }));\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    console.log('Form submitted:', formData);\n    // Xử lý lưu dữ liệu ở đây\n    handleCloseDialog();\n  };\n\n  const handleDeleteClick = (customer: Customer) => {\n    setSelectedCustomer(customer);\n    setDeleteConfirmOpen(true);\n  };\n\n  const handleDeleteConfirm = () => {\n    console.log('Xóa khách hàng:', selectedCustomer?.id);\n    setDeleteConfirmOpen(false);\n    setSelectedCustomer(null);\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(event.target.value);\n    setPage(0);\n  };\n\n  const handleStatusFilterChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setStatusFilter(event.target.value);\n    setPage(0);\n  };\n\n  const filteredCustomers = fakeCustomers.filter(customer => {\n    const matchesSearch = \n      customer.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      customer.phone.includes(searchTerm) ||\n      customer.email.toLowerCase().includes(searchTerm.toLowerCase());\n    \n    const matchesStatus = statusFilter === 'Tất cả' || customer.status === statusFilter;\n    \n    return matchesSearch && matchesStatus;\n  });\n\n  const paginatedCustomers = filteredCustomers.slice(\n    page * rowsPerPage,\n    page * rowsPerPage + rowsPerPage\n  );\n\n  return (\n    <Box sx={{ p: 3 }}>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\n        <Typography variant=\"h4\" component=\"h1\">\n          Quản lý khách hàng\n        </Typography>\n        <Button \n          variant=\"contained\" \n          color=\"primary\" \n          startIcon={<AddIcon />}\n          onClick={() => handleOpenDialog()}\n        >\n          Thêm khách hàng\n        </Button>\n      </Box>\n\n      <Paper sx={{ p: 2, mb: 2 }}>\n        <Box sx={{ display: 'flex', gap: 2, mb: 2 }}>\n          <TextField\n            variant=\"outlined\"\n            placeholder=\"Tìm kiếm theo tên, SĐT, email...\"\n            size=\"small\"\n            fullWidth\n            value={searchTerm}\n            onChange={handleSearch}\n            InputProps={{\n              startAdornment: <SearchIcon sx={{ color: 'action.active', mr: 1 }} />,\n            }}\n          />\n          <TextField\n            select\n            variant=\"outlined\"\n            size=\"small\"\n            value={statusFilter}\n            onChange={handleStatusFilterChange}\n            sx={{ minWidth: 200 }}\n            InputProps={{\n              startAdornment: <FilterIcon sx={{ color: 'action.active', mr: 1 }} />,\n            }}\n          >\n            {statusOptions.map((option) => (\n              <MenuItem key={option} value={option}>\n                {option}\n              </MenuItem>\n            ))}\n          </TextField>\n        </Box>\n\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Tên</TableCell>\n                <TableCell>Số điện thoại</TableCell>\n                <TableCell>Email</TableCell>\n                <TableCell>Công ty</TableCell>\n                <TableCell>Trạng thái</TableCell>\n                <TableCell>Người phụ trách</TableCell>\n                <TableCell>Ngày tạo</TableCell>\n                <TableCell>Thao tác</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {paginatedCustomers.map((customer) => (\n                <TableRow key={customer.id} hover>\n                  <TableCell>{customer.name}</TableCell>\n                  <TableCell>{customer.phone}</TableCell>\n                  <TableCell>{customer.email}</TableCell>\n                  <TableCell>{customer.company}</TableCell>\n                  <TableCell>\n                    <Box \n                      component=\"span\" \n                      sx={{\n                        p: '4px 8px',\n                        borderRadius: '4px',\n                        bgcolor: customer.status === 'Đã ký hợp đồng' ? '#e8f5e9' : \n                                 customer.status === 'Đang chăm sóc' ? '#e3f2fd' : '#fff3e0',\n                        color: customer.status === 'Đã ký hợp đồng' ? '#2e7d32' :\n                               customer.status === 'Đang chăm sóc' ? '#1565c0' : '#e65100',\n                      }}\n                    >\n                      {customer.status}\n                    </Box>\n                  </TableCell>\n                  <TableCell>{customer.owner}</TableCell>\n                  <TableCell>{customer.createdAt}</TableCell>\n                  <TableCell>\n                    <IconButton size=\"small\" onClick={() => handleOpenDialog(customer)}>\n                      <EditIcon fontSize=\"small\" color=\"primary\" />\n                    </IconButton>\n                    <IconButton size=\"small\" onClick={() => handleDeleteClick(customer)}>\n                      <DeleteIcon fontSize=\"small\" color=\"error\" />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={filteredCustomers.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n          labelRowsPerPage=\"Số dòng mỗi trang:\"\n          labelDisplayedRows={({ from, to, count }) => \n            `${from}-${to} trong số ${count}`\n          }\n        />\n      </Paper>\n\n      {/* Dialog thêm/sửa khách hàng */}\n      <Dialog open={openDialog} onClose={handleCloseDialog} maxWidth=\"sm\" fullWidth>\n        <form onSubmit={handleSubmit}>\n          <DialogTitle>{selectedCustomer ? 'Chỉnh sửa khách hàng' : 'Thêm khách hàng mới'}</DialogTitle>\n          <DialogContent>\n            <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, mt: 2 }}>\n              <TextField\n                name=\"name\"\n                label=\"Tên khách hàng\"\n                value={formData.name}\n                onChange={handleFormChange}\n                fullWidth\n                margin=\"normal\"\n                required\n              />\n              <Box sx={{ display: 'flex', gap: 2 }}>\n                <TextField\n                  name=\"phone\"\n                  label=\"Số điện thoại\"\n                  value={formData.phone}\n                  onChange={handleFormChange}\n                  fullWidth\n                  margin=\"normal\"\n                  required\n                />\n                <TextField\n                  name=\"email\"\n                  label=\"Email\"\n                  type=\"email\"\n                  value={formData.email}\n                  onChange={handleFormChange}\n                  fullWidth\n                  margin=\"normal\"\n                  required\n                />\n              </Box>\n              <Box sx={{ display: 'flex', gap: 2 }}>\n                <TextField\n                  name=\"company\"\n                  label=\"Công ty\"\n                  value={formData.company}\n                  onChange={handleFormChange}\n                  fullWidth\n                  margin=\"normal\"\n                />\n                <TextField\n                  name=\"owner\"\n                  select\n                  label=\"Người phụ trách\"\n                  value={formData.owner}\n                  onChange={handleFormChange}\n                  fullWidth\n                  margin=\"normal\"\n                >\n                  {['Nhân viên A', 'Nhân viên B', 'Nhân viên C', 'Nhân viên D', 'Nhân viên E'].map((option) => (\n                    <MenuItem key={option} value={option}>\n                      {option}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </Box>\n              <TextField\n                name=\"status\"\n                select\n                label=\"Trạng thái\"\n                value={formData.status}\n                onChange={handleFormChange}\n                fullWidth\n                margin=\"normal\"\n              >\n                {statusOptions.filter(opt => opt !== 'Tất cả').map((option) => (\n                  <MenuItem key={option} value={option}>\n                    {option}\n                  </MenuItem>\n                ))}\n              </TextField>\n              <TextField\n                name=\"notes\"\n                label=\"Ghi chú\"\n                value={formData.notes}\n                onChange={handleFormChange}\n                fullWidth\n                margin=\"normal\"\n                multiline\n                rows={3}\n              />\n            </Box>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseDialog}>Hủy</Button>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n              {selectedCustomer ? 'Cập nhật' : 'Thêm mới'}\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n\n      {/* Dialog xác nhận xóa */}\n      <Dialog\n        open={deleteConfirmOpen}\n        onClose={() => setDeleteConfirmOpen(false)}\n      >\n        <DialogTitle>Xác nhận xóa</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Bạn có chắc chắn muốn xóa khách hàng <strong>{selectedCustomer?.name}</strong>? Hành động này không thể hoàn tác.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setDeleteConfirmOpen(false)}>Hủy</Button>\n          <Button onClick={handleDeleteConfirm} color=\"error\" variant=\"contained\">\n            Xóa\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default CustomerManagement;\n"],"names":["getDialogContentTextUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","DialogContentTextRoot","styled","Typography","shouldForwardProp","prop","rootShouldForwardProp","name","React","inProps","ref","props","useDefaultProps","children","className","ownerState","_objectWithoutProperties","classes","composedClasses","composeClasses","root","_objectSpread","useUtilityClasses","_jsx","component","variant","color","clsx","createSvgIcon","d","fakeCustomers","Array","from","length","_","i","id","concat","phone","Math","floor","random","email","company","String","fromCharCode","status","owner","createdAt","Date","now","toLocaleDateString","notes","statusOptions","CustomerManagement","page","setPage","useState","rowsPerPage","setRowsPerPage","searchTerm","setSearchTerm","statusFilter","setStatusFilter","openDialog","setOpenDialog","selectedCustomer","setSelectedCustomer","deleteConfirmOpen","setDeleteConfirmOpen","formData","setFormData","handleOpenDialog","customer","arguments","undefined","handleCloseDialog","handleFormChange","e","value","target","prev","filteredCustomers","filter","matchesSearch","toLowerCase","includes","matchesStatus","paginatedCustomers","slice","_jsxs","Box","sx","p","display","justifyContent","alignItems","mb","Button","startIcon","AddIcon","onClick","Paper","gap","TextField","placeholder","size","fullWidth","onChange","event","InputProps","startAdornment","SearchIcon","mr","select","minWidth","FilterIcon","map","option","MenuItem","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","hover","borderRadius","bgcolor","IconButton","EditIcon","fontSize","handleDeleteClick","DeleteIcon","TablePagination","rowsPerPageOptions","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt","labelRowsPerPage","labelDisplayedRows","_ref","to","Dialog","open","onClose","maxWidth","onSubmit","preventDefault","console","log","DialogTitle","DialogContent","flexDirection","mt","label","margin","required","type","opt","multiline","rows","DialogActions","DialogContentText","handleDeleteConfirm"],"sourceRoot":""}