{"version":3,"file":"static/js/271.3e4c9338.chunk.js","mappings":"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","sources":["pages/ContractAppendices/index.tsx","../node_modules/@mui/material/esm/internal/svg-icons/Close.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Box, Typography, Tabs, Tab, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Chip, Button, IconButton, Snackbar, Alert } from '@mui/material';\nimport { Add } from '@mui/icons-material';\n\n// Tab value\ntype ContractAppendicesTab = 'templates' | 'appendices';\n\n// Interface for appendix template\ninterface AppendixTemplate {\n  id: string;\n  name: string;\n  description: string;\n  type: string;\n  status: 'active' | 'inactive';\n  createdAt: string;\n  updatedAt: string;\n  createdBy: string;\n}\n\n// Interface for contract appendix\ninterface ContractAppendix {\n  id: string;\n  name: string;\n  contractId: string;\n  contractName: string;\n  status: 'draft' | 'pending' | 'signed' | 'cancelled';\n  createdAt: string;\n  updatedAt: string;\n  createdBy: string;\n}\n\nconst ContractAppendices: React.FC = () => {\n  const [currentTab, setCurrentTab] = useState<ContractAppendicesTab>('templates');\n  const [templates, setTemplates] = useState<AppendixTemplate[]>([]);\n  const [appendices, setAppendices] = useState<ContractAppendix[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [snackbar, setSnackbar] = useState<{\n    open: boolean;\n    message: string;\n    severity: 'success' | 'error' | 'info' | 'warning';\n  }>({ open: false, message: '', severity: 'success' });\n\n  const handleTabChange = (event: React.SyntheticEvent, newValue: ContractAppendicesTab) => {\n    setCurrentTab(newValue);\n  };\n  \n  const handleCloseSnackbar = () => {\n    setSnackbar(prev => ({ ...prev, open: false }));\n  };\n\n  // Tải dữ liệu khi component được mount\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        // TODO: Replace with actual API call\n        // Simulate API call\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        \n        // Mock data for templates\n        const mockTemplates: AppendixTemplate[] = [\n          {\n            id: '1',\n            name: 'Phụ lục gia hạn hợp đồng',\n            description: 'Mẫu phụ lục gia hạn thời gian hợp đồng',\n            type: 'extension',\n            status: 'active',\n            createdAt: '2025-06-30T10:00:00Z',\n            updatedAt: '2025-06-30T10:00:00Z',\n            createdBy: 'Nguyễn Văn A'\n          },\n          {\n            id: '2',\n            name: 'Phụ lục thay đổi giá trị',\n            description: 'Mẫu phụ lục thay đổi giá trị hợp đồng',\n            type: 'value',\n            status: 'active',\n            createdAt: '2025-06-29T15:30:00Z',\n            updatedAt: '2025-06-29T15:30:00Z',\n            createdBy: 'Trần Thị B'\n          }\n        ];\n        \n        // Mock data for appendices\n        const mockAppendices: ContractAppendix[] = [\n          {\n            id: 'PL001',\n            name: 'Phụ lục gia hạn HĐ-001',\n            contractId: 'HĐ-001',\n            contractName: 'Hợp đồng mua bán thiết bị',\n            status: 'signed',\n            createdAt: '2025-07-01T09:00:00Z',\n            updatedAt: '2025-07-01T14:30:00Z',\n            createdBy: 'Nguyễn Văn A'\n          },\n          {\n            id: 'PL002',\n            name: 'Phụ lục thay đổi giá trị HĐ-002',\n            contractId: 'HĐ-002',\n            contractName: 'Hợp đồng cung cấp dịch vụ',\n            status: 'draft',\n            createdAt: '2025-07-02T10:15:00Z',\n            updatedAt: '2025-07-02T10:15:00Z',\n            createdBy: 'Trần Thị B'\n          }\n        ];\n        \n        setTemplates(mockTemplates);\n        setAppendices(mockAppendices);\n      } catch (error) {\n        console.error('Error loading data:', error);\n        setSnackbar({\n          open: true,\n          message: 'Có lỗi xảy ra khi tải dữ liệu. Vui lòng thử lại.',\n          severity: 'error',\n        });\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchData();\n  }, []);\n\n  return (\n    <Box sx={{ p: 3 }}>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\n        <Typography variant=\"h4\" gutterBottom>\n          Quản lý phụ lục hợp đồng\n        </Typography>\n      </Box>\n      \n      <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 3 }}>\n        <Tabs \n          value={currentTab} \n          onChange={handleTabChange}\n          aria-label=\"contract appendices tabs\"\n        >\n          <Tab label=\"Mẫu phụ lục hợp đồng\" value=\"templates\" />\n          <Tab label=\"Phụ lục hợp đồng\" value=\"appendices\" />\n        </Tabs>\n      </Box>\n      \n      {currentTab === 'templates' ? (\n        <Paper sx={{ p: 3 }}>\n          <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\n            <Typography variant=\"h6\" gutterBottom>\n              Danh sách mẫu phụ lục hợp đồng\n            </Typography>\n            <Button \n              variant=\"contained\" \n              color=\"primary\"\n              startIcon={<Add />}\n            >\n              Tạo mẫu phụ lục mới\n            </Button>\n          </Box>\n          \n          {loading ? (\n            <Typography color=\"textSecondary\" paragraph>\n              Đang tải danh sách mẫu phụ lục...\n            </Typography>\n          ) : (\n            <TableContainer>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Mã</TableCell>\n                    <TableCell>Tên mẫu phụ lục</TableCell>\n                    <TableCell>Mô tả</TableCell>\n                    <TableCell>Loại</TableCell>\n                    <TableCell>Ngày tạo</TableCell>\n                    <TableCell>Trạng thái</TableCell>\n                    <TableCell>Hành động</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {templates.map((template) => (\n                    <TableRow \n                      key={template.id} \n                      hover \n                      sx={{ cursor: 'pointer' }}\n                    >\n                      <TableCell>{template.id}</TableCell>\n                      <TableCell>{template.name}</TableCell>\n                      <TableCell>{template.description}</TableCell>\n                      <TableCell>{template.type}</TableCell>\n                      <TableCell>{new Date(template.createdAt).toLocaleDateString()}</TableCell>\n                      <TableCell>\n                        <Chip \n                          label={template.status === 'active' ? 'Hoạt động' : 'Không hoạt động'}\n                          color={template.status === 'active' ? 'success' : 'default'}\n                          size=\"small\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <IconButton size=\"small\" color=\"primary\">\n                          <Add />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          )}\n        </Paper>\n      ) : (\n        <Paper sx={{ p: 3 }}>\n          <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\n            <Typography variant=\"h6\" gutterBottom>\n              Danh sách phụ lục hợp đồng\n            </Typography>\n            <Button \n              variant=\"contained\" \n              color=\"primary\"\n              startIcon={<Add />}\n            >\n              Tạo phụ lục mới\n            </Button>\n          </Box>\n          \n          {loading ? (\n            <Typography color=\"textSecondary\" paragraph>\n              Đang tải danh sách phụ lục hợp đồng...\n            </Typography>\n          ) : (\n            <TableContainer>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Mã PL</TableCell>\n                    <TableCell>Tên phụ lục</TableCell>\n                    <TableCell>Mã HĐ</TableCell>\n                    <TableCell>Tên hợp đồng</TableCell>\n                    <TableCell>Ngày tạo</TableCell>\n                    <TableCell>Trạng thái</TableCell>\n                    <TableCell>Hành động</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {appendices.map((appendix) => (\n                    <TableRow \n                      key={appendix.id} \n                      hover \n                      sx={{ cursor: 'pointer' }}\n                    >\n                      <TableCell>{appendix.id}</TableCell>\n                      <TableCell>{appendix.name}</TableCell>\n                      <TableCell>{appendix.contractId}</TableCell>\n                      <TableCell>{appendix.contractName}</TableCell>\n                      <TableCell>{new Date(appendix.createdAt).toLocaleDateString()}</TableCell>\n                      <TableCell>\n                        <Chip \n                          label={\n                            appendix.status === 'signed' ? 'Đã ký' :\n                            appendix.status === 'pending' ? 'Chờ ký' :\n                            appendix.status === 'draft' ? 'Bản nháp' :\n                            'Đã hủy'\n                          }\n                          color={\n                            appendix.status === 'signed' ? 'success' :\n                            appendix.status === 'pending' ? 'warning' :\n                            appendix.status === 'draft' ? 'info' :\n                            'error'\n                          }\n                          size=\"small\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <IconButton size=\"small\" color=\"primary\">\n                          <Add />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          )}\n        </Paper>\n      )}\n      \n      <Snackbar \n        open={snackbar.open} \n        autoHideDuration={6000} \n        onClose={handleCloseSnackbar}\n      >\n        <Alert \n          onClose={handleCloseSnackbar} \n          severity={snackbar.severity}\n          sx={{ width: '100%' }}\n        >\n          {snackbar.message}\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n};\n\nexport default ContractAppendices;\n","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n *\n * Alias to `Clear`.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');"],"names":["ContractAppendices","currentTab","setCurrentTab","useState","templates","setTemplates","appendices","setAppendices","loading","setLoading","snackbar","setSnackbar","open","message","severity","handleCloseSnackbar","prev","_objectSpread","useEffect","async","Promise","resolve","setTimeout","mockAppendices","id","name","contractId","contractName","status","createdAt","updatedAt","createdBy","description","type","error","console","fetchData","_jsxs","Box","sx","p","children","_jsx","display","justifyContent","alignItems","mb","Typography","variant","gutterBottom","borderBottom","borderColor","Tabs","value","onChange","handleTabChange","event","newValue","Tab","label","Paper","Button","color","startIcon","Add","paragraph","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","map","template","hover","cursor","Date","toLocaleDateString","Chip","size","IconButton","appendix","Snackbar","autoHideDuration","onClose","Alert","width","createSvgIcon","d"],"sourceRoot":""}