{"version":3,"file":"static/js/259.84506670.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/esm/TableFooter/tableFooterClasses.js","../node_modules/@mui/material/esm/TableFooter/TableFooter.js","../node_modules/@mui/system/esm/Stack/createStack.js","../node_modules/@mui/material/esm/Stack/Stack.js","../node_modules/@mui/system/esm/styled/styled.js","../node_modules/@mui/icons-material/esm/NavigateNext.js","../node_modules/@mui/icons-material/esm/DragIndicator.js","../node_modules/@mui/icons-material/esm/Cancel.js","pages/QuotationManagement/components/FixedPriceTable/index.tsx","pages/QuotationManagement/components/TimeAndMaterialTable/index.tsx","pages/QuotationManagement/components/EstimationStep/index.tsx","pages/QuotationManagement/components/QuotationForm/index.tsx","../node_modules/@mui/icons-material/esm/Email.js","pages/QuotationManagement/components/EstimationTable/index.tsx","pages/QuotationManagement/components/QuotationDetail/index.tsx","pages/QuotationManagement/components/QuotationPreview/index.tsx","pages/QuotationManagement/components/QuotationList/index.tsx","pages/QuotationManagement/components/EmailQuotationDialog/index.tsx","pages/QuotationManagement/components/QuotationTemplates/index.tsx","pages/QuotationManagement/components/UploadQuoteTemplate/index.tsx","pages/QuotationManagement/index.tsx"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableFooterUtilityClass(slot) {\n  return generateUtilityClass('MuiTableFooter', slot);\n}\nconst tableFooterClasses = generateUtilityClasses('MuiTableFooter', ['root']);\nexport default tableFooterClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Tablelvl2Context from \"../Table/Tablelvl2Context.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getTableFooterUtilityClass } from \"./tableFooterClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableFooterUtilityClass, classes);\n};\nconst TableFooterRoot = styled('tfoot', {\n  name: 'MuiTableFooter',\n  slot: 'Root'\n})({\n  display: 'table-footer-group'\n});\nconst tablelvl2 = {\n  variant: 'footer'\n};\nconst defaultComponent = 'tfoot';\nconst TableFooter = /*#__PURE__*/React.forwardRef(function TableFooter(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableFooter'\n  });\n  const {\n    className,\n    component = defaultComponent,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableFooterRoot, {\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState,\n      ...other\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableFooter.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableFooter;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport deepmerge from '@mui/utils/deepmerge';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport composeClasses from '@mui/utils/composeClasses';\nimport systemStyled from \"../styled/index.js\";\nimport useThemePropsSystem from \"../useThemeProps/index.js\";\nimport { extendSxProp } from \"../styleFunctionSx/index.js\";\nimport createTheme from \"../createTheme/index.js\";\nimport { handleBreakpoints, mergeBreakpointsInOrder, resolveBreakpointValues } from \"../breakpoints/index.js\";\nimport { createUnarySpacing, getValue } from \"../spacing/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\n// widening Theme to any so that the consumer can own the theme structure.\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiStack',\n  slot: 'Root'\n});\nfunction useThemePropsDefault(props) {\n  return useThemePropsSystem({\n    props,\n    name: 'MuiStack',\n    defaultTheme\n  });\n}\n\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\nfunction joinChildren(children, separator) {\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce((output, child, index) => {\n    output.push(child);\n    if (index < childrenArray.length - 1) {\n      output.push(/*#__PURE__*/React.cloneElement(separator, {\n        key: `separator-${index}`\n      }));\n    }\n    return output;\n  }, []);\n}\nconst getSideFromDirection = direction => {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\nexport const style = ({\n  ownerState,\n  theme\n}) => {\n  let styles = {\n    display: 'flex',\n    flexDirection: 'column',\n    ...handleBreakpoints({\n      theme\n    }, resolveBreakpointValues({\n      values: ownerState.direction,\n      breakpoints: theme.breakpoints.values\n    }), propValue => ({\n      flexDirection: propValue\n    }))\n  };\n  if (ownerState.spacing) {\n    const transformer = createUnarySpacing(theme);\n    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n      if (typeof ownerState.spacing === 'object' && ownerState.spacing[breakpoint] != null || typeof ownerState.direction === 'object' && ownerState.direction[breakpoint] != null) {\n        acc[breakpoint] = true;\n      }\n      return acc;\n    }, {});\n    const directionValues = resolveBreakpointValues({\n      values: ownerState.direction,\n      base\n    });\n    const spacingValues = resolveBreakpointValues({\n      values: ownerState.spacing,\n      base\n    });\n    if (typeof directionValues === 'object') {\n      Object.keys(directionValues).forEach((breakpoint, index, breakpoints) => {\n        const directionValue = directionValues[breakpoint];\n        if (!directionValue) {\n          const previousDirectionValue = index > 0 ? directionValues[breakpoints[index - 1]] : 'column';\n          directionValues[breakpoint] = previousDirectionValue;\n        }\n      });\n    }\n    const styleFromPropValue = (propValue, breakpoint) => {\n      if (ownerState.useFlexGap) {\n        return {\n          gap: getValue(transformer, propValue)\n        };\n      }\n      return {\n        // The useFlexGap={false} implement relies on each child to give up control of the margin.\n        // We need to reset the margin to avoid double spacing.\n        '& > :not(style):not(style)': {\n          margin: 0\n        },\n        '& > :not(style) ~ :not(style)': {\n          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer, propValue)\n        }\n      };\n    };\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, styleFromPropValue));\n  }\n  styles = mergeBreakpointsInOrder(theme.breakpoints, styles);\n  return styles;\n};\nexport default function createStack(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiStack'\n  } = options;\n  const useUtilityClasses = () => {\n    const slots = {\n      root: ['root']\n    };\n    return composeClasses(slots, slot => generateUtilityClass(componentName, slot), {});\n  };\n  const StackRoot = createStyledComponent(style);\n  const Stack = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n    const themeProps = useThemeProps(inProps);\n    const props = extendSxProp(themeProps); // `color` type conflicts with html color attribute.\n    const {\n      component = 'div',\n      direction = 'column',\n      spacing = 0,\n      divider,\n      children,\n      className,\n      useFlexGap = false,\n      ...other\n    } = props;\n    const ownerState = {\n      direction,\n      spacing,\n      useFlexGap\n    };\n    const classes = useUtilityClasses();\n    return /*#__PURE__*/_jsx(StackRoot, {\n      as: component,\n      ownerState: ownerState,\n      ref: ref,\n      className: clsx(classes.root, className),\n      ...other,\n      children: divider ? joinChildren(children, divider) : children\n    });\n  });\n  process.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n    divider: PropTypes.node,\n    spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Stack;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createStack } from '@mui/system';\nimport styled from \"../styles/styled.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nconst Stack = createStack({\n  createStyledComponent: styled('div', {\n    name: 'MuiStack',\n    slot: 'Root'\n  }),\n  useThemeProps: inProps => useDefaultProps({\n    props: inProps,\n    name: 'MuiStack'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the CSS flexbox `gap` is used instead of applying `margin` to children.\n   *\n   * While CSS `gap` removes the [known limitations](https://mui.com/joy-ui/react-stack/#limitations),\n   * it is not fully supported in some browsers. We recommend checking https://caniuse.com/?search=flex%20gap before using this flag.\n   *\n   * To enable this flag globally, follow the [theme's default props](https://mui.com/material-ui/customization/theme-components/#default-props) configuration.\n   * @default false\n   */\n  useFlexGap: PropTypes.bool\n} : void 0;\nexport default Stack;","import createStyled from \"../createStyled/index.js\";\nconst styled = createStyled();\nexport default styled;","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 6 8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'NavigateNext');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2m-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2m0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2m6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2m0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2m0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2\"\n}), 'DragIndicator');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2m5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12z\"\n}), 'Cancel');","import React, { useState } from 'react';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  TextField,\n  IconButton,\n  Button,\n  Box,\n  Typography,\n  Tooltip,\n  TableFooter,\n  TablePagination,\n} from '@mui/material';\nimport {\n  Add as AddIcon,\n  Delete as DeleteIcon,\n  Edit as EditIcon,\n  Save as SaveIcon,\n  Cancel as CancelIcon,\n  DragIndicator as DragHandleIcon,\n} from '@mui/icons-material';\nimport { EffortColumn, EstimationRow } from '../../types/quoteTemplate';\n\n// Các cột cố định không thể xóa\nconst FIXED_COLUMNS: Omit<EffortColumn, 'id' | 'key' | 'order'>[] = [\n  { name: 'Feature', isFixed: true },\n  { name: 'Detail', isFixed: true },\n  { name: 'Description', isFixed: true },\n  { name: 'Notes', isFixed: true },\n  { name: 'IT Req', isFixed: true, isEffort: true },\n  { name: 'UX/UI', isFixed: true, isEffort: true },\n];\n\ninterface FixedPriceTableProps {\n  rows: EstimationRow[];\n  effortColumns: EffortColumn[];\n  onRowsChange: (rows: EstimationRow[]) => void;\n  onColumnsChange: (columns: EffortColumn[]) => void;\n}\n\nconst FixedPriceTable: React.FC<FixedPriceTableProps> = ({\n  rows = [],\n  effortColumns = [],\n  onRowsChange,\n  onColumnsChange,\n}) => {\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [newColumnName, setNewColumnName] = useState('');\n  const [editingColumn, setEditingColumn] = useState<string | null>(null);\n  const [editColumnName, setEditColumnName] = useState('');\n\n  // Xử lý thay đổi trang\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  // Xử lý thay đổi số dòng mỗi trang\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  // Thêm cột effort mới\n  const handleAddColumn = () => {\n    if (!newColumnName.trim()) return;\n    \n    // Đặt thứ tự của cột mới cao hơn các cột cố định nhưng thấp hơn cột hành động\n    // Cột hành động sẽ có thứ tự cao nhất (1000)\n    const newColumn: EffortColumn = {\n      id: `col-${Date.now()}`,\n      name: newColumnName.trim(),\n      key: `effort-${Date.now()}`,\n      order: 900, // Thứ tự cao để đảm bảo nằm sau các cột cố định nhưng trước cột hành động\n      isFixed: false,\n      color: '#ffffff' // Màu mặc định\n    };\n\n    onColumnsChange([...effortColumns, newColumn]);\n    setNewColumnName('');\n  };\n\n  // Bắt đầu chỉnh sửa tên cột\n  const startEditingColumn = (columnId: string, currentName: string) => {\n    setEditingColumn(columnId);\n    setEditColumnName(currentName);\n  };\n\n  // Lưu tên cột đã chỉnh sửa\n  const saveColumnName = (columnId: string) => {\n    const updatedColumns = effortColumns.map(col => \n      col.id === columnId ? { ...col, name: editColumnName } : col\n    );\n    onColumnsChange(updatedColumns);\n    setEditingColumn(null);\n  };\n\n  // Xóa cột\n  const handleDeleteColumn = (columnId: string) => {\n    const columnToDelete = effortColumns.find(col => col.id === columnId);\n    if (!columnToDelete?.isFixed) {\n      const updatedColumns = effortColumns.filter(col => col.id !== columnId);\n      onColumnsChange(updatedColumns);\n      \n      // Cập nhật dữ liệu hàng để xóa cột effort tương ứng\n      const updatedRows = rows.map(row => {\n        const { [columnToDelete?.key || '']: _, ...restEfforts } = row.efforts || {};\n        return { ...row, efforts: restEfforts };\n      });\n      onRowsChange(updatedRows);\n    }\n  };\n\n  // Cập nhật giá trị ô\n  const handleCellChange = (\n    rowId: string,\n    field: string,\n    value: string | number\n  ) => {\n    const updatedRows = rows.map(row => {\n      if (row.id === rowId) {\n        if (field.startsWith('effort-')) {\n          return {\n            ...row,\n            efforts: {\n              ...row.efforts,\n              [field]: Number(value) || 0,\n            },\n          };\n        }\n        return { ...row, [field]: value };\n      }\n      return row;\n    });\n    onRowsChange(updatedRows);\n  };\n\n  // Thêm hàng mới\n  const handleAddRow = () => {\n    const newRow: EstimationRow = {\n      id: `row-${Date.now()}`,\n      feature: '',\n      detail: '',\n      description: '',\n      notes: '',\n      itReq: '',\n      uxUi: '',\n      efforts: {},\n    };\n    onRowsChange([...rows, newRow]);\n  };\n\n  // Xóa hàng\n  const handleDeleteRow = (rowId: string) => {\n    onRowsChange(rows.filter(row => row.id !== rowId));\n  };\n\n  // Tính tổng cho từng cột effort\n  const calculateColumnTotal = (columnKey: string) => {\n    return rows.reduce((sum, row) => {\n      return sum + (Number(row.efforts?.[columnKey]) || 0);\n    }, 0);\n  };\n\n  // Lấy tất cả các cột (cố định + động)\n  const fixedColumnsWithIds = FIXED_COLUMNS.map((col, index) => ({\n    ...col,\n    id: `fixed-${index}`,\n    key: col.name.toLowerCase().replace(/\\s+/g, '-'),\n    order: index, // Các cột cố định có thứ tự thấp (0-5)\n  }));\n  \n  // Chỉ lấy các cột effort không trùng với các cột cố định\n  const nonDuplicateEffortColumns = effortColumns.filter(effortCol => \n    !fixedColumnsWithIds.some(fixedCol => fixedCol.key === effortCol.key)\n  );\n  \n  // Thêm cột Subtotal (days) với thứ tự cao\n  const subtotalColumn = {\n    id: 'subtotal-column',\n    name: 'Subtotal (days)',\n    key: 'subtotal',\n    order: 950, // Thứ tự cao để đảm bảo nằm sau các cột effort nhưng trước cột hành động\n    isFixed: true,\n  };\n  \n  // Sắp xếp các cột theo thứ tự\n  const allColumns = [\n    ...fixedColumnsWithIds,\n    ...nonDuplicateEffortColumns,\n    subtotalColumn, // Thêm cột subtotal\n  ].sort((a, b) => a.order - b.order);\n\n  return (\n    <Box>\n      {/* Thanh công cụ */}\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2 }}>\n        <Box>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<AddIcon />}\n            onClick={handleAddRow}\n            size=\"small\"\n            sx={{ mr: 1 }}\n          >\n            Thêm dòng\n          </Button>\n        </Box>\n        \n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\n          <TextField\n            size=\"small\"\n            placeholder=\"Tên cột mới\"\n            value={newColumnName}\n            onChange={(e) => setNewColumnName(e.target.value)}\n            sx={{ mr: 1, minWidth: 150 }}\n          />\n          <Button\n            variant=\"outlined\"\n            startIcon={<AddIcon />}\n            onClick={handleAddColumn}\n            size=\"small\"\n            disabled={!newColumnName.trim()}\n          >\n            Thêm cột\n          </Button>\n        </Box>\n      </Box>\n\n      {/* Bảng dữ liệu */}\n      <TableContainer component={Paper} sx={{ maxHeight: 600, overflow: 'auto' }}>\n        <Table stickyHeader size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell width={50}>#</TableCell>\n              {allColumns.map((column) => (\n                <TableCell key={column.id}>\n                  <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                    <DragHandleIcon \n                      sx={{ \n                        mr: 1, \n                        cursor: 'move',\n                        opacity: column.isFixed ? 0.3 : 1,\n                        '&:hover': {\n                          opacity: 1,\n                        },\n                      }} \n                    />\n                    \n                    {editingColumn === column.id ? (\n                      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                        <TextField\n                          value={editColumnName}\n                          onChange={(e) => setEditColumnName(e.target.value)}\n                          size=\"small\"\n                          sx={{ mr: 1 }}\n                        />\n                        <IconButton \n                          size=\"small\" \n                          onClick={() => saveColumnName(column.id)}\n                          color=\"primary\"\n                        >\n                          <SaveIcon fontSize=\"small\" />\n                        </IconButton>\n                        <IconButton \n                          size=\"small\" \n                          onClick={() => setEditingColumn(null)}\n                          color=\"error\"\n                        >\n                          <CancelIcon fontSize=\"small\" />\n                        </IconButton>\n                      </Box>\n                    ) : (\n                      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                        <Typography variant=\"subtitle2\">\n                          {column.name}\n                        </Typography>\n                        {!column.isFixed && (\n                          <Box sx={{ ml: 1 }}>\n                            <IconButton \n                              size=\"small\" \n                              onClick={() => startEditingColumn(column.id, column.name)}\n                              sx={{ p: 0.5 }}\n                            >\n                              <EditIcon fontSize=\"small\" />\n                            </IconButton>\n                            <IconButton \n                              size=\"small\" \n                              onClick={() => handleDeleteColumn(column.id)}\n                              sx={{ p: 0.5 }}\n                              color=\"error\"\n                            >\n                              <DeleteIcon fontSize=\"small\" />\n                            </IconButton>\n                          </Box>\n                        )}\n                      </Box>\n                    )}\n                  </Box>\n                </TableCell>\n              ))}\n              {/* Cột hành động luôn ở cuối */}\n              <TableCell width={80}>Hành động</TableCell>\n            </TableRow>\n          </TableHead>\n          \n          <TableBody>\n            {rows\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row, rowIndex) => (\n                <TableRow key={row.id} hover>\n                  <TableCell>{page * rowsPerPage + rowIndex + 1}</TableCell>\n                  \n                  {allColumns.map((column) => {\n                    // Kiểm tra nếu column key là của các cột effort\n                    const isEffortColumn = column.key === 'it-req' || column.key === 'ux/ui' || \n                                         column.key.startsWith('effort-') || \n                                         (column as EffortColumn).isEffort === true;\n                    \n                    // Log ra để kiểm tra key của các cột\n                    console.log('Column key:', column.key, 'isEffort:', isEffortColumn);\n                    \n                    // Kiểm tra nếu là cột subtotal\n                    const isSubtotalColumn = column.key === 'subtotal';\n                    \n                    return (\n                      <TableCell key={`${row.id}-${column.key}`}>\n                        {isEffortColumn ? (\n                          <TextField\n                            type=\"number\"\n                            value={column.key === 'it-req' ? row.itReq || '' : \n                                  column.key === 'ux/ui' ? row.uxUi || '' : \n                                  row.efforts?.[column.key] || ''}\n                            onChange={(e) => {\n                              const value = e.target.value;\n                              // Xử lý đặc biệt cho các cột IT Req và UX/UI\n                              if (column.key === 'it-req') {\n                                handleCellChange(row.id, 'itReq', value);\n                              } else if (column.key === 'ux/ui') {\n                                handleCellChange(row.id, 'uxUi', value);\n                              } else {\n                                handleCellChange(row.id, column.key, value);\n                              }\n                            }}\n                            size=\"small\"\n                            fullWidth\n                            inputProps={{ min: 0, step: 0.5 }}\n                          />\n                        ) : isSubtotalColumn ? (\n                          // Hiển thị tổng ngày công cho mỗi dòng\n                          <Typography variant=\"body2\" fontWeight=\"bold\">\n                            {Object.keys(row.efforts || {}).reduce((sum, key) => sum + (Number(row.efforts?.[key]) || 0), 0) + \n                             (Number(row.itReq) || 0) + (Number(row.uxUi) || 0)}\n                          </Typography>\n                        ) : (\n                          <TextField\n                            value={row[column.key as keyof EstimationRow] || ''}\n                            onChange={(e) => \n                              handleCellChange(row.id, column.key, e.target.value)\n                            }\n                            size=\"small\"\n                            fullWidth\n                            multiline\n                            maxRows={4}\n                          />\n                        )}\n                      </TableCell>\n                    );\n                  })}\n                  \n                  <TableCell>\n                    <Tooltip title=\"Xóa dòng\">\n                      <IconButton \n                        size=\"small\" \n                        color=\"error\"\n                        onClick={() => handleDeleteRow(row.id)}\n                      >\n                        <DeleteIcon fontSize=\"small\" />\n                      </IconButton>\n                    </Tooltip>\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n          \n          {/* Dòng tổng cộng */}\n          <TableFooter>\n            <TableRow>\n              <TableCell colSpan={FIXED_COLUMNS.length + 1} align=\"right\">\n                <strong>Tổng cộng:</strong>\n              </TableCell>\n              {effortColumns.map((column) => (\n                <TableCell key={`total-${column.key}`}>\n                  <strong>{calculateColumnTotal(column.key)}</strong>\n                </TableCell>\n              ))}\n              {/* Cột Subtotal tổng */}\n              <TableCell>\n                <strong>\n                  {rows.reduce((sum, row) => {\n                    const rowTotal = Object.keys(row.efforts || {}).reduce(\n                      (rowSum, key) => rowSum + (Number(row.efforts?.[key]) || 0), 0\n                    ) + (Number(row.itReq) || 0) + (Number(row.uxUi) || 0);\n                    return sum + rowTotal;\n                  }, 0)}\n                </strong>\n              </TableCell>\n              <TableCell />\n            </TableRow>\n            {/* Thêm dòng Tổng cộng - Theo giai đoạn (ngày công) */}\n            <TableRow sx={{ backgroundColor: '#f5f5f5' }}>\n              <TableCell colSpan={FIXED_COLUMNS.length + effortColumns.length + 1} align=\"right\">\n                <strong>Tổng cộng - Theo giai đoạn (ngày công):</strong>\n              </TableCell>\n              <TableCell>\n                <strong>\n                  {rows.reduce((sum, row) => {\n                    const rowTotal = Object.keys(row.efforts || {}).reduce(\n                      (rowSum, key) => rowSum + (Number(row.efforts?.[key]) || 0), 0\n                    ) + (Number(row.itReq) || 0) + (Number(row.uxUi) || 0);\n                    return sum + rowTotal;\n                  }, 0)}\n                </strong>\n              </TableCell>\n              <TableCell />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </TableContainer>\n      \n      {/* Phân trang */}\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25, 50]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n        labelRowsPerPage=\"Số dòng mỗi trang:\"\n        labelDisplayedRows={({ from, to, count }) => \n          `${from}-${to} trong tổng số ${count}`\n        }\n      />\n    </Box>\n  );\n};\n\nexport default FixedPriceTable;\n","import React, { useState } from 'react';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  TextField,\n  IconButton,\n  Button,\n  Box,\n  Typography,\n  TableFooter,\n  TablePagination,\n  MenuItem,\n  Select,\n  FormControl,\n  InputLabel,\n  Tooltip,\n} from '@mui/material';\nimport {\n  Add as AddIcon,\n  Delete as DeleteIcon,\n} from '@mui/icons-material';\nimport { TimeAndMaterialRate } from '../../types/quoteTemplate';\n\n// Các vai trò mặc định\nconst DEFAULT_ROLES = [\n  'Project Manager',\n  'Business Analyst',\n  'Developer',\n  'Tester',\n  'UI/UX Designer',\n  'DevOps',\n  'System Architect',\n  'Technical Lead',\n];\n\ninterface TimeAndMaterialTableProps {\n  rates: TimeAndMaterialRate[];\n  onRatesChange: (rates: TimeAndMaterialRate[]) => void;\n}\n\nconst TimeAndMaterialTable: React.FC<TimeAndMaterialTableProps> = ({\n  rates = [],\n  onRatesChange,\n}) => {\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [newRole, setNewRole] = useState('');\n  const [customRole, setCustomRole] = useState('');\n\n  // Xử lý thay đổi trang\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  // Xử lý thay đổi số dòng mỗi trang\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  // Thêm dòng mới\n  const handleAddRow = () => {\n    if (!newRole && !customRole) return;\n    \n    const roleToAdd = newRole === 'custom' ? customRole : newRole;\n    \n    // Kiểm tra nếu vai trò đã tồn tại\n    if (rates.some(rate => rate.role.toLowerCase() === roleToAdd.toLowerCase())) {\n      alert('Vai trò này đã tồn tại');\n      return;\n    }\n\n    const newRate: TimeAndMaterialRate = {\n      id: `rate-${Date.now()}`,\n      role: roleToAdd,\n      rate: 0,\n      unit: 'hour',\n      description: ''\n    };\n\n    onRatesChange([...rates, newRate]);\n    setNewRole('');\n    setCustomRole('');\n  };\n\n  // Cập nhật giá trị\n  const handleRateChange = (id: string, field: keyof TimeAndMaterialRate, value: any) => {\n    const updatedRates = rates.map(rate => \n      rate.id === id ? { ...rate, [field]: value } : rate\n    ) as TimeAndMaterialRate[];\n    onRatesChange(updatedRates);\n  };\n\n  // Xóa dòng\n  const handleDeleteRow = (id: string) => {\n    onRatesChange(rates.filter(rate => rate.id !== id));\n  };\n\n  // Tính tổng tiền\n  const calculateTotal = () => {\n    return rates.reduce((sum, rate) => {\n      return sum + (rate.rate || 0);\n    }, 0);\n  };\n\n  // Tính tổng số giờ/ngày\n  const calculateTotalHours = () => {\n    return rates.reduce((sum, rate) => {\n      const hours = rate.unit === 'hour' ? 1 : 8; // 1 ngày = 8 giờ\n      return sum + (rate.rate || 0) * hours;\n    }, 0);\n  };\n\n  return (\n    <Box>\n      {/* Thanh công cụ */}\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2 }}>\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n          <FormControl variant=\"outlined\" size=\"small\" sx={{ minWidth: 200 }}>\n            <InputLabel>Chọn vai trò</InputLabel>\n            <Select\n              value={newRole}\n              onChange={(e) => setNewRole(e.target.value as string)}\n              label=\"Chọn vai trò\"\n            >\n              <MenuItem value=\"\">\n                <em>Chọn vai trò</em>\n              </MenuItem>\n              {DEFAULT_ROLES.map((role) => (\n                <MenuItem key={role} value={role}>\n                  {role}\n                </MenuItem>\n              ))}\n              <MenuItem value=\"custom\">\n                <em>+ Thêm vai trò khác</em>\n              </MenuItem>\n            </Select>\n          </FormControl>\n\n          {newRole === 'custom' && (\n            <TextField\n              size=\"small\"\n              label=\"Tên vai trò\"\n              value={customRole}\n              onChange={(e) => setCustomRole(e.target.value)}\n              sx={{ minWidth: 200 }}\n            />\n          )}\n\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<AddIcon />}\n            onClick={handleAddRow}\n            disabled={!newRole || (newRole === 'custom' && !customRole.trim())}\n          >\n            Thêm\n          </Button>\n        </Box>\n      </Box>\n\n      {/* Bảng dữ liệu */}\n      <TableContainer component={Paper}>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell width={50}>#</TableCell>\n              <TableCell>Vai trò</TableCell>\n              <TableCell align=\"right\">Số giờ/MD</TableCell>\n              <TableCell>Đơn vị</TableCell>\n              <TableCell align=\"right\">Đơn giá</TableCell>\n              <TableCell align=\"right\">Thành tiền</TableCell>\n              <TableCell width={80}></TableCell>\n            </TableRow>\n          </TableHead>\n          \n          <TableBody>\n            {rates\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((rate, index) => (\n                <TableRow key={rate.id} hover>\n                  <TableCell>{page * rowsPerPage + index + 1}</TableCell>\n                  \n                  <TableCell>\n                    <TextField\n                      value={rate.role}\n                      onChange={(e) => handleRateChange(rate.id, 'role', e.target.value)}\n                      size=\"small\"\n                      fullWidth\n                    />\n                  </TableCell>\n                  \n                  <TableCell>\n                    <TextField\n                      type=\"number\"\n                      value={rate.rate || ''}\n                      onChange={(e) => handleRateChange(rate.id, 'rate', Number(e.target.value))}\n                      size=\"small\"\n                      fullWidth\n                      inputProps={{ min: 0, step: 0.01 }}\n                    />\n                  </TableCell>\n                  \n                  <TableCell>\n                    <Select\n                      value={rate.unit}\n                      onChange={(e) => handleRateChange(rate.id, 'unit', e.target.value)}\n                      size=\"small\"\n                      fullWidth\n                    >\n                      <MenuItem value=\"hour\">Giờ</MenuItem>\n                      <MenuItem value=\"day\">Ngày công (MD)</MenuItem>\n                    </Select>\n                  </TableCell>\n                  \n                  <TableCell align=\"right\">\n                    {new Intl.NumberFormat('vi-VN', {\n                      style: 'currency',\n                      currency: 'VND',\n                    }).format(rate.rate || 0)}\n                    <Typography variant=\"caption\" display=\"block\" color=\"text.secondary\">\n                      /{rate.unit === 'hour' ? 'giờ' : 'MD'}\n                    </Typography>\n                  </TableCell>\n                  \n                  <TableCell align=\"right\">\n                    {new Intl.NumberFormat('vi-VN', {\n                      style: 'currency',\n                      currency: 'VND',\n                    }).format(rate.rate * (rate.unit === 'hour' ? 1 : 8) || 0)}\n                    <Typography variant=\"caption\" display=\"block\" color=\"text.secondary\">\n                      ({rate.unit === 'hour' ? '1 giờ' : '1 MD = 8 giờ'})\n                    </Typography>\n                  </TableCell>\n                  \n                  <TableCell align=\"center\">\n                    <Tooltip title=\"Xóa\">\n                      <IconButton \n                        size=\"small\" \n                        color=\"error\"\n                        onClick={() => handleDeleteRow(rate.id)}\n                      >\n                        <DeleteIcon fontSize=\"small\" />\n                      </IconButton>\n                    </Tooltip>\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n          \n          {/* Tổng cộng */}\n          <TableFooter>\n            <TableRow>\n              <TableCell colSpan={4} align=\"right\">\n                <strong>Tổng cộng:</strong>\n              </TableCell>\n              <TableCell align=\"right\">\n                <strong>\n                  {new Intl.NumberFormat('vi-VN', {\n                    style: 'currency',\n                    currency: 'VND',\n                  }).format(calculateTotal())}\n                </strong>\n              </TableCell>\n              <TableCell align=\"right\">\n                <strong>\n                  {new Intl.NumberFormat('vi-VN', {\n                    style: 'currency',\n                    currency: 'VND',\n                  }).format(calculateTotalHours())}\n                </strong>\n                <Typography variant=\"caption\" display=\"block\" color=\"text.secondary\">\n                  ({calculateTotalHours()} giờ)\n                </Typography>\n              </TableCell>\n              <TableCell />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </TableContainer>\n      \n      {/* Phân trang */}\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25, 50]}\n        component=\"div\"\n        count={rates.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n        labelRowsPerPage=\"Số dòng mỗi trang:\"\n        labelDisplayedRows={({ from, to, count }) => \n          `${from}-${to} trong tổng số ${count}`\n        }\n      />\n    </Box>\n  );\n};\n\nexport default TimeAndMaterialTable;\n","import React, { useState, useEffect } from 'react';\nimport { \n  Box, \n  Typography, \n  Radio, \n  RadioGroup, \n  FormControlLabel, \n  FormControl, \n  FormLabel, \n  Paper,\n  Divider,\n  Alert,\n  Snackbar\n} from '@mui/material';\nimport { \n  EstimationMode, \n  EffortColumn, \n  EstimationRow, \n  TimeAndMaterialRate \n} from '../../types/quoteTemplate';\nimport FixedPriceTable from '../FixedPriceTable';\nimport TimeAndMaterialTable from '../TimeAndMaterialTable';\n\n// Các cột effort mặc định cho chế độ Fix Price\nconst DEFAULT_EFFORT_COLUMNS: EffortColumn[] = [];\n\n// Tỷ giá mặc định cho chế độ Time & Material\nconst DEFAULT_TM_RATES: TimeAndMaterialRate[] = [\n  {\n    id: 'rate-1',\n    role: 'Developer',\n    rate: 50,\n    unit: 'hour',\n    description: 'Senior Developer'\n  },\n  {\n    id: 'rate-2',\n    role: 'Designer',\n    rate: 40,\n    unit: 'hour',\n    description: 'UI/UX Designer'\n  }\n];\n\ninterface EstimationStepProps {\n  mode: EstimationMode;\n  onModeChange: (mode: EstimationMode) => void;\n  onEstimationDataChange?: (data: any) => void;\n  // Dữ liệu requirement từ bước 1\n  initialData?: {\n    rows?: any[];\n  };\n}\n\nconst EstimationStep: React.FC<EstimationStepProps> = ({\n  mode,\n  onModeChange,\n  onEstimationDataChange,\n  initialData,\n}) => {\n  // State cho chế độ Fix Price\n  const [fixedPriceRows, setFixedPriceRows] = useState<EstimationRow[]>([]);\n  const [effortColumns, setEffortColumns] = useState<EffortColumn[]>(DEFAULT_EFFORT_COLUMNS);\n  \n  // State cho chế độ Time & Material\n  const [tmRates, setTmRates] = useState<TimeAndMaterialRate[]>(DEFAULT_TM_RATES);\n  \n  // State thông báo\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: '',\n    severity: 'success' as 'success' | 'error' | 'info' | 'warning'\n  });\n\n  // Khởi tạo dữ liệu mẫu khi component mount\n  useEffect(() => {\n    // Nếu có dữ liệu ban đầu từ requirement, sử dụng nó\n    if (initialData?.rows && initialData.rows.length > 0 && fixedPriceRows.length === 0) {\n      const mappedRows = initialData.rows.map(item => ({\n        id: `row-${Date.now()}-${Math.random().toString(36).substr(2, 5)}`,\n        feature: item.feature || '',\n        detail: item.detail || '',\n        description: item.description || '',\n        notes: item.note || '',\n        itReq: '',\n        uxUi: '',\n        efforts: {},\n      }));\n      setFixedPriceRows(mappedRows);\n    } \n    // Thêm một dòng trống mặc định cho Fixed Price nếu không có dữ liệu ban đầu\n    else if (fixedPriceRows.length === 0) {\n      setFixedPriceRows([createNewRow()]);\n    }\n  }, [fixedPriceRows.length, initialData]);\n\n  // Tạo một dòng mới cho Fixed Price\n  const createNewRow = (): EstimationRow => ({\n    id: `row-${Date.now()}`,\n    feature: '',\n    detail: '',\n    description: '',\n    notes: '',\n    itReq: '',\n    uxUi: '',\n    efforts: {},\n  });\n\n  // Xử lý thay đổi chế độ\n  const handleModeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newMode = event.target.value as EstimationMode;\n    onModeChange(newMode);\n    \n    // Thông báo khi chuyển chế độ\n    setSnackbar({\n      open: true,\n      message: `Đã chuyển sang chế độ ${newMode === 'fixed' ? 'Fix Price' : 'Time & Material'}`,\n      severity: 'info'\n    });\n  };\n\n  // Xử lý thay đổi dữ liệu Fixed Price\n  const handleFixedPriceDataChange = (rows: EstimationRow[], columns: EffortColumn[]) => {\n    setFixedPriceRows(rows);\n    setEffortColumns(columns);\n    \n    if (onEstimationDataChange) {\n      onEstimationDataChange({\n        mode: 'fixed',\n        rows,\n        columns\n      });\n    }\n  };\n\n  // Xử lý thay đổi dữ liệu Time & Material\n  const handleTimeMaterialDataChange = (rates: TimeAndMaterialRate[]) => {\n    setTmRates(rates);\n    \n    if (onEstimationDataChange) {\n      onEstimationDataChange({\n        mode: 'timeAndMaterial',\n        rates\n      });\n    }\n  };\n\n  // Đóng thông báo\n  const handleCloseSnackbar = () => {\n    setSnackbar({ ...snackbar, open: false });\n  };\n\n  return (\n    <Box sx={{ mt: 3 }}>\n      <Typography variant=\"h6\" gutterBottom>\n        Bảng ước tính\n      </Typography>\n      \n      <Paper elevation={0} sx={{ p: 3, mb: 3, border: '1px solid #e0e0e0', borderRadius: 1 }}>\n        <FormControl component=\"fieldset\" fullWidth>\n          <FormLabel component=\"legend\" sx={{ mb: 2, fontWeight: 'bold', color: 'text.primary' }}>\n            Chọn phương thức ước tính\n          </FormLabel>\n          <RadioGroup\n            row\n            aria-label=\"estimation-mode\"\n            name=\"estimation-mode\"\n            value={mode}\n            onChange={handleModeChange}\n          >\n            <FormControlLabel\n              value=\"fixed\"\n              control={<Radio color=\"primary\" />}\n              label=\"Fix Price\"\n              sx={{ \n                mr: 4,\n                '& .MuiFormControlLabel-label': { fontWeight: 500 }\n              }}\n            />\n            <FormControlLabel\n              value=\"timeAndMaterial\"\n              control={<Radio color=\"primary\" />}\n              label=\"Time & Material\"\n              sx={{ '& .MuiFormControlLabel-label': { fontWeight: 500 } }}\n            />\n          </RadioGroup>\n          \n          <Divider sx={{ my: 2 }} />\n          \n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\n            {mode === 'fixed' \n              ? 'Chế độ Fix Price: Tạo bảng ước tính chi tiết với các cột effort tùy chỉnh.'\n              : 'Chế độ Time & Material: Tạo bảng ước tính dựa trên số giờ và đơn giá.'}\n          </Typography>\n        </FormControl>\n      </Paper>\n\n      {/* Hiển thị bảng tương ứng với chế độ đã chọn */}\n      {mode === 'fixed' ? (\n        <FixedPriceTable\n          rows={fixedPriceRows}\n          effortColumns={effortColumns}\n          onRowsChange={(rows) => handleFixedPriceDataChange(rows, effortColumns)}\n          onColumnsChange={(columns) => handleFixedPriceDataChange(fixedPriceRows, columns)}\n        />\n      ) : (\n        <TimeAndMaterialTable\n          rates={tmRates}\n          onRatesChange={handleTimeMaterialDataChange}\n        />\n      )}\n\n      {/* Thông báo */}\n      <Snackbar\n        open={snackbar.open}\n        autoHideDuration={3000}\n        onClose={handleCloseSnackbar}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n      >\n        <Alert onClose={handleCloseSnackbar} severity={snackbar.severity}>\n          {snackbar.message}\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n};\n\nexport default EstimationStep;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Button,\n  Typography,\n  TextField,\n  Autocomplete,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Stepper,\n  Step,\n  StepLabel,\n  Paper,\n  Divider,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  FormHelperText,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@mui/material';\nimport {\n  NavigateNext as NextIcon,\n  Save as SaveIcon,\n  Description as TemplateIcon,\n} from '@mui/icons-material';\nimport { QuotationFormProps, Quotation, QuotationItem } from '../../types';\nimport { EstimationMode } from '../../types/quoteTemplate';\nimport EstimationStep from '../EstimationStep/index';\n\nconst QuotationForm: React.FC<QuotationFormProps> = ({\n  open,\n  onClose,\n  onSave,\n  customers,\n  deals,\n  requirements,\n  templates,\n}) => {\n  // Form state\n  const [activeStep, setActiveStep] = useState(0);\n  const [touched, setTouched] = useState<Record<string, boolean>>({});\n  const [estimationMode, setEstimationMode] = useState<EstimationMode>('fixed');\n  const [newQuotation, setNewQuotation] = useState<Partial<Quotation>>({\n    name: '',\n    customer: '',\n    dealId: 0,\n    dealName: '',\n    requirementId: 0,\n    requirementName: '',\n    status: 'draft',\n    createdDate: new Date().toISOString().split('T')[0],\n    note: '',\n    items: [],\n    totalEffort: 0,\n    totalAmount: 0,\n    templateId: '',\n    templateName: '',\n    estimationMode: 'fixed',\n  });\n  \n  // Reset touched state when modal is opened/closed\n  useEffect(() => {\n    if (open) {\n      setTouched({});\n    }\n  }, [open]);\n\n  // Filtered options based on selections\n  const [filteredDeals, setFilteredDeals] = useState(deals);\n  const [filteredRequirements, setFilteredRequirements] = useState(requirements);\n  \n  // Items for estimation table\n  const [estimationItems, setEstimationItems] = useState<QuotationItem[]>([]);\n\n  // Update filtered deals when customer changes\n  useEffect(() => {\n    if (newQuotation.customer) {\n      setFilteredDeals(deals.filter(deal => deal.customer === newQuotation.customer));\n    } else {\n      setFilteredDeals(deals);\n    }\n  }, [newQuotation.customer, deals]);\n\n  // Update filtered requirements when deal changes\n  useEffect(() => {\n    if (newQuotation.dealId) {\n      setFilteredRequirements(requirements.filter(req => req.dealId === newQuotation.dealId));\n    } else {\n      setFilteredRequirements(requirements);\n    }\n  }, [newQuotation.dealId, requirements]);\n\n  // Load requirement features when a requirement is selected\n  useEffect(() => {\n    if (newQuotation.requirementId) {\n      const selectedRequirement = requirements.find(req => req.id === newQuotation.requirementId);\n      if (selectedRequirement && selectedRequirement.features && selectedRequirement.features.length > 0) {\n        console.log('Requirement features found:', selectedRequirement.features);\n        // Convert requirement features to estimation items\n        const items: QuotationItem[] = selectedRequirement.features.map((feature: any, index: number) => ({\n          id: index + 1,\n          feature: feature.feature || '',\n          detail: feature.detail || '',\n          description: feature.description || '',\n          note: feature.notes || feature.note || '',\n          frontendEffort: 0,\n          backendEffort: 0,\n          qcEffort: 0,\n          pmEffort: 0,\n          totalMD: 0,\n          totalMM: 0,\n        }));\n        setEstimationItems(items);\n      } else {\n        console.log('No features found for requirement ID:', newQuotation.requirementId);\n        setEstimationItems([]);\n      }\n    } else {\n      setEstimationItems([]);\n    }\n  }, [newQuotation.requirementId, requirements]);\n\n  const handleNext = () => {\n    setActiveStep((prevStep) => prevStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevStep) => prevStep - 1);\n  };\n\n  const handleCustomerChange = (_: any, newValue: string | null) => {\n    setNewQuotation({\n      ...newQuotation,\n      customer: newValue || '',\n      dealId: 0,\n      dealName: '',\n      requirementId: 0,\n      requirementName: '',\n    });\n  };\n\n  const handleDealChange = (_: any, newValue: { id: number; name: string } | null) => {\n    setNewQuotation({\n      ...newQuotation,\n      dealId: newValue?.id || 0,\n      dealName: newValue?.name || '',\n      requirementId: 0,\n      requirementName: '',\n    });\n  };\n\n  const handleRequirementChange = (_: any, newValue: { id: number; name: string } | null) => {\n    setNewQuotation({\n      ...newQuotation,\n      requirementId: newValue?.id || 0,\n      requirementName: newValue?.name || '',\n    });\n  };\n\n  const handleItemsChange = (updatedItems: QuotationItem[]) => {\n    setEstimationItems(updatedItems);\n    \n    // Calculate totals\n    const totalEffort = updatedItems.reduce((sum, item) => sum + item.totalMD, 0);\n    \n    // Assuming a simple calculation for total amount (e.g., 500,000 VND per MD)\n    const totalAmount = totalEffort * 500000;\n    \n    setNewQuotation({\n      ...newQuotation,\n      totalEffort,\n      totalAmount,\n    });\n  };\n\n  const handleSave = () => {\n    if (newQuotation.name && newQuotation.customer && newQuotation.templateId) {\n      onSave({\n        ...newQuotation as Quotation,\n        items: estimationItems,\n      });\n    }\n  };\n\n\n  \n  const isStepOneValid = () => {\n    return !!(newQuotation.name && newQuotation.customer && newQuotation.dealId && newQuotation.requirementId && newQuotation.templateId);\n  };\n\n  const steps = [\n    'Thông tin báo giá',\n    'Bảng ước tính',\n    'Xem trước báo giá',\n  ];\n\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      maxWidth=\"lg\"\n      fullWidth\n    >\n      <DialogTitle>Tạo báo giá mới</DialogTitle>\n      <DialogContent>\n        <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>\n          {steps.map((label) => (\n            <Step key={label}>\n              <StepLabel>{label}</StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n\n        {activeStep === 0 && (\n          <Box>\n            <Typography variant=\"h6\" gutterBottom>Thông tin cơ bản</Typography>\n            \n            <Box sx={{ mb: 3, border: '1px solid #e0e0e0', borderRadius: 1, p: 2, bgcolor: '#f9f9f9' }}>\n              <Typography variant=\"subtitle2\" gutterBottom sx={{ display: 'flex', alignItems: 'center' }}>\n                <TemplateIcon fontSize=\"small\" sx={{ mr: 1 }} /> \n                Chọn mẫu báo giá\n              </Typography>\n              <FormControl \n                fullWidth \n                margin=\"dense\" \n                required \n                error={touched.templateId && !newQuotation.templateId}\n              >\n                <InputLabel id=\"template-select-label\">Mẫu báo giá</InputLabel>\n                <Select\n                  labelId=\"template-select-label\"\n                  id=\"template-select\"\n                  value={newQuotation.templateId || ''}\n                  label=\"Mẫu báo giá\"\n                  onChange={(e) => {\n                    const templateId = e.target.value;\n                    const selectedTemplate = templates.find(t => t.id === templateId);\n                    setNewQuotation({\n                      ...newQuotation,\n                      templateId: templateId,\n                      templateName: selectedTemplate?.name || '',\n                    });\n                    setTouched(prev => ({ ...prev, templateId: true }));\n                  }}\n                  onBlur={() => setTouched(prev => ({ ...prev, templateId: true }))}\n                  size=\"small\"\n                >\n                  <MenuItem value=\"\">\n                    <em>Chọn mẫu báo giá</em>\n                  </MenuItem>\n                  {templates.map((template) => (\n                    <MenuItem key={template.id} value={template.id}>\n                      {template.name} {template.type === 'internal' ? '(Nội bộ)' : '(Khách hàng)'}\n                    </MenuItem>\n                  ))}\n                </Select>\n                {touched.templateId && !newQuotation.templateId && (\n                  <FormHelperText>Vui lòng chọn mẫu báo giá</FormHelperText>\n                )}\n              </FormControl>\n            </Box>\n            \n            <TextField\n              label=\"Tên báo giá\"\n              fullWidth\n              required\n              value={newQuotation.name || ''}\n              onChange={(e) => setNewQuotation({...newQuotation, name: e.target.value})}\n              margin=\"normal\"\n              size=\"small\"\n              placeholder=\"Nhập tên báo giá\"\n            />\n            <Box sx={{ display: 'flex', gap: 2, mb: 3, flexWrap: 'wrap' }}>\n              <Autocomplete\n                options={customers}\n                value={newQuotation.customer || null}\n                onChange={handleCustomerChange}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Khách hàng\"\n                    size=\"small\"\n                    sx={{ minWidth: 250, flex: 1 }}\n                    required\n                  />\n                )}\n                sx={{ minWidth: 250, flex: 1 }}\n              />\n              <Autocomplete\n                options={filteredDeals}\n                getOptionLabel={(option) => option.name}\n                value={newQuotation.dealId ? filteredDeals.find(d => d.id === newQuotation.dealId) || null : null}\n                onChange={handleDealChange}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Deal\"\n                    size=\"small\"\n                    sx={{ minWidth: 250, flex: 1 }}\n                    required\n                  />\n                )}\n                sx={{ minWidth: 250, flex: 1 }}\n                disabled={!newQuotation.customer}\n              />\n            </Box>\n            <Box sx={{ mb: 3 }}>\n              <Autocomplete\n                options={filteredRequirements}\n                getOptionLabel={(option) => option.name}\n                value={newQuotation.requirementId ? filteredRequirements.find(r => r.id === newQuotation.requirementId) || null : null}\n                onChange={handleRequirementChange}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Requirement\"\n                    size=\"small\"\n                    required\n                  />\n                )}\n                disabled={!newQuotation.dealId}\n              />\n            </Box>\n            <TextField\n              label=\"Trạng thái\"\n              value=\"Draft\"\n              size=\"small\"\n              disabled\n              fullWidth\n              margin=\"normal\"\n            />\n            <TextField\n              label=\"Ghi chú\"\n              multiline\n              rows={4}\n              fullWidth\n              placeholder=\"Nhập ghi chú (nếu có)...\"\n              variant=\"outlined\"\n              sx={{ mb: 2, mt: 2 }}\n              value={newQuotation.note || ''}\n              onChange={(e) => setNewQuotation({...newQuotation, note: e.target.value})}\n            />\n          </Box>\n        )}\n\n        {activeStep === 1 && (\n          <Box>\n            <Paper variant=\"outlined\" sx={{ p: 2, mb: 2 }}>\n              <Typography variant=\"subtitle2\" gutterBottom>Chọn phương thức ước tính</Typography>\n              <EstimationStep\n                mode={estimationMode as EstimationMode}\n                onModeChange={(newMode) => {\n                  setEstimationMode(newMode);\n                  setNewQuotation(prev => ({ ...prev, estimationMode: newMode }));\n                }}\n                initialData={{\n                  rows: estimationItems\n                }}\n                onEstimationDataChange={(data) => {\n                  if (data.mode === 'fixed') {\n                    const convertedItems = data.rows.map((row: any) => ({\n                      id: row.id,\n                      feature: row.feature || '',\n                      detail: row.detail || '',\n                      description: row.description || '',\n                      note: row.notes || '',\n                      frontendEffort: 0,\n                      backendEffort: 0,\n                      qcEffort: 0,\n                      pmEffort: 0,\n                      totalMD: Object.values(row.efforts || {}).reduce((sum: number, val: any) => sum + (Number(val) || 0), 0),\n                      totalMM: 0,\n                    }));\n                    \n                    setEstimationItems(convertedItems);\n                    handleItemsChange(convertedItems);\n                    \n                    setNewQuotation(prev => ({\n                      ...prev,\n                      estimationMode: 'fixed',\n                      estimationConfig: {\n                        rows: data.rows,\n                        columns: data.columns\n                      }\n                    }));\n                  } else {\n                    const convertedItems = data.rates.map((rate: any) => ({\n                      id: rate.id,\n                      feature: rate.role || '',\n                      detail: rate.description || '',\n                      description: '',\n                      note: '',\n                      frontendEffort: 0,\n                      backendEffort: 0,\n                      qcEffort: 0,\n                      pmEffort: 0,\n                      totalMD: rate.rate || 0,\n                      totalMM: 0,\n                    }));\n                    \n                    setEstimationItems(convertedItems);\n                    handleItemsChange(convertedItems);\n                    \n                    setNewQuotation(prev => ({\n                      ...prev,\n                      estimationMode: 'timeAndMaterial',\n                      estimationConfig: {\n                        rates: data.rates\n                      }\n                    }));\n                  }\n                }}\n              />\n            </Paper>\n          </Box>\n        )}\n\n        {activeStep === 2 && (\n          <Box>\n            <Typography variant=\"h6\" gutterBottom>Xem trước báo giá</Typography>\n            <Paper variant=\"outlined\" sx={{ p: 3 }}>\n              <Typography variant=\"h5\" gutterBottom sx={{ mb: 3, textAlign: 'center', fontWeight: 'bold' }}>\n                BÁO GIÁ DỊCH VỤ\n              </Typography>\n              \n              <Box sx={{ mb: 3 }}>\n                <Typography variant=\"subtitle1\" gutterBottom>Thông tin khách hàng</Typography>\n                <Box sx={{ pl: 2 }}>\n                  <Typography><strong>Tên khách hàng:</strong> {newQuotation.customer}</Typography>\n                  <Typography><strong>Dự án:</strong> {newQuotation.dealName}</Typography>\n                  <Typography><strong>Yêu cầu:</strong> {newQuotation.requirementName}</Typography>\n                </Box>\n              </Box>\n\n              <Box sx={{ mb: 3 }}>\n                <Typography variant=\"subtitle1\" gutterBottom>Chi tiết báo giá</Typography>\n                <TableContainer component={Paper} variant=\"outlined\">\n                  <Table size=\"small\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>STT</TableCell>\n                        <TableCell>Hạng mục</TableCell>\n                        <TableCell>Mô tả</TableCell>\n                        <TableCell>Số ngày</TableCell>\n                        <TableCell>Đơn giá</TableCell>\n                        <TableCell>Thành tiền</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {estimationItems.map((item, index) => (\n                        <TableRow key={item.id}>\n                          <TableCell>{index + 1}</TableCell>\n                          <TableCell>{item.feature}</TableCell>\n                          <TableCell>{item.detail}</TableCell>\n                          <TableCell>{item.totalMD}</TableCell>\n                          <TableCell>500,000 VNĐ/ngày</TableCell>\n                          <TableCell>{(item.totalMD * 500000).toLocaleString('vi-VN')} VNĐ</TableCell>\n                        </TableRow>\n                      ))}\n                      <TableRow>\n                        <TableCell colSpan={5} align=\"right\"><strong>Tổng cộng:</strong></TableCell>\n                        <TableCell><strong>{newQuotation.totalAmount?.toLocaleString('vi-VN')} VNĐ</strong></TableCell>\n                      </TableRow>\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Box>\n\n              <Box sx={{ mb: 3 }}>\n                <Typography variant=\"subtitle1\" gutterBottom>Ghi chú</Typography>\n                <Typography variant=\"body2\" sx={{ fontStyle: 'italic' }}>\n                  {newQuotation.note || 'Không có ghi chú'}\n                </Typography>\n              </Box>\n            </Paper>\n          </Box>\n        )}\n      </DialogContent>\n      <DialogActions sx={{ p: 2, pt: 3 }}>\n        <Button onClick={onClose}>Hủy</Button>\n        {activeStep > 0 && (\n          <Button onClick={handleBack}>\n            Quay lại\n          </Button>\n        )}\n        {activeStep < 2 ? (\n          <Button \n            variant=\"contained\" \n            onClick={handleNext}\n            endIcon={<NextIcon />}\n            disabled={activeStep === 0 ? !isStepOneValid() : false}\n          >\n            {activeStep === 1 ? 'Xem trước báo giá' : 'Tiếp theo'}\n          </Button>\n        ) : (\n          <Button \n            variant=\"contained\" \n            color=\"primary\" \n            onClick={handleSave}\n            startIcon={<SaveIcon />}\n          >\n            Lưu báo giá\n          </Button>\n        )}\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default QuotationForm;\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2m0 4-8 5-8-5V6l8 5 8-5z\"\n}), 'Email');","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n  IconButton,\n  Button,\n  Typography,\n  Tooltip,\n} from '@mui/material';\nimport {\n  Add as AddIcon,\n  Delete as DeleteIcon,\n} from '@mui/icons-material';\nimport { EstimationTableProps, QuotationItem } from '../../types';\n\nconst EstimationTable: React.FC<EstimationTableProps> = ({\n  items,\n  onItemsChange,\n  readOnly = false,\n  disableFeatureFields = false,\n}) => {\n  const [tableItems, setTableItems] = useState<QuotationItem[]>(items);\n\n  useEffect(() => {\n    setTableItems(items);\n  }, [items]);\n\n  const handleValueChange = (id: number, field: keyof QuotationItem, value: any) => {\n    const updatedItems = tableItems.map(item => {\n      if (item.id === id) {\n        const updatedItem = { ...item, [field]: value };\n        \n        // Recalculate totals if effort fields change\n        if (['frontendEffort', 'backendEffort', 'qcEffort', 'pmEffort'].includes(field)) {\n          const fe = field === 'frontendEffort' ? Number(value) || 0 : updatedItem.frontendEffort;\n          const be = field === 'backendEffort' ? Number(value) || 0 : updatedItem.backendEffort;\n          const qc = field === 'qcEffort' ? Number(value) || 0 : updatedItem.qcEffort;\n          const pm = field === 'pmEffort' ? Number(value) || 0 : updatedItem.pmEffort;\n          \n          const totalMD = fe + be + qc + pm;\n          const totalMM = totalMD / 20; // Assuming 20 working days per month\n          \n          return {\n            ...updatedItem,\n            totalMD,\n            totalMM,\n          };\n        }\n        \n        return updatedItem;\n      }\n      return item;\n    });\n    \n    setTableItems(updatedItems);\n    onItemsChange(updatedItems);\n  };\n\n  const handleAddRow = () => {\n    const newId = tableItems.length > 0 ? Math.max(...tableItems.map(item => item.id)) + 1 : 1;\n    const newItem: QuotationItem = {\n      id: newId,\n      feature: '',\n      detail: '',\n      description: '',\n      note: '',\n      frontendEffort: 0,\n      backendEffort: 0,\n      qcEffort: 0,\n      pmEffort: 0,\n      totalMD: 0,\n      totalMM: 0,\n    };\n    \n    const updatedItems = [...tableItems, newItem];\n    setTableItems(updatedItems);\n    onItemsChange(updatedItems);\n  };\n\n  const handleDeleteRow = (id: number) => {\n    const updatedItems = tableItems.filter(item => item.id !== id);\n    setTableItems(updatedItems);\n    onItemsChange(updatedItems);\n  };\n\n  // Calculate totals\n  const totalFE = tableItems.reduce((sum, item) => sum + item.frontendEffort, 0);\n  const totalBE = tableItems.reduce((sum, item) => sum + item.backendEffort, 0);\n  const totalQC = tableItems.reduce((sum, item) => sum + item.qcEffort, 0);\n  const totalPM = tableItems.reduce((sum, item) => sum + item.pmEffort, 0);\n  const totalMD = tableItems.reduce((sum, item) => sum + item.totalMD, 0);\n  const totalMM = tableItems.reduce((sum, item) => sum + item.totalMM, 0);\n\n  return (\n    <Box>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2, alignItems: 'center' }}>\n        <Typography variant=\"h6\">Chi tiết ước tính</Typography>\n        {!readOnly && (\n          <Button\n            variant=\"outlined\"\n            startIcon={<AddIcon />}\n            onClick={handleAddRow}\n            size=\"small\"\n          >\n            Thêm dòng\n          </Button>\n        )}\n      </Box>\n      \n      {/* Sử dụng cấu trúc bảng có thể cuộn ngang với các cột cố định chiều rộng */}\n      <Box sx={{ width: '100%', overflow: 'hidden' }}>\n        <TableContainer \n          component={Paper} \n          variant=\"outlined\"\n          sx={{ \n            maxWidth: '100%',\n            overflowX: 'auto',\n          }}\n        >\n          <Table size=\"small\" sx={{ tableLayout: 'fixed' }}>\n            <TableHead>\n              <TableRow>\n                <TableCell width=\"50px\" sx={{ position: 'sticky', left: 0, backgroundColor: '#fff', zIndex: 1 }}>STT</TableCell>\n                <TableCell width=\"150px\" sx={{ position: 'sticky', left: '50px', backgroundColor: '#fff', zIndex: 1 }}>Feature</TableCell>\n                <TableCell width=\"200px\" sx={{ position: 'sticky', left: '200px', backgroundColor: '#fff', zIndex: 1 }}>Chi tiết</TableCell>\n                <TableCell width=\"250px\" sx={{ position: 'sticky', left: '400px', backgroundColor: '#fff', zIndex: 1 }}>Mô tả</TableCell>\n                <TableCell width=\"200px\" sx={{ position: 'sticky', left: '650px', backgroundColor: '#fff', zIndex: 1 }}>Ghi chú</TableCell>\n                <TableCell align=\"right\" width=\"80px\">FE (MD)</TableCell>\n                <TableCell align=\"right\" width=\"80px\">BE (MD)</TableCell>\n                <TableCell align=\"right\" width=\"80px\">QC (MD)</TableCell>\n                <TableCell align=\"right\" width=\"80px\">PM (MD)</TableCell>\n                <TableCell align=\"right\" width=\"80px\">Tổng MD</TableCell>\n                <TableCell align=\"right\" width=\"80px\">Tổng MM</TableCell>\n                {!readOnly && <TableCell align=\"center\" width=\"80px\">Hành động</TableCell>}\n              </TableRow>\n            </TableHead>\n          <TableBody>\n            {tableItems.map((item, index) => (\n              <TableRow key={item.id}>\n                <TableCell sx={{ position: 'sticky', left: 0, backgroundColor: '#fff', zIndex: 1 }}>{index + 1}</TableCell>\n                <TableCell sx={{ position: 'sticky', left: '50px', backgroundColor: '#fff', zIndex: 1 }}>\n                  {readOnly ? (\n                    <Tooltip title={item.feature} arrow placement=\"top\">\n                      <div style={{ maxWidth: '150px', whiteSpace: 'pre-wrap', wordBreak: 'break-word' }}>\n                        {item.feature}\n                      </div>\n                    </Tooltip>\n                  ) : (\n                    <TextField\n                      variant=\"outlined\"\n                      size=\"small\"\n                      value={item.feature}\n                      onChange={(e) => handleValueChange(item.id, 'feature', e.target.value)}\n                      fullWidth\n                      multiline\n                      maxRows={3}\n                      disabled={disableFeatureFields}\n                    />\n                  )}\n                </TableCell>\n                <TableCell sx={{ position: 'sticky', left: '200px', backgroundColor: '#fff', zIndex: 1 }}>\n                  {readOnly ? (\n                    <Tooltip title={item.detail} arrow placement=\"top\">\n                      <div style={{ maxWidth: '150px', whiteSpace: 'pre-wrap', wordBreak: 'break-word' }}>\n                        {item.detail}\n                      </div>\n                    </Tooltip>\n                  ) : (\n                    <TextField\n                      variant=\"outlined\"\n                      size=\"small\"\n                      value={item.detail}\n                      onChange={(e) => handleValueChange(item.id, 'detail', e.target.value)}\n                      fullWidth\n                      multiline\n                      maxRows={3}\n                      disabled={disableFeatureFields}\n                    />\n                  )}\n                </TableCell>\n                <TableCell sx={{ position: 'sticky', left: '400px', backgroundColor: '#fff', zIndex: 1 }}>\n                  {readOnly ? (\n                    <Tooltip title={item.description} arrow placement=\"top\">\n                      <div style={{ maxWidth: '150px', whiteSpace: 'pre-wrap', wordBreak: 'break-word' }}>\n                        {item.description}\n                      </div>\n                    </Tooltip>\n                  ) : (\n                    <TextField\n                      variant=\"outlined\"\n                      size=\"small\"\n                      value={item.description}\n                      onChange={(e) => handleValueChange(item.id, 'description', e.target.value)}\n                      fullWidth\n                      multiline\n                      maxRows={3}\n                      disabled={disableFeatureFields}\n                    />\n                  )}\n                </TableCell>\n                <TableCell sx={{ position: 'sticky', left: '650px', backgroundColor: '#fff', zIndex: 1 }}>\n                  {readOnly ? (\n                    <Tooltip title={item.note} arrow placement=\"top\">\n                      <div style={{ maxWidth: '150px', whiteSpace: 'pre-wrap', wordBreak: 'break-word' }}>\n                        {item.note}\n                      </div>\n                    </Tooltip>\n                  ) : (\n                    <TextField\n                      variant=\"outlined\"\n                      size=\"small\"\n                      value={item.note}\n                      onChange={(e) => handleValueChange(item.id, 'note', e.target.value)}\n                      fullWidth\n                      multiline\n                      maxRows={3}\n                      disabled={disableFeatureFields}\n                    />\n                  )}\n                </TableCell>\n                <TableCell align=\"right\">\n                  {readOnly ? (\n                    item.frontendEffort\n                  ) : (\n                    <TextField\n                      variant=\"outlined\"\n                      size=\"small\"\n                      type=\"number\"\n                      value={item.frontendEffort}\n                      onChange={(e) => handleValueChange(item.id, 'frontendEffort', Number(e.target.value))}\n                      inputProps={{ min: 0 }}\n                      sx={{ \n                        width: '50px',\n                        '& input::-webkit-outer-spin-button, & input::-webkit-inner-spin-button': {\n                          '-webkit-appearance': 'none',\n                          margin: 0,\n                        },\n                        '& input[type=number]': {\n                          '-moz-appearance': 'textfield',\n                        },\n                      }}\n                    />\n                  )}\n                </TableCell>\n                <TableCell align=\"right\">\n                  {readOnly ? (\n                    item.backendEffort\n                  ) : (\n                    <TextField\n                      variant=\"outlined\"\n                      size=\"small\"\n                      type=\"number\"\n                      value={item.backendEffort}\n                      onChange={(e) => handleValueChange(item.id, 'backendEffort', Number(e.target.value))}\n                      inputProps={{ min: 0 }}\n                      sx={{ \n                        width: '50px',\n                        '& input::-webkit-outer-spin-button, & input::-webkit-inner-spin-button': {\n                          '-webkit-appearance': 'none',\n                          margin: 0,\n                        },\n                        '& input[type=number]': {\n                          '-moz-appearance': 'textfield',\n                        },\n                      }}\n                    />\n                  )}\n                </TableCell>\n                <TableCell align=\"right\">\n                  {readOnly ? (\n                    item.qcEffort\n                  ) : (\n                    <TextField\n                      variant=\"outlined\"\n                      size=\"small\"\n                      type=\"number\"\n                      value={item.qcEffort}\n                      onChange={(e) => handleValueChange(item.id, 'qcEffort', Number(e.target.value))}\n                      inputProps={{ min: 0 }}\n                      sx={{ \n                        width: '50px',\n                        '& input::-webkit-outer-spin-button, & input::-webkit-inner-spin-button': {\n                          '-webkit-appearance': 'none',\n                          margin: 0,\n                        },\n                        '& input[type=number]': {\n                          '-moz-appearance': 'textfield',\n                        },\n                      }}\n                    />\n                  )}\n                </TableCell>\n                <TableCell align=\"right\">\n                  {readOnly ? (\n                    item.pmEffort\n                  ) : (\n                    <TextField\n                      variant=\"outlined\"\n                      size=\"small\"\n                      type=\"number\"\n                      value={item.pmEffort}\n                      onChange={(e) => handleValueChange(item.id, 'pmEffort', Number(e.target.value))}\n                      inputProps={{ min: 0 }}\n                      sx={{ \n                        width: '50px',\n                        '& input::-webkit-outer-spin-button, & input::-webkit-inner-spin-button': {\n                          '-webkit-appearance': 'none',\n                          margin: 0,\n                        },\n                        '& input[type=number]': {\n                          '-moz-appearance': 'textfield',\n                        },\n                      }}\n                    />\n                  )}\n                </TableCell>\n                <TableCell align=\"right\">\n                  <strong>{item.totalMD.toFixed(1)}</strong>\n                </TableCell>\n                <TableCell align=\"right\">\n                  <strong>{item.totalMM.toFixed(2)}</strong>\n                </TableCell>\n                {!readOnly && (\n                  <TableCell align=\"center\">\n                    <IconButton \n                      size=\"small\" \n                      color=\"error\" \n                      onClick={() => handleDeleteRow(item.id)}\n                      disabled={tableItems.length <= 1}\n                    >\n                      <DeleteIcon fontSize=\"small\" />\n                    </IconButton>\n                  </TableCell>\n                )}\n              </TableRow>\n            ))}\n            \n            {/* Totals row */}\n            <TableRow sx={{ backgroundColor: 'action.hover' }}>\n              <TableCell sx={{ position: 'sticky', left: 0, backgroundColor: '#f5f5f5', zIndex: 1 }}></TableCell>\n              <TableCell sx={{ position: 'sticky', left: '50px', backgroundColor: '#f5f5f5', zIndex: 1 }}></TableCell>\n              <TableCell sx={{ position: 'sticky', left: '200px', backgroundColor: '#f5f5f5', zIndex: 1 }}></TableCell>\n              <TableCell sx={{ position: 'sticky', left: '400px', backgroundColor: '#f5f5f5', zIndex: 1 }}></TableCell>\n              <TableCell sx={{ position: 'sticky', left: '650px', backgroundColor: '#f5f5f5', zIndex: 1 }} align=\"right\">\n                <strong>Tổng</strong>\n              </TableCell>\n              <TableCell align=\"right\"><strong>{totalFE.toFixed(1)}</strong></TableCell>\n              <TableCell align=\"right\"><strong>{totalBE.toFixed(1)}</strong></TableCell>\n              <TableCell align=\"right\"><strong>{totalQC.toFixed(1)}</strong></TableCell>\n              <TableCell align=\"right\"><strong>{totalPM.toFixed(1)}</strong></TableCell>\n              <TableCell align=\"right\"><strong>{totalMD.toFixed(1)}</strong></TableCell>\n              <TableCell align=\"right\"><strong>{totalMM.toFixed(2)}</strong></TableCell>\n              {!readOnly && <TableCell />}\n            </TableRow>\n          </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n      \n      <Box sx={{ mt: 2, display: 'flex', justifyContent: 'flex-end', gap: 2 }}>\n        <Typography variant=\"body2\">\n          <strong>Tổng MD:</strong> {totalMD.toFixed(1)}\n        </Typography>\n        <Typography variant=\"body2\">\n          <strong>Tổng MM:</strong> {totalMM.toFixed(2)}\n        </Typography>\n        <Typography variant=\"body2\">\n          <strong>Tổng tiền:</strong> {new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(totalMD * 500000)}\n        </Typography>\n      </Box>\n    </Box>\n  );\n};\n\nexport default EstimationTable;\n","import React from 'react';\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Typography,\n  Paper,\n  Grid,\n  Chip,\n  Divider,\n} from '@mui/material';\nimport {\n  PictureAsPdf as PdfIcon,\n  Email as EmailIcon,\n  Edit as EditIcon,\n} from '@mui/icons-material';\nimport { QuotationDetailProps, QuotationStatus } from '../../types';\nimport EstimationTable from '../EstimationTable';\n\nconst QuotationDetail: React.FC<QuotationDetailProps> = ({\n  open,\n  onClose,\n  quotation,\n}) => {\n  if (!quotation) return null;\n\n  const getStatusChip = (status: QuotationStatus) => {\n    const statusMap: Record<QuotationStatus, { label: string; color: 'default' | 'info' | 'success' | 'error' }> = {\n      draft: { label: 'Draft', color: 'default' },\n      sent: { label: 'Đã gửi', color: 'info' },\n      approved: { label: 'Đã duyệt', color: 'success' },\n      rejected: { label: 'Từ chối', color: 'error' },\n    };\n\n    const statusInfo = statusMap[status];\n    return (\n      <Chip \n        label={statusInfo.label} \n        color={statusInfo.color}\n        size=\"small\"\n      />\n    );\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(amount);\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      maxWidth=\"lg\"\n      fullWidth\n    >\n      <DialogTitle>\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n          <Typography variant=\"h6\">Chi tiết báo giá</Typography>\n          {getStatusChip(quotation.status)}\n        </Box>\n      </DialogTitle>\n      <DialogContent>\n        <Paper variant=\"outlined\" sx={{ p: 3, mb: 3 }}>\n          <Typography variant=\"h6\" gutterBottom sx={{ fontWeight: 'bold', color: 'primary.main' }}>\n            Thông tin cơ bản\n          </Typography>\n          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 3 }}>\n            <Box sx={{ minWidth: '200px', flex: 1 }}>\n              <Typography variant=\"body2\" color=\"text.secondary\">Tên báo giá</Typography>\n              <Typography variant=\"body1\" sx={{ fontWeight: 'medium' }}>{quotation.name}</Typography>\n            </Box>\n            <Box sx={{ minWidth: '200px', flex: 1 }}>\n              <Typography variant=\"body2\" color=\"text.secondary\">Khách hàng</Typography>\n              <Typography variant=\"body1\">{quotation.customer}</Typography>\n            </Box>\n            <Box sx={{ minWidth: '200px', flex: 1 }}>\n              <Typography variant=\"body2\" color=\"text.secondary\">Deal</Typography>\n              <Typography variant=\"body1\">{quotation.dealName}</Typography>\n            </Box>\n            <Box sx={{ minWidth: '200px', flex: 1 }}>\n              <Typography variant=\"body2\" color=\"text.secondary\">Requirement</Typography>\n              <Typography variant=\"body1\">{quotation.requirementName}</Typography>\n            </Box>\n          </Box>\n          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 3, mt: 3 }}>\n            <Box sx={{ minWidth: '200px', flex: 1 }}>\n              <Typography variant=\"body2\" color=\"text.secondary\">Ngày tạo</Typography>\n              <Typography variant=\"body1\">{quotation.createdDate}</Typography>\n            </Box>\n            <Box sx={{ minWidth: '200px', flex: 1 }}>\n              <Typography variant=\"body2\" color=\"text.secondary\">Tổng Effort</Typography>\n              <Typography variant=\"body1\">{quotation.totalEffort} MD</Typography>\n            </Box>\n            <Box sx={{ minWidth: '200px', flex: 1 }}>\n              <Typography variant=\"body2\" color=\"text.secondary\">Tổng tiền</Typography>\n              <Typography variant=\"body1\" sx={{ fontWeight: 'bold', color: 'primary.main' }}>\n                {formatCurrency(quotation.totalAmount)}\n              </Typography>\n            </Box>\n          </Box>\n        </Paper>\n\n        {quotation.note && (\n          <Paper variant=\"outlined\" sx={{ p: 3, mb: 3 }}>\n            <Typography variant=\"h6\" gutterBottom sx={{ fontWeight: 'bold', color: 'primary.main' }}>\n              Ghi chú\n            </Typography>\n            <Typography variant=\"body1\" sx={{ whiteSpace: 'pre-wrap' }}>\n              {quotation.note}\n            </Typography>\n          </Paper>\n        )}\n\n        <Divider sx={{ my: 3 }} />\n\n        <Typography variant=\"h6\" gutterBottom sx={{ fontWeight: 'bold', color: 'primary.main', mb: 2 }}>\n          Chi tiết ước tính\n        </Typography>\n        {quotation.items && quotation.items.length > 0 ? (\n          <EstimationTable \n            items={quotation.items} \n            onItemsChange={() => {}} \n            readOnly={true} \n          />\n        ) : (\n          <Paper variant=\"outlined\" sx={{ p: 2 }}>\n            <Typography variant=\"body1\" color=\"text.secondary\">\n              Chưa có dữ liệu ước tính.\n            </Typography>\n          </Paper>\n        )}\n\n        {quotation.executiveSummary && (\n          <>\n            <Divider sx={{ my: 3 }} />\n            <Paper variant=\"outlined\" sx={{ p: 3, mb: 3 }}>\n              <Typography variant=\"h6\" gutterBottom sx={{ fontWeight: 'bold', color: 'primary.main' }}>\n                Tóm tắt điều hành\n              </Typography>\n              <Typography variant=\"body1\" sx={{ whiteSpace: 'pre-wrap' }}>\n                {quotation.executiveSummary}\n              </Typography>\n            </Paper>\n          </>\n        )}\n      </DialogContent>\n      <DialogActions sx={{ p: 2 }}>\n        <Button onClick={onClose}>Đóng</Button>\n        <Button \n          startIcon={<EditIcon />} \n          variant=\"outlined\"\n          onClick={() => console.log('Edit quotation')}\n        >\n          Chỉnh sửa\n        </Button>\n        <Button \n          startIcon={<PdfIcon />} \n          variant=\"outlined\" \n          color=\"secondary\"\n          onClick={() => console.log('Download PDF')}\n        >\n          Tải PDF\n        </Button>\n        <Button \n          startIcon={<EmailIcon />} \n          variant=\"contained\" \n          color=\"primary\"\n          onClick={() => console.log('Send email')}\n        >\n          Gửi Email\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default QuotationDetail;\n","import React, { useState, useEffect } from 'react';\nimport { PdfPageEditor } from '../../../../components/PdfPageEditor';\nimport { \n  Button, \n  Dialog, \n  DialogActions, \n  DialogContent, \n  DialogTitle, \n  Typography,\n  Box \n} from '@mui/material';\nimport { Save as SaveIcon } from '@mui/icons-material';\nimport { QuotationPreviewProps } from '../../types';\n\nconst QuotationPreview: React.FC<QuotationPreviewProps> = ({\n  open,\n  onClose,\n  quotation,\n  onSaveDraft,\n  onExportPdf,\n}) => {\n  const [pages, setPages] = useState<string[]>(['']);\n\n  useEffect(() => {\n    if (quotation) {\n      const customPages = (quotation as any).pages;\n      if (customPages && Array.isArray(customPages) && customPages.length > 0) {\n        setPages(customPages);\n      } else {\n        setPages([\n          `\n          <div style=\"padding: 20mm;\">\n            <h1 style=\"text-align: center; margin-bottom: 30px;\">BÁO GIÁ DỊCH VỤ</h1>\n            <div style=\"display: flex; justify-content: space-between; margin-bottom: 20px;\">\n              <div>\n                <p><strong>Khách hàng:</strong> ${quotation.customer || 'Quý khách hàng'}</p>\n                <p><strong>Dự án:</strong> ${quotation.name || 'Dự án phần mềm'}</p>\n              </div>\n              <div style=\"text-align: right;\">\n                <p><strong>Mã báo giá:</strong> ${quotation.id || 'N/A'}</p>\n                <p><strong>Ngày tạo:</strong> ${new Date(quotation.createdDate || new Date()).toLocaleDateString('vi-VN')}</p>\n              </div>\n            </div>\n            \n            <!-- Quotation items table -->\n            <div style=\"margin: 20px 0;\">\n              <h3>CHI TIẾT DỊCH VỤ</h3>\n              <table style=\"width: 100%; border-collapse: collapse; margin: 15px 0;\">\n                <thead>\n                  <tr style=\"background-color: #f5f5f5;\">\n                    <th style=\"border: 1px solid #ddd; padding: 8px; text-align: left;\">STT</th>\n                    <th style=\"border: 1px solid #ddd; padding: 8px; text-align: left;\">Mô tả công việc</th>\n                    <th style=\"border: 1px solid #ddd; padding: 8px; text-align: right;\">Số ngày công</th>\n                    <th style=\"border: 1px solid #ddd; padding: 8px; text-align: right;\">Đơn giá (VND)</th>\n                    <th style=\"border: 1px solid #ddd; padding: 8px; text-align: right;\">Thành tiền (VND)</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  ${(quotation.items || []).map((item, index) => {\n                    const qcEffort = (item as any).qcEffort || 0;\n                    const rate = (item as any).rate || 0;\n                    const total = qcEffort * rate;\n                    \n                    return `\n                      <tr>\n                        <td style=\"border: 1px solid #ddd; padding: 8px;\">${index + 1}</td>\n                        <td style=\"border: 1px solid #ddd; padding: 8px;\">${item.description || ''}</td>\n                        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: right;\">${qcEffort}</td>\n                        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: right;\">${rate.toLocaleString('vi-VN')}</td>\n                        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: right;\">${total.toLocaleString('vi-VN')}</td>\n                      </tr>\n                    `;\n                  }).join('')}\n                  <tr>\n                    <td colspan=\"4\" style=\"border: 1px solid #ddd; padding: 8px; text-align: right;\"><strong>Tổng cộng:</strong></td>\n                    <td style=\"border: 1px solid #ddd; padding: 8px; text-align: right; font-weight: bold;\">\n                      ${(quotation.items || []).reduce((sum, item) => {\n                        const qcEffort = (item as any).qcEffort || 0;\n                        const rate = (item as any).rate || 0;\n                        return sum + (qcEffort * rate);\n                      }, 0).toLocaleString('vi-VN')} VND\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            \n            <div style=\"margin-top: 30px;\">\n              <div style=\"margin-bottom: 20px;\">\n                <h3>ĐIỀU KHOẢN THANH TOÁN</h3>\n                <div>${(quotation as any).paymentTerms || 'Thanh toán 100% khi ký hợp đồng.'}</div>\n              </div>\n              <div style=\"margin-top: 60px; display: flex; justify-content: space-between;\">\n                <div style=\"text-align: center; width: 50%;\">\n                  <p><strong>ĐẠI DIỆN BÊN BÁN</strong></p>\n                  <p style=\"font-style: italic; margin-top: 50px;\">(Ký, ghi rõ họ tên)</p>\n                </div>\n                <div style=\"text-align: center; width: 50%;\">\n                  <p><strong>ĐẠI DIỆN BÊN MUA</strong></p>\n                  <p style=\"font-style: italic; margin-top: 50px;\">(Ký, ghi rõ họ tên)</p>\n                </div>\n              </div>\n            </div>\n          </div>\n          `\n        ]);\n      }\n    }\n  }, [quotation]);\n\n  const handleSave = (updatedPages: string[]) => {\n    setPages(updatedPages);\n  };\n\n  const handleSaveDraft = () => {\n    if (onSaveDraft && quotation) {\n      // Create an updated quotation with the pages\n      const updatedQuotation = {\n        ...quotation,\n        // Add pages to the quotation data\n        ...(pages.length > 0 && { pages })\n      };\n      onSaveDraft(updatedQuotation);\n    }\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      maxWidth=\"xl\"\n      fullWidth\n      sx={{ '& .MuiDialog-paper': { maxWidth: '95%', height: '95vh' } }}\n    >\n      <DialogTitle>\n        <Typography variant=\"h6\">Xem trước và chỉnh sửa báo giá</Typography>\n      </DialogTitle>\n      <DialogContent sx={{ p: 0, display: 'flex', flexDirection: 'column', height: '100%' }}>\n        {quotation ? (\n          <PdfPageEditor \n            initialContent={pages}\n            onSave={handleSave}\n            onExportPdf={() => onExportPdf && onExportPdf(quotation)}\n          />\n        ) : (\n          <Box sx={{ p: 3, textAlign: 'center' }}>\n            <Typography>Đang tải dữ liệu báo giá...</Typography>\n          </Box>\n        )}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} color=\"inherit\">\n          Đóng\n        </Button>\n        <Button \n          onClick={handleSaveDraft} \n          variant=\"contained\" \n          color=\"primary\"\n          startIcon={<SaveIcon />}\n          disabled={!quotation}\n        >\n          Lưu nháp\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default QuotationPreview;\n","import React from 'react';\nimport {\n  TableContainer,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  TablePagination,\n  Paper,\n  IconButton,\n  Chip,\n} from '@mui/material';\nimport {\n  Visibility as ViewIcon,\n  Email as EmailIcon,\n  PictureAsPdf as PdfIcon,\n} from '@mui/icons-material';\nimport { QuotationListProps, Quotation, QuotationStatus } from '../../types';\n\nconst QuotationList: React.FC<QuotationListProps> = ({\n  quotations,\n  page,\n  rowsPerPage,\n  totalCount,\n  onPageChange,\n  onRowsPerPageChange,\n  onViewDetail,\n  onDownloadPdf,\n  onSendEmail,\n}) => {\n  // Helper functions\n  const getStatusChip = (status: QuotationStatus) => {\n    const statusMap: Record<QuotationStatus, { label: string; color: 'default' | 'info' | 'success' | 'error' }> = {\n      draft: { label: 'Draft', color: 'default' },\n      sent: { label: 'Đã gửi', color: 'info' },\n      approved: { label: 'Đã duyệt', color: 'success' },\n      rejected: { label: 'Từ chối', color: 'error' },\n    };\n\n    const statusInfo = statusMap[status];\n    return (\n      <Chip \n        label={statusInfo.label} \n        color={statusInfo.color}\n        size=\"small\"\n      />\n    );\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(amount);\n  };\n\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Tên báo giá</TableCell>\n              <TableCell>Khách hàng</TableCell>\n              <TableCell>Deal</TableCell>\n              <TableCell>Trạng thái</TableCell>\n              <TableCell>Ngày tạo</TableCell>\n              <TableCell align=\"right\">Tổng Effort (MD)</TableCell>\n              <TableCell align=\"right\">Tổng tiền</TableCell>\n              <TableCell align=\"center\">Hành động</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {quotations.map((quotation: Quotation) => (\n              <TableRow key={quotation.id}>\n                <TableCell>{quotation.name}</TableCell>\n                <TableCell>{quotation.customer}</TableCell>\n                <TableCell>{quotation.dealName}</TableCell>\n                <TableCell>{getStatusChip(quotation.status)}</TableCell>\n                <TableCell>{quotation.createdDate}</TableCell>\n                <TableCell align=\"right\">{quotation.totalEffort}</TableCell>\n                <TableCell align=\"right\">{formatCurrency(quotation.totalAmount)}</TableCell>\n                <TableCell align=\"center\">\n                  <IconButton \n                    size=\"small\" \n                    color=\"primary\" \n                    onClick={() => onViewDetail(quotation.id)}\n                    title=\"Xem chi tiết\"\n                  >\n                    <ViewIcon fontSize=\"small\" />\n                  </IconButton>\n                  <IconButton \n                    size=\"small\" \n                    color=\"secondary\" \n                    onClick={() => onDownloadPdf(quotation.id)}\n                    title=\"Tải PDF\"\n                  >\n                    <PdfIcon fontSize=\"small\" />\n                  </IconButton>\n                  <IconButton \n                    size=\"small\" \n                    color=\"info\" \n                    onClick={() => onSendEmail(quotation.id)}\n                    title=\"Gửi Email\"\n                  >\n                    <EmailIcon fontSize=\"small\" />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n            {quotations.length === 0 && (\n              <TableRow>\n                <TableCell colSpan={8} align=\"center\">\n                  Không có báo giá nào\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n        <TablePagination\n          component=\"div\"\n          count={totalCount}\n          page={page}\n          onPageChange={(_, newPage) => onPageChange(_, newPage)}\n          rowsPerPage={rowsPerPage}\n          onRowsPerPageChange={(e: React.ChangeEvent<HTMLInputElement>) => onRowsPerPageChange(e)}\n          rowsPerPageOptions={[5, 10, 25]}\n          labelRowsPerPage=\"Số hàng mỗi trang:\"\n        />\n      </TableContainer>\n    </>\n  );\n};\n\nexport default QuotationList;\n","import React, { useState } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  Button,\n  Box,\n  Typography,\n  IconButton,\n} from '@mui/material';\nimport { Close as CloseIcon, Visibility as PreviewIcon, Send as SendIcon } from '@mui/icons-material';\n\ninterface EmailQuotationDialogProps {\n  open: boolean;\n  onClose: () => void;\n  onSend: (emailData: {\n    to: string;\n    cc: string;\n    subject: string;\n    content: string;\n  }) => void;\n  customerName: string;\n  serviceName: string;\n  responsiblePerson: string;\n  pdfFileName: string;\n}\n\nconst EmailQuotationDialog: React.FC<EmailQuotationDialogProps> = ({\n  open,\n  onClose,\n  onSend,\n  customerName,\n  serviceName,\n  responsiblePerson,\n  pdfFileName,\n}) => {\n  const [emailData, setEmailData] = useState({\n    to: '',\n    cc: '',\n    subject: `Báo giá dịch vụ ${serviceName}`,\n    content: `Kính gửi Anh/Chị ${customerName || 'Quý khách'},\n\nInnotech Vietnam xin gửi Anh/Chị báo giá cho dịch vụ ${serviceName || 'dịch vụ'} như đính kèm.\n\nNếu cần thêm thông tin, xin vui lòng liên hệ chúng tôi.\n\nTrân trọng,  \n${responsiblePerson || 'Đội ngũ Innotech Vietnam'}`,\n  });\n\n  const handleChange = (field: string) => (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    setEmailData(prev => ({\n      ...prev,\n      [field]: e.target.value,\n    }));\n  };\n\n  const handleSend = () => {\n    onSend(emailData);\n    onClose();\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose} maxWidth=\"md\" fullWidth>\n      <DialogTitle>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Typography variant=\"h6\">Gửi báo giá cho khách hàng</Typography>\n          <IconButton onClick={onClose} size=\"small\">\n            <CloseIcon />\n          </IconButton>\n        </Box>\n      </DialogTitle>\n      <DialogContent dividers>\n        <Box mb={3}>\n          <TextField\n            fullWidth\n            label=\"Đến (Email)\"\n            value={emailData.to}\n            onChange={handleChange('to')}\n            margin=\"normal\"\n            variant=\"outlined\"\n          />\n          \n          <TextField\n            fullWidth\n            label=\"CC (Tùy chọn)\"\n            value={emailData.cc}\n            onChange={handleChange('cc')}\n            margin=\"normal\"\n            variant=\"outlined\"\n          />\n          \n          <TextField\n            fullWidth\n            label=\"Tiêu đề\"\n            value={emailData.subject}\n            onChange={handleChange('subject')}\n            margin=\"normal\"\n            variant=\"outlined\"\n          />\n          \n          <Box mt={2} mb={2} display=\"flex\" alignItems=\"center\">\n            <Typography variant=\"body1\" sx={{ mr: 2 }}>\n              File đính kèm: {pdfFileName}\n            </Typography>\n            <IconButton size=\"small\" onClick={() => window.open(`/preview/${pdfFileName}`, '_blank')}>\n              <PreviewIcon />\n            </IconButton>\n          </Box>\n          \n          <TextField\n            fullWidth\n            label=\"Nội dung email\"\n            value={emailData.content}\n            onChange={handleChange('content')}\n            margin=\"normal\"\n            variant=\"outlined\"\n            multiline\n            rows={8}\n          />\n        </Box>\n      </DialogContent>\n      <DialogActions sx={{ p: 2 }}>\n        <Button onClick={onClose}>Hủy</Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<SendIcon />}\n          onClick={handleSend}\n          disabled={!emailData.to}\n        >\n          Gửi email\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default EmailQuotationDialog;\n","import React, { useState } from 'react';\nimport {\n  Box,\n  Typography,\n  Button,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Chip,\n  IconButton,\n  Tooltip,\n} from '@mui/material';\nimport {\n  Add as AddIcon,\n  Visibility as VisibilityIcon,\n  Delete as DeleteIcon,\n  FileDownload as FileDownloadIcon,\n} from '@mui/icons-material';\nimport { QuoteTemplate } from '../../types/quoteTemplate';\n\ninterface QuotationTemplatesProps {\n  templates: QuoteTemplate[];\n  loading: boolean;\n  onUploadClick: () => void;\n  onViewTemplate?: (templateId: string) => void;\n  onDeleteTemplate?: (templateId: string) => void;\n  onDownloadTemplate?: (templateId: string) => void;\n}\n\nconst QuotationTemplates: React.FC<QuotationTemplatesProps> = ({\n  templates,\n  loading,\n  onUploadClick,\n  onViewTemplate,\n  onDeleteTemplate,\n  onDownloadTemplate,\n}) => {\n  return (\n    <Paper sx={{ p: 3 }}>\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\n        <Typography variant=\"h6\">Mẫu báo giá</Typography>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          onClick={onUploadClick}\n        >\n          Tải lên mẫu báo giá\n        </Button>\n      </Box>\n\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Tên mẫu</TableCell>\n              <TableCell>Mô tả</TableCell>\n              <TableCell>Loại</TableCell>\n              <TableCell>Trạng thái</TableCell>\n              <TableCell>Ngày tạo</TableCell>\n              <TableCell>Người tạo</TableCell>\n              <TableCell>Số trường</TableCell>\n              <TableCell align=\"center\">Thao tác</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {loading ? (\n              <TableRow>\n                <TableCell colSpan={8} align=\"center\">\n                  Đang tải...\n                </TableCell>\n              </TableRow>\n            ) : templates.length === 0 ? (\n              <TableRow>\n                <TableCell colSpan={8} align=\"center\">\n                  Chưa có mẫu báo giá nào. Hãy tải lên mẫu báo giá đầu tiên của bạn!\n                </TableCell>\n              </TableRow>\n            ) : (\n              templates.map((template) => (\n                <TableRow key={template.id}>\n                  <TableCell>{template.name}</TableCell>\n                  <TableCell>{template.description || '-'}</TableCell>\n                  <TableCell>\n                    {template.type === 'customer' ? 'Khách hàng' : 'Nội bộ'}\n                  </TableCell>\n                  <TableCell>\n                    <Chip\n                      label={template.status === 'active' ? 'Đang sử dụng' : 'Không sử dụng'}\n                      color={template.status === 'active' ? 'success' : 'default'}\n                      size=\"small\"\n                    />\n                    {template.isDefault && (\n                      <Chip\n                        label=\"Mặc định\"\n                        color=\"primary\"\n                        size=\"small\"\n                        sx={{ ml: 1 }}\n                      />\n                    )}\n                  </TableCell>\n                  <TableCell>\n                    {new Date(template.createdAt).toLocaleDateString('vi-VN')}\n                  </TableCell>\n                  <TableCell>{template.createdBy}</TableCell>\n                  <TableCell>{template.placeholderCount}</TableCell>\n                  <TableCell align=\"center\">\n                    <Box>\n                      {onViewTemplate && (\n                        <Tooltip title=\"Xem chi tiết\">\n                          <IconButton\n                            size=\"small\"\n                            onClick={() => onViewTemplate(template.id)}\n                          >\n                            <VisibilityIcon fontSize=\"small\" />\n                          </IconButton>\n                        </Tooltip>\n                      )}\n                      {onDownloadTemplate && (\n                        <Tooltip title=\"Tải xuống\">\n                          <IconButton\n                            size=\"small\"\n                            onClick={() => onDownloadTemplate(template.id)}\n                          >\n                            <FileDownloadIcon fontSize=\"small\" />\n                          </IconButton>\n                        </Tooltip>\n                      )}\n                      {onDeleteTemplate && (\n                        <Tooltip title=\"Xóa\">\n                          <IconButton\n                            size=\"small\"\n                            color=\"error\"\n                            onClick={() => onDeleteTemplate(template.id)}\n                          >\n                            <DeleteIcon fontSize=\"small\" />\n                          </IconButton>\n                        </Tooltip>\n                      )}\n                    </Box>\n                  </TableCell>\n                </TableRow>\n              ))\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Paper>\n  );\n};\n\nexport default QuotationTemplates;\n","import React, { useState } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Typography,\n  Box,\n  IconButton,\n  CircularProgress,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@mui/material';\nimport { Close as CloseIcon, CloudUpload as UploadIcon, Delete as DeleteIcon } from '@mui/icons-material';\nimport { UploadQuoteTemplateFormValues, ExtractedField } from '../../types/quoteTemplate';\n\ninterface UploadQuoteTemplateProps {\n  open: boolean;\n  onClose: () => void;\n  onSubmit: (values: UploadQuoteTemplateFormValues) => Promise<void>;\n}\n\nconst UploadQuoteTemplate: React.FC<UploadQuoteTemplateProps> = ({\n  open,\n  onClose,\n  onSubmit,\n}) => {\n  const [values, setValues] = useState<UploadQuoteTemplateFormValues>({\n    name: '',\n    description: '',\n    type: 'customer',\n    file: null,\n    extractedFields: [],\n  });\n  const [loading, setLoading] = useState(false);\n  const [analyzing, setAnalyzing] = useState(false);\n  const [extractedFields, setExtractedFields] = useState<ExtractedField[]>([]);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement> | { target: { name?: string; value: unknown } }) => {\n    const { name, value } = e.target;\n    if (name) {\n      setValues((prev) => ({ ...prev, [name]: value }));\n    }\n  };\n\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0] || null;\n    \n    if (file) {\n      // Kiểm tra định dạng file\n      if (!file.name.endsWith('.docx') && !file.name.endsWith('.doc') && !file.name.endsWith('.pdf')) {\n        alert('Chỉ chấp nhận file .doc, .docx hoặc .pdf');\n        return;\n      }\n      \n      // Kiểm tra kích thước file (tối đa 5MB)\n      if (file.size > 5 * 1024 * 1024) {\n        alert('Kích thước file không được vượt quá 5MB');\n        return;\n      }\n      \n      setValues((prev) => ({ ...prev, file }));\n      setAnalyzing(true);\n      \n      // Giả lập phân tích AI\n      setTimeout(() => {\n        // Mock dữ liệu được phân tích từ file\n        const mockExtractedFields: ExtractedField[] = [\n          {\n            originalText: 'CÔNG TY TNHH GIẤY CAO PHÁT',\n            placeholder: 'TEN_CONG_TY_A',\n            type: 'text',\n            description: 'Tên công ty bên A',\n            required: true,\n            example: 'Công ty TNHH ABC'\n          },\n          {\n            originalText: 'Số 352, Khu Phố Mỹ Hiệp, Phường Thái Hoà, Thành phố Tân Uyên, Tỉnh Bình Dương',\n            placeholder: 'DIA_CHI_A',\n            type: 'text',\n            description: 'Địa chỉ bên A',\n            required: true,\n            example: 'Số 123, Đường ABC, Quận 1, TP.HCM'\n          },\n          {\n            originalText: '0274 3775 179',\n            placeholder: 'DIEN_THOAI_A',\n            type: 'phone',\n            description: 'Số điện thoại bên A',\n            required: true,\n            example: '0901234567'\n          },\n          {\n            originalText: '3701711279',\n            placeholder: 'MA_SO_THUE_A',\n            type: 'taxcode',\n            description: 'Mã số thuế bên A',\n            required: true,\n            example: '0123456789'\n          },\n          {\n            originalText: 'LÊ THỊ KIM CHI',\n            placeholder: 'NGUOI_DAI_DIEN_A',\n            type: 'text',\n            description: 'Người đại diện bên A',\n            required: true,\n            example: 'Nguyễn Văn A'\n          },\n          {\n            originalText: 'Giám đốc',\n            placeholder: 'CHUC_VU_A',\n            type: 'text',\n            description: 'Chức vụ người đại diện bên A',\n            required: true,\n            example: 'Giám đốc'\n          },\n          {\n            originalText: '10.000.000 VNĐ',\n            placeholder: 'GIA_TRI_HOP_DONG',\n            type: 'number',\n            description: 'Giá trị hợp đồng',\n            required: true,\n            example: '50.000.000 VNĐ'\n          },\n          {\n            originalText: '01/08/2025',\n            placeholder: 'NGAY_BAT_DAU',\n            type: 'date',\n            description: 'Ngày bắt đầu hợp đồng',\n            required: true,\n            example: '01/01/2025'\n          }\n        ];\n        \n        setExtractedFields(mockExtractedFields);\n        setValues(prev => ({ ...prev, extractedFields: mockExtractedFields }));\n        setAnalyzing(false);\n      }, 2000);\n    }\n  };\n  \n  const handleUpdatePlaceholder = (index: number, field: keyof ExtractedField, value: string) => {\n    const updatedFields = [...extractedFields];\n    updatedFields[index] = { ...updatedFields[index], [field]: value };\n    setExtractedFields(updatedFields);\n    setValues(prev => ({ ...prev, extractedFields: updatedFields }));\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!values.name.trim()) {\n      alert('Vui lòng nhập tên mẫu báo giá');\n      return;\n    }\n    \n    if (!values.file) {\n      alert('Vui lòng chọn file mẫu báo giá');\n      return;\n    }\n    \n    try {\n      setLoading(true);\n      await onSubmit(values);\n      handleClose();\n    } catch (error) {\n      console.error('Error submitting template:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleClose = () => {\n    setValues({\n      name: '',\n      description: '',\n      type: 'customer',\n      file: null,\n      extractedFields: [],\n    });\n    setExtractedFields([]);\n    onClose();\n  };\n\n  return (\n    <Dialog open={open} onClose={handleClose} maxWidth=\"lg\" fullWidth>\n      <DialogTitle>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Typography variant=\"h6\">Tải lên mẫu báo giá</Typography>\n          <IconButton onClick={handleClose} size=\"small\">\n            <CloseIcon />\n          </IconButton>\n        </Box>\n      </DialogTitle>\n      <form onSubmit={handleSubmit}>\n        <DialogContent dividers>\n          <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', md: '1fr 2fr' }, gap: 3 }}>\n            <Box>\n              <TextField\n                label=\"Tên mẫu báo giá\"\n                name=\"name\"\n                value={values.name}\n                onChange={handleChange}\n                fullWidth\n                margin=\"normal\"\n                required\n                disabled={loading}\n              />\n              \n              <TextField\n                label=\"Mô tả\"\n                name=\"description\"\n                value={values.description}\n                onChange={handleChange}\n                fullWidth\n                multiline\n                rows={3}\n                margin=\"normal\"\n                disabled={loading}\n              />\n              \n              <FormControl fullWidth margin=\"normal\">\n                <InputLabel>Loại mẫu</InputLabel>\n                <Select\n                  label=\"Loại mẫu\"\n                  name=\"type\"\n                  value={values.type}\n                  onChange={handleChange}\n                  disabled={loading}\n                >\n                  <MenuItem value=\"customer\">Cho khách hàng</MenuItem>\n                  <MenuItem value=\"internal\">Nội bộ</MenuItem>\n                </Select>\n              </FormControl>\n              \n              <Box mt={2} mb={2}>\n                <input\n                  accept=\".docx,.doc,.pdf\"\n                  style={{ display: 'none' }}\n                  id=\"template-upload\"\n                  type=\"file\"\n                  onChange={handleFileChange}\n                  disabled={loading || analyzing}\n                />\n                <label htmlFor=\"template-upload\">\n                  <Button\n                    variant=\"outlined\"\n                    component=\"span\"\n                    startIcon={<UploadIcon />}\n                    disabled={loading || analyzing}\n                  >\n                    Chọn file mẫu (.docx, .doc, .pdf)\n                  </Button>\n                </label>\n                {values.file && (\n                  <Typography variant=\"body2\" sx={{ mt: 1 }}>\n                    Đã chọn: {values.file.name}\n                  </Typography>\n                )}\n              </Box>\n            </Box>\n            \n            <Box>\n              <Paper variant=\"outlined\" sx={{ p: 2, height: '100%' }}>\n                <Typography variant=\"subtitle1\" gutterBottom>\n                  Các trường được phân tích từ mẫu báo giá:\n                </Typography>\n                \n                {analyzing ? (\n                  <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" py={4}>\n                    <CircularProgress size={40} />\n                    <Typography variant=\"body2\" color=\"textSecondary\" sx={{ mt: 2 }}>\n                      Đang phân tích nội dung mẫu báo giá...\n                    </Typography>\n                  </Box>\n                ) : extractedFields.length > 0 ? (\n                  <TableContainer component={Paper} variant=\"outlined\">\n                    <Table size=\"small\">\n                      <TableHead>\n                        <TableRow>\n                          <TableCell>Trường gốc trong file</TableCell>\n                          <TableCell>Placeholder gợi ý</TableCell>\n                          <TableCell>Kiểu dữ liệu</TableCell>\n                          <TableCell>Mô tả</TableCell>\n                          <TableCell align=\"center\">Thao tác</TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {extractedFields.map((field, index) => (\n                          <TableRow key={index}>\n                            <TableCell>{field.originalText}</TableCell>\n                            <TableCell>\n                              <TextField\n                                size=\"small\"\n                                value={field.placeholder}\n                                onChange={(e) => handleUpdatePlaceholder(index, 'placeholder', e.target.value)}\n                                fullWidth\n                                disabled={loading}\n                              />\n                            </TableCell>\n                            <TableCell>\n                              <FormControl fullWidth size=\"small\">\n                                <Select\n                                  value={field.type}\n                                  onChange={(e) => handleUpdatePlaceholder(index, 'type', e.target.value)}\n                                  disabled={loading}\n                                >\n                                  <MenuItem value=\"text\">Văn bản</MenuItem>\n                                  <MenuItem value=\"number\">Số</MenuItem>\n                                  <MenuItem value=\"date\">Ngày tháng</MenuItem>\n                                  <MenuItem value=\"phone\">Điện thoại</MenuItem>\n                                  <MenuItem value=\"email\">Email</MenuItem>\n                                  <MenuItem value=\"taxcode\">Mã số thuế</MenuItem>\n                                </Select>\n                              </FormControl>\n                            </TableCell>\n                            <TableCell>\n                              <TextField\n                                size=\"small\"\n                                value={field.description || ''}\n                                onChange={(e) => handleUpdatePlaceholder(index, 'description', e.target.value)}\n                                fullWidth\n                                disabled={loading}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <IconButton size=\"small\" color=\"error\" onClick={() => {\n                                const updatedFields = [...extractedFields];\n                                updatedFields.splice(index, 1);\n                                setExtractedFields(updatedFields);\n                                setValues(prev => ({ ...prev, extractedFields: updatedFields }));\n                              }} disabled={loading}>\n                                <DeleteIcon fontSize=\"small\" />\n                              </IconButton>\n                            </TableCell>\n                          </TableRow>\n                        ))}\n                      </TableBody>\n                    </Table>\n                  </TableContainer>\n                ) : values.file ? (\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    Không tìm thấy trường nào có thể trích xuất từ file. Vui lòng kiểm tra lại nội dung file.\n                  </Typography>\n                ) : (\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    Vui lòng tải lên file mẫu báo giá để AI phân tích và đề xuất các trường dữ liệu.\n                  </Typography>\n                )}\n                \n                <Box mt={3}>\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    Hướng dẫn sử dụng:\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    - AI sẽ tự động phân tích nội dung mẫu báo giá và đề xuất các trường cần điền\n                    <br />\n                    - Bạn có thể chỉnh sửa tên placeholder và mô tả cho phù hợp\n                    <br />\n                    - Khi tạo báo giá, hệ thống sẽ tự động điền các thông tin vào các vị trí tương ứng\n                  </Typography>\n                </Box>\n              </Paper>\n            </Box>\n          </Box>\n        </DialogContent>\n        \n        <DialogActions sx={{ p: 2, borderTop: 1, borderColor: 'divider' }}>\n          <Button onClick={handleClose} disabled={loading}>\n            Hủy\n          </Button>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading || analyzing || extractedFields.length === 0}\n            startIcon={loading ? <CircularProgress size={20} /> : null}\n          >\n            {loading ? 'Đang tải lên...' : 'Lưu mẫu báo giá'}\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default UploadQuoteTemplate;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Button,\n  Paper,\n  Typography,\n  TextField,\n  Stack,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Autocomplete,\n  SelectChangeEvent,\n  Tabs,\n  Tab,\n} from '@mui/material';\nimport {\n  Search as SearchIcon,\n  Add as AddIcon,\n  FileDownload as ExportIcon,\n} from '@mui/icons-material';\n\n// Types\nimport { Quotation, QuotationStatus } from './types';\nimport { QuoteTemplate, QuoteTemplateTab } from './types/quoteTemplate';\n\n// Components\nimport QuotationForm from './components/QuotationForm';\nimport QuotationDetail from './components/QuotationDetail';\nimport QuotationPreview from './components/QuotationPreview';\nimport QuotationList from './components/QuotationList';\nimport EmailQuotationDialog from './components/EmailQuotationDialog';\nimport QuotationTemplates from './components/QuotationTemplates';\nimport UploadQuoteTemplate from './components/UploadQuoteTemplate';\nimport { UploadQuoteTemplateFormValues } from './types/quoteTemplate';\n\n// Fake data\nconst fakeCustomers = ['Công ty A', 'Công ty B', 'Công ty C', 'Công ty D'];\nconst fakeDeals = [\n  { id: 1, name: 'Deal A1', customer: 'Công ty A' },\n  { id: 2, name: 'Deal A2', customer: 'Công ty A' },\n  { id: 3, name: 'Deal B1', customer: 'Công ty B' },\n  { id: 4, name: 'Deal C1', customer: 'Công ty C' },\n];\n\nconst fakeRequirements = [\n  { \n    id: 1, \n    name: 'Yêu cầu A1.1', \n    dealId: 1, \n    description: 'Xây dựng website bán hàng cho Công ty A',\n    features: [\n      { \n        feature: 'Trang chủ', \n        detail: 'Thiết kế trang chủ hiện đại', \n        description: 'Trang chủ với slider banner, danh mục sản phẩm nổi bật, sản phẩm mới', \n        notes: 'Tích hợp animation cho banner'\n      },\n      { \n        feature: 'Trang sản phẩm', \n        detail: 'Danh sách sản phẩm có bộ lọc', \n        description: 'Hiển thị sản phẩm dạng lưới, có bộ lọc theo danh mục, giá, thương hiệu', \n        notes: 'Có chức năng so sánh sản phẩm'\n      },\n      { \n        feature: 'Giỏ hàng', \n        detail: 'Chức năng giỏ hàng đầy đủ', \n        description: 'Thêm, sửa, xóa sản phẩm trong giỏ hàng, tính tổng tiền', \n        notes: 'Lưu giỏ hàng vào localStorage'\n      },\n      { \n        feature: 'Thanh toán', \n        detail: 'Quy trình thanh toán', \n        description: 'Form nhập thông tin giao hàng, chọn phương thức thanh toán', \n        notes: 'Tích hợp thanh toán qua VNPay'\n      }\n    ] \n  },\n  { \n    id: 2, \n    name: 'Yêu cầu A1.2', \n    dealId: 1, \n    description: 'Xây dựng hệ thống quản lý kho cho Công ty A',\n    features: [\n      { \n        feature: 'Quản lý sản phẩm', \n        detail: 'CRUD sản phẩm', \n        description: 'Thêm, sửa, xóa, xem chi tiết sản phẩm trong kho', \n        notes: 'Hỗ trợ import/export Excel'\n      },\n      { \n        feature: 'Quản lý nhập kho', \n        detail: 'Quy trình nhập kho', \n        description: 'Tạo phiếu nhập kho, xác nhận nhập kho, cập nhật số lượng tồn', \n        notes: 'Tích hợp với mã vạch'\n      },\n      { \n        feature: 'Quản lý xuất kho', \n        detail: 'Quy trình xuất kho', \n        description: 'Tạo phiếu xuất kho, xác nhận xuất kho, cập nhật số lượng tồn', \n        notes: 'Tự động xuất kho khi có đơn hàng'\n      },\n      { \n        feature: 'Báo cáo thống kê', \n        detail: 'Báo cáo tồn kho, nhập xuất', \n        description: 'Báo cáo tồn kho theo thời gian, báo cáo nhập xuất theo sản phẩm', \n        notes: 'Xuất báo cáo dạng PDF, Excel'\n      }\n    ] \n  },\n  { \n    id: 3, \n    name: 'Yêu cầu A2.1', \n    dealId: 2, \n    description: 'Xây dựng app mobile cho Công ty A',\n    features: [\n      { \n        feature: 'Đăng nhập/Đăng ký', \n        detail: 'Hệ thống xác thực', \n        description: 'Đăng nhập bằng email/password, đăng ký tài khoản mới, quên mật khẩu', \n        notes: 'Hỗ trợ đăng nhập bằng Google, Facebook'\n      },\n      { \n        feature: 'Trang cá nhân', \n        detail: 'Thông tin người dùng', \n        description: 'Xem, cập nhật thông tin cá nhân, đổi mật khẩu', \n        notes: 'Upload avatar'\n      },\n      { \n        feature: 'Thông báo', \n        detail: 'Hệ thống thông báo', \n        description: 'Nhận thông báo realtime, xem lịch sử thông báo', \n        notes: 'Sử dụng Firebase Cloud Messaging'\n      }\n    ] \n  },\n  { \n    id: 4, \n    name: 'Yêu cầu B1.1', \n    dealId: 3, \n    description: 'Xây dựng hệ thống Quản lý Kho cho Công ty B',\n    features: [\n      { \n        feature: 'Quản lý Kho', \n        detail: 'Nhập kho', \n        description: 'Cho phép người dùng nhập hàng mới vào kho', \n        notes: 'Từ AI (mẫu)'\n      },\n      { \n        feature: 'Quản lý Kho', \n        detail: 'Xuất kho', \n        description: 'Ghi nhận xuất kho khi giao hàng hoặc bán', \n        notes: 'Từ AI (mẫu)'\n      },\n      { \n        feature: 'Giám sát Kho', \n        detail: 'Cảnh báo tồn kho thấp', \n        description: 'Thông báo khi số lượng hàng tồn dưới mức tối thiểu', \n        notes: 'Từ AI (mẫu)'\n      }\n    ] \n  },\n];\n\nconst generateFakeQuotations = (count: number): Quotation[] => {\n  return Array.from({ length: count }, (_, i) => ({\n    id: i + 1,\n    name: `Báo giá ${i + 1} - ${['Website bán hàng', 'Hệ thống kho', 'App di động', 'Phần mềm kế toán'][i % 4]}`,\n    customer: fakeCustomers[Math.floor(Math.random() * fakeCustomers.length)],\n    dealId: i % 4 + 1,\n    dealName: fakeDeals[i % 4].name,\n    requirementId: i % 4 + 1,\n    requirementName: fakeRequirements[i % 4].name,\n    status: ['draft', 'sent', 'approved', 'rejected'][Math.floor(Math.random() * 4)] as QuotationStatus,\n    createdDate: new Date(Date.now() - Math.floor(Math.random() * 90) * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n    note: '',\n    items: [],\n    totalEffort: Math.floor(Math.random() * 100) + 20,\n    totalAmount: (Math.floor(Math.random() * 100) + 20) * 500000,\n  }));\n};\n\nconst statusOptions = [\n  { value: 'draft', label: 'Draft', color: 'default' },\n  { value: 'sent', label: 'Đã gửi', color: 'info' },\n  { value: 'approved', label: 'Đã duyệt', color: 'success' },\n  { value: 'rejected', label: 'Từ chối', color: 'error' },\n];\n\nconst QuotationManagement = () => {\n  // Tab state\n  const [currentTab, setCurrentTab] = useState<QuoteTemplateTab>('quotes');\n  \n  // State\n  const [searchTerm, setSearchTerm] = useState('');\n  const [customerFilter, setCustomerFilter] = useState<string | null>(null);\n  const [statusFilter, setStatusFilter] = useState<string>('all');\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [loading, setLoading] = useState(false);\n  \n  // Template states\n  const [templates, setTemplates] = useState<QuoteTemplate[]>([]);\n  const [uploadDialogOpen, setUploadDialogOpen] = useState(false);\n  const [selectedTemplate, setSelectedTemplate] = useState<QuoteTemplate | null>(null);\n  \n  // Quotations state\n  const [quotations, setQuotations] = useState<Quotation[]>(generateFakeQuotations(25));\n  \n  // Create dialog state\n  const [createDialogOpen, setCreateDialogOpen] = useState(false);\n  \n  // Detail dialog state\n  const [detailDialogOpen, setDetailDialogOpen] = useState(false);\n  const [selectedQuotation, setSelectedQuotation] = useState<Quotation | null>(null);\n  \n  // Preview dialog state\n  const [previewDialogOpen, setPreviewDialogOpen] = useState(false);\n  \n  // Email dialog state\n  const [emailDialogOpen, setEmailDialogOpen] = useState(false);\n  const [emailQuotation, setEmailQuotation] = useState<Quotation | null>(null);\n  \n  // Load fake data on init\n  useEffect(() => {\n    setLoading(true);\n    // Load quotations\n    setQuotations(generateFakeQuotations(25));\n    \n    // Load templates\n    const mockTemplates: QuoteTemplate[] = [\n      {\n        id: '1',\n        name: 'Mẫu báo giá dự án phần mềm',\n        description: 'Template báo giá dự án phần mềm tiêu chuẩn',\n        type: 'customer',\n        status: 'active',\n        createdAt: '2025-06-30T10:00:00Z',\n        updatedAt: '2025-06-30T10:00:00Z',\n        createdBy: 'Nguyễn Văn A',\n        placeholderCount: 8,\n        isDefault: true,\n        extractedFields: []\n      },\n      {\n        id: '2',\n        name: 'Mẫu báo giá dịch vụ IT',\n        description: 'Template báo giá dịch vụ IT outsourcing',\n        type: 'internal',\n        status: 'active',\n        createdAt: '2025-06-29T15:30:00Z',\n        updatedAt: '2025-06-29T15:30:00Z',\n        createdBy: 'Trần Thị B',\n        placeholderCount: 5,\n        isDefault: false,\n        extractedFields: []\n      }\n    ];\n    \n    setTemplates(mockTemplates);\n    setLoading(false);\n  }, []);\n\n  // Handlers\n  const handleSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(event.target.value);\n    setPage(0);\n  };\n  \n  // Handle tab change\n  const handleTabChange = (_event: React.SyntheticEvent, newValue: QuoteTemplateTab) => {\n    setCurrentTab(newValue);\n    setPage(0);\n  };\n\n  // Template handlers\n  const handleOpenUploadDialog = () => {\n    setUploadDialogOpen(true);\n  };\n\n  const handleCloseUploadDialog = () => {\n    setUploadDialogOpen(false);\n  };\n  \n  const handleUploadTemplate = async (values: UploadQuoteTemplateFormValues): Promise<void> => {\n    try {\n      setLoading(true);\n      // TODO: Replace with actual API call\n      console.log('Uploading template:', values);\n      \n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      // Add new template to the list\n      const newTemplate: QuoteTemplate = {\n        id: `template-${Date.now()}`,\n        name: values.name,\n        description: values.description,\n        type: values.type,\n        status: 'active',\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString(),\n        createdBy: 'Người dùng hiện tại',\n        placeholderCount: Math.floor(Math.random() * 10) + 3, // Random number of placeholders\n        isDefault: false,\n        extractedFields: []\n      };\n      \n      setTemplates(prev => [newTemplate, ...prev]);\n      setUploadDialogOpen(false);\n      \n    } catch (error) {\n      console.error('Error uploading template:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const handleViewTemplate = (templateId: string) => {\n    const template = templates.find(t => t.id === templateId);\n    if (template) {\n      setSelectedTemplate(template);\n      // Here you would implement the template viewing functionality\n      console.log('Viewing template:', template);\n    }\n  };\n  \n  const handleDownloadTemplate = (templateId: string) => {\n    const template = templates.find(t => t.id === templateId);\n    if (template) {\n      // Here you would implement the template download functionality\n      console.log('Downloading template:', template);\n    }\n  };\n  \n  const handleDeleteTemplate = (templateId: string) => {\n    // Here you would implement the template deletion functionality\n    setTemplates(prev => prev.filter(t => t.id !== templateId));\n    console.log('Deleted template with ID:', templateId);\n  };\n  \n  const handleCustomerFilterChange = (_: any, newValue: string | null) => {\n    setCustomerFilter(newValue);\n    setPage(0);\n  };\n\n  const handleStatusFilterChange = (event: SelectChangeEvent<string>) => {\n    setStatusFilter(event.target.value);\n    setPage(0);\n  };\n\n  const handlePageChange = (_: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleRowsPerPageChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleViewQuotationDetail = (id: number) => {\n    const quotation = quotations.find(q => q.id === id);\n    if (quotation) {\n      setSelectedQuotation(quotation);\n      setDetailDialogOpen(true);\n    }\n  };\n\n  const handleDownloadPdf = (id: number) => {\n    const quotation = quotations.find(q => q.id === id);\n    if (quotation) {\n      setSelectedQuotation(quotation);\n      setPreviewDialogOpen(true);\n    }\n  };\n\n  const handleSendEmail = (id: number) => {\n    const quotation = quotations.find(q => q.id === id);\n    if (quotation) {\n      setEmailQuotation(quotation);\n      setEmailDialogOpen(true);\n    }\n  };\n\n  const handleEmailSend = (emailData: {\n    to: string;\n    cc: string;\n    subject: string;\n    content: string;\n  }) => {\n    // In a real app, this would call an API to send the email\n    console.log('Sending email:', emailData);\n    \n    // Update quotation status to 'sent' if it was 'draft'\n    if (emailQuotation?.status === 'draft') {\n      const updatedQuotations = quotations.map(q => \n        q.id === emailQuotation.id \n          ? { ...q, status: 'sent' as const } \n          : q\n      );\n      setQuotations(updatedQuotations);\n    }\n    \n    // Show success message\n    alert('Email đã được gửi thành công!');\n    setEmailDialogOpen(false);\n  };\n\n  const handleCreateQuotation = () => {\n    setCreateDialogOpen(true);\n  };\n\n  const handleCloseCreateDialog = () => {\n    setCreateDialogOpen(false);\n  };\n\n  const handleSaveQuotation = (quotation: Quotation) => {\n    const newQuotation = {\n      ...quotation,\n      id: Math.max(...quotations.map(q => q.id), 0) + 1,\n    };\n    \n    setQuotations([newQuotation, ...quotations]);\n    setCreateDialogOpen(false);\n  };\n\n  // Filter quotations\n  const filteredQuotations = quotations.filter(q => {\n    const matchesSearch = q.name.toLowerCase().includes(searchTerm.toLowerCase()) || \n                          q.customer.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesCustomer = !customerFilter || q.customer === customerFilter;\n    const matchesStatus = statusFilter === 'all' || q.status === statusFilter;\n    return matchesSearch && matchesCustomer && matchesStatus;\n  });\n\n  const paginatedQuotations = filteredQuotations.slice(\n    page * rowsPerPage,\n    page * rowsPerPage + rowsPerPage\n  );\n\n  // Các hàm tiện ích đã được chuyển vào component QuotationList\n\n  return (\n    <Box sx={{ p: 3 }}>\n      {emailQuotation && (\n        <EmailQuotationDialog\n          open={emailDialogOpen}\n          onClose={() => setEmailDialogOpen(false)}\n          onSend={handleEmailSend}\n          customerName={emailQuotation.customer}\n          serviceName={emailQuotation.name}\n          responsiblePerson=\"Người phụ trách\"\n          pdfFileName={`BaoGia_${emailQuotation.id}.pdf`}\n        />\n      )}\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3, flexWrap: 'wrap', gap: 2 }}>\n        <Typography variant=\"h4\" component=\"h1\">\n          Quản lý báo giá/ước tính\n        </Typography>\n        {currentTab === 'quotes' && (\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<AddIcon />}\n            onClick={handleCreateQuotation}\n          >\n            Tạo báo giá mới\n          </Button>\n        )}\n      </Box>\n      \n      {/* Tabs */}\n      <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 3 }}>\n        <Tabs \n          value={currentTab} \n          onChange={handleTabChange}\n          aria-label=\"quotation management tabs\"\n        >\n          <Tab label=\"Mẫu báo giá\" value=\"templates\" />\n          <Tab label=\"Báo giá\" value=\"quotes\" />\n        </Tabs>\n      </Box>\n      \n      {currentTab === 'templates' ? (\n        <>\n          <QuotationTemplates \n            templates={templates}\n            loading={loading}\n            onUploadClick={handleOpenUploadDialog}\n            onViewTemplate={handleViewTemplate}\n            onDeleteTemplate={handleDeleteTemplate}\n            onDownloadTemplate={handleDownloadTemplate}\n          />\n          \n          <UploadQuoteTemplate \n            open={uploadDialogOpen}\n            onClose={handleCloseUploadDialog}\n            onSubmit={handleUploadTemplate}\n          />\n        </>\n      ) : (\n        <>\n          {/* Search and Filter */}\n          <Paper sx={{ p: 2, mb: 3 }}>\n            <Stack direction={{ xs: 'column', md: 'row' }} spacing={2} alignItems=\"center\">\n              <TextField\n                label=\"Tìm kiếm\"\n                variant=\"outlined\"\n                size=\"small\"\n                value={searchTerm}\n                onChange={handleSearch}\n                sx={{ minWidth: 200, flex: 1 }}\n                InputProps={{\n                  startAdornment: <SearchIcon fontSize=\"small\" sx={{ mr: 1, color: 'text.secondary' }} />,\n                }}\n              />\n              \n              <Autocomplete\n                options={fakeCustomers}\n                value={customerFilter}\n                onChange={handleCustomerFilterChange}\n                renderInput={(params) => <TextField {...params} label=\"Khách hàng\" size=\"small\" />}\n                sx={{ minWidth: 200 }}\n              />\n              \n              <FormControl size=\"small\" sx={{ minWidth: 150 }}>\n                <InputLabel id=\"status-filter-label\">Trạng thái</InputLabel>\n                <Select\n                  labelId=\"status-filter-label\"\n                  value={statusFilter}\n                  label=\"Trạng thái\"\n                  onChange={handleStatusFilterChange}\n                >\n                  <MenuItem value=\"all\">Tất cả</MenuItem>\n                  {statusOptions.map(option => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              \n              <Button \n                variant=\"outlined\" \n                startIcon={<ExportIcon />}\n                onClick={() => console.log('Export data')}\n              >\n                Xuất Excel\n              </Button>\n            </Stack>\n          </Paper>\n\n          {/* Quotation List */}\n          <QuotationList\n            quotations={paginatedQuotations}\n            onViewDetail={handleViewQuotationDetail}\n            onDownloadPdf={handleDownloadPdf}\n            onSendEmail={handleSendEmail}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            onPageChange={handlePageChange}\n            onRowsPerPageChange={handleRowsPerPageChange}\n            totalCount={filteredQuotations.length}\n          />\n        </>\n      )}\n      \n      {/* Dialog tạo báo giá mới */}\n      <QuotationForm\n        open={createDialogOpen}\n        onClose={handleCloseCreateDialog}\n        onSave={handleSaveQuotation}\n        customers={fakeCustomers}\n        deals={fakeDeals}\n        requirements={fakeRequirements}\n        templates={templates}\n      />\n\n      {/* Dialog xem chi tiết báo giá */}\n      <QuotationDetail\n        open={detailDialogOpen}\n        onClose={() => setDetailDialogOpen(false)}\n        quotation={selectedQuotation}\n      />\n\n      {/* Dialog xem trước và xuất PDF */}\n      <QuotationPreview\n        open={previewDialogOpen}\n        onClose={() => setPreviewDialogOpen(false)}\n        quotation={selectedQuotation}\n        onSaveDraft={(quotation) => {\n          // Cập nhật báo giá với nội dung mới\n          const updatedQuotations = quotations.map(q => \n            q.id === quotation.id ? quotation : q\n          );\n          setQuotations(updatedQuotations);\n          setPreviewDialogOpen(false);\n          alert('Đã lưu nháp báo giá');\n        }}\n        onExportPdf={(quotation) => {\n          console.log('Export PDF', quotation);\n          alert('Đã xuất file PDF báo giá');\n        }}\n        onEdit={() => {\n          setPreviewDialogOpen(false);\n          // Mở lại form chỉnh sửa nếu cần\n        }}\n      />\n    </Box>\n  );\n};\n\nexport default QuotationManagement;\n"],"names":["getTableFooterUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableFooterRoot","styled","name","display","tablelvl2","variant","defaultComponent","React","inProps","ref","props","useDefaultProps","className","component","other","_objectWithoutProperties","ownerState","_objectSpread","classes","composeClasses","root","useUtilityClasses","_jsx","Tablelvl2Context","Provider","value","children","as","clsx","role","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","useThemePropsDefault","useThemePropsSystem","joinChildren","separator","childrenArray","toArray","filter","Boolean","reduce","output","child","index","push","length","key","concat","style","_ref","theme","styles","flexDirection","handleBreakpoints","resolveBreakpointValues","values","direction","breakpoints","propValue","spacing","transformer","createUnarySpacing","base","Object","keys","acc","breakpoint","directionValues","spacingValues","forEach","previousDirectionValue","styleFromPropValue","useFlexGap","gap","getValue","margin","row","column","deepmerge","mergeBreakpointsInOrder","Stack","options","arguments","undefined","createStyledComponent","useThemeProps","componentName","StackRoot","themeProps","extendSxProp","divider","createStack","createStyled","createSvgIcon","d","FIXED_COLUMNS","isFixed","isEffort","rows","effortColumns","onRowsChange","onColumnsChange","page","setPage","useState","rowsPerPage","setRowsPerPage","newColumnName","setNewColumnName","editingColumn","setEditingColumn","editColumnName","setEditColumnName","handleCellChange","rowId","field","updatedRows","map","id","startsWith","efforts","Number","fixedColumnsWithIds","col","toLowerCase","replace","order","nonDuplicateEffortColumns","effortCol","some","fixedCol","allColumns","sort","a","b","_jsxs","Box","sx","justifyContent","mb","Button","color","startIcon","AddIcon","onClick","handleAddRow","newRow","Date","now","feature","detail","description","notes","itReq","uxUi","size","mr","alignItems","TextField","placeholder","onChange","e","target","minWidth","handleAddColumn","trim","newColumn","disabled","TableContainer","Paper","maxHeight","overflow","Table","stickyHeader","TableHead","TableRow","TableCell","width","DragHandleIcon","cursor","opacity","IconButton","columnId","updatedColumns","saveColumnName","SaveIcon","fontSize","CancelIcon","Typography","ml","startEditingColumn","currentName","p","EditIcon","columnToDelete","find","_ref2","_ref3","_","restEfforts","_toPropertyKey","handleDeleteColumn","DeleteIcon","TableBody","slice","rowIndex","hover","_row$efforts2","isEffortColumn","console","log","isSubtotalColumn","type","fullWidth","inputProps","min","step","fontWeight","sum","_row$efforts3","multiline","maxRows","Tooltip","title","handleDeleteRow","TableFooter","colSpan","align","columnKey","_row$efforts","rowSum","_row$efforts4","backgroundColor","_row$efforts5","TablePagination","rowsPerPageOptions","count","onPageChange","handleChangePage","event","newPage","onRowsPerPageChange","parseInt","labelRowsPerPage","labelDisplayedRows","_ref4","from","to","DEFAULT_ROLES","rates","onRatesChange","newRole","setNewRole","customRole","setCustomRole","handleRateChange","updatedRates","rate","calculateTotalHours","hours","unit","FormControl","InputLabel","Select","label","MenuItem","roleToAdd","alert","newRate","Intl","NumberFormat","currency","format","DEFAULT_EFFORT_COLUMNS","DEFAULT_TM_RATES","mode","onModeChange","onEstimationDataChange","initialData","fixedPriceRows","setFixedPriceRows","setEffortColumns","tmRates","setTmRates","snackbar","setSnackbar","open","message","severity","useEffect","mappedRows","item","Math","random","toString","substr","note","createNewRow","handleFixedPriceDataChange","columns","handleCloseSnackbar","mt","gutterBottom","elevation","border","borderRadius","FormLabel","RadioGroup","newMode","FormControlLabel","control","Radio","Divider","my","FixedPriceTable","TimeAndMaterialTable","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert","_newQuotation$totalAm","onSave","customers","deals","requirements","templates","activeStep","setActiveStep","touched","setTouched","estimationMode","setEstimationMode","newQuotation","setNewQuotation","customer","dealId","dealName","requirementId","requirementName","status","createdDate","toISOString","split","items","totalEffort","totalAmount","templateId","templateName","filteredDeals","setFilteredDeals","filteredRequirements","setFilteredRequirements","estimationItems","setEstimationItems","deal","req","selectedRequirement","features","frontendEffort","backendEffort","qcEffort","pmEffort","totalMD","totalMM","handleItemsChange","updatedItems","Dialog","maxWidth","DialogTitle","DialogContent","Stepper","pt","pb","Step","StepLabel","bgcolor","TemplateIcon","required","error","labelId","selectedTemplate","t","prev","onBlur","template","FormHelperText","flexWrap","Autocomplete","handleCustomerChange","newValue","renderInput","params","flex","getOptionLabel","option","handleDealChange","r","handleRequirementChange","EstimationStep","data","convertedItems","val","estimationConfig","textAlign","pl","toLocaleString","fontStyle","DialogActions","handleBack","prevStep","handleNext","endIcon","NextIcon","handleSave","onItemsChange","readOnly","disableFeatureFields","tableItems","setTableItems","handleValueChange","updatedItem","includes","totalFE","totalBE","totalQC","totalPM","newItem","max","overflowX","tableLayout","position","left","zIndex","arrow","placement","whiteSpace","wordBreak","toFixed","quotation","statusInfo","draft","sent","approved","rejected","Chip","getStatusChip","amount","EstimationTable","executiveSummary","_Fragment","PdfIcon","EmailIcon","onSaveDraft","onExportPdf","pages","setPages","customPages","Array","isArray","toLocaleDateString","total","join","paymentTerms","height","PdfPageEditor","initialContent","updatedPages","handleSaveDraft","updatedQuotation","quotations","totalCount","onViewDetail","onDownloadPdf","onSendEmail","ViewIcon","onSend","customerName","serviceName","responsiblePerson","pdfFileName","emailData","setEmailData","cc","subject","content","handleChange","CloseIcon","dividers","window","PreviewIcon","SendIcon","handleSend","loading","onUploadClick","onViewTemplate","onDeleteTemplate","onDownloadTemplate","isDefault","createdAt","createdBy","placeholderCount","VisibilityIcon","FileDownloadIcon","onSubmit","setValues","file","extractedFields","setLoading","analyzing","setAnalyzing","setExtractedFields","handleUpdatePlaceholder","updatedFields","handleClose","async","preventDefault","gridTemplateColumns","xs","md","accept","_e$target$files","files","endsWith","setTimeout","mockExtractedFields","originalText","example","htmlFor","UploadIcon","py","CircularProgress","splice","borderTop","borderColor","fakeCustomers","fakeDeals","fakeRequirements","generateFakeQuotations","i","floor","statusOptions","QuotationManagement","currentTab","setCurrentTab","searchTerm","setSearchTerm","customerFilter","setCustomerFilter","statusFilter","setStatusFilter","setTemplates","uploadDialogOpen","setUploadDialogOpen","setSelectedTemplate","setQuotations","createDialogOpen","setCreateDialogOpen","detailDialogOpen","setDetailDialogOpen","selectedQuotation","setSelectedQuotation","previewDialogOpen","setPreviewDialogOpen","emailDialogOpen","setEmailDialogOpen","emailQuotation","setEmailQuotation","updatedAt","filteredQuotations","q","matchesSearch","matchesCustomer","matchesStatus","paginatedQuotations","EmailQuotationDialog","updatedQuotations","handleCreateQuotation","borderBottom","Tabs","handleTabChange","_event","Tab","QuotationTemplates","handleOpenUploadDialog","UploadQuoteTemplate","handleCloseUploadDialog","Promise","resolve","newTemplate","InputProps","startAdornment","SearchIcon","handleCustomerFilterChange","ExportIcon","QuotationList","handlePageChange","QuotationForm","handleCloseCreateDialog","QuotationDetail","QuotationPreview","onEdit"],"sourceRoot":""}