{"version":3,"file":"static/js/674.958a7d6f.chunk.js","mappings":"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","sources":["pages/Dashboard/components/AIChatbot.tsx","pages/Dashboard/components/KPIStats.tsx","pages/Dashboard/components/DynamicCharts.tsx","pages/Dashboard/components/SavedReports.tsx","pages/Dashboard/index.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { \n  Box, \n  TextField, \n  IconButton, \n  Paper, \n  Typography, \n  Chip,\n  Button,\n  List,\n  ListItem,\n  ListItemText,\n  Divider\n} from '@mui/material';\nimport { \n  Send as SendIcon, \n  Mic as MicIcon, \n  Save as SaveIcon, \n  Download as DownloadIcon,\n  History as HistoryIcon\n} from '@mui/icons-material';\n\n// Danh sách gợi ý\nconst SUGGESTIONS = [\n  \"Cho tôi xem hôm nay có bao nhiêu khách hàng mới\",\n  \"Vẽ biểu đồ doanh thu theo nhân viên trong tháng này\",\n  \"Ai là người chốt deal nhiều nhất trong quý?\",\n  \"So sánh doanh thu tháng này với tháng trước\",\n  \"Tỉ lệ chuyển đổi từ lead sang khách hàng trong quý\"\n];\n\n// Lịch sử trò chuyện mẫu\nconst SAMPLE_HISTORY = [\n  { id: 1, query: \"Doanh thu tháng này là bao nhiêu?\", timestamp: \"10:30 AM\" },\n  { id: 2, query: \"Top 5 nhân viên có doanh số cao nhất\", timestamp: \"Hôm qua\" },\n  { id: 3, query: \"Tỉ lệ chuyển đổi từ lead sang khách hàng\", timestamp: \"Thứ 2\" }\n];\n\ninterface AIChatbotProps {\n  onGenerateReport: (query: string) => void;\n}\n\nconst AIChatbot: React.FC<AIChatbotProps> = ({ onGenerateReport }) => {\n  const [query, setQuery] = useState('');\n  const [showHistory, setShowHistory] = useState(false);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (query.trim()) {\n      onGenerateReport(query);\n      setQuery('');\n    }\n  };\n\n  return (\n    <Paper \n      elevation={3} \n      sx={{ \n        p: 3, \n        mb: 3, \n        borderRadius: 2,\n        background: 'linear-gradient(to right, #f5f7fa, #e4e8f0)'\n      }}\n    >\n      <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n        <Typography variant=\"h6\" sx={{ flexGrow: 1, fontWeight: 'bold', color: '#334155' }}>\n          🤖 AI Assistant - Báo cáo thông minh\n        </Typography>\n        <IconButton \n          color={showHistory ? \"primary\" : \"default\"} \n          onClick={() => setShowHistory(!showHistory)}\n          sx={{ mr: 1 }}\n        >\n          <HistoryIcon />\n        </IconButton>\n      </Box>\n\n      <form onSubmit={handleSubmit}>\n        <Box sx={{ display: 'flex', mb: 2 }}>\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            placeholder=\"Nhập câu hỏi hoặc yêu cầu báo cáo...\"\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            sx={{ \n              mr: 1,\n              '& .MuiOutlinedInput-root': {\n                borderRadius: '30px',\n                backgroundColor: '#fff'\n              }\n            }}\n          />\n          <IconButton \n            color=\"primary\" \n            type=\"submit\"\n            sx={{ \n              backgroundColor: '#2563eb', \n              color: 'white',\n              '&:hover': {\n                backgroundColor: '#1d4ed8',\n              },\n              borderRadius: '50%',\n              width: 56,\n              height: 56\n            }}\n          >\n            <SendIcon />\n          </IconButton>\n          <IconButton \n            sx={{ \n              ml: 1,\n              backgroundColor: '#f3f4f6',\n              borderRadius: '50%',\n              width: 56,\n              height: 56\n            }}\n          >\n            <MicIcon />\n          </IconButton>\n        </Box>\n      </form>\n\n      <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 2 }}>\n        {SUGGESTIONS.map((suggestion, index) => (\n          <Chip\n            key={index}\n            label={suggestion}\n            onClick={() => {\n              setQuery(suggestion);\n              onGenerateReport(suggestion);\n              setQuery('');\n            }}\n            sx={{ \n              backgroundColor: '#f1f5f9',\n              '&:hover': {\n                backgroundColor: '#e2e8f0',\n              }\n            }}\n          />\n        ))}\n      </Box>\n\n      {showHistory && (\n        <Box sx={{ mt: 2 }}>\n          <Typography variant=\"subtitle2\" sx={{ mb: 1, color: '#64748b' }}>\n            Báo cáo gần đây\n          </Typography>\n          <Paper variant=\"outlined\" sx={{ maxHeight: 200, overflow: 'auto', p: 1 }}>\n            <List dense>\n              {SAMPLE_HISTORY.map((item) => (\n                <React.Fragment key={item.id}>\n                  <ListItem \n                    onClick={() => {\n                      setQuery(item.query);\n                      onGenerateReport(item.query);\n                      setQuery('');\n                    }}\n                    sx={{ cursor: 'pointer' }}\n                  >\n                    <ListItemText \n                      primary={item.query} \n                      secondary={item.timestamp} \n                    />\n                    <Box>\n                      <IconButton size=\"small\">\n                        <SaveIcon fontSize=\"small\" />\n                      </IconButton>\n                      <IconButton size=\"small\">\n                        <DownloadIcon fontSize=\"small\" />\n                      </IconButton>\n                    </Box>\n                  </ListItem>\n                  <Divider />\n                </React.Fragment>\n              ))}\n            </List>\n          </Paper>\n        </Box>\n      )}\n\n      <Box sx={{ display: 'flex', justifyContent: 'flex-end', mt: 2 }}>\n        <Button \n          startIcon={<SaveIcon />} \n          variant=\"outlined\" \n          size=\"small\" \n          sx={{ mr: 1 }}\n        >\n          Lưu báo cáo\n        </Button>\n        <Button \n          startIcon={<DownloadIcon />} \n          variant=\"outlined\" \n          size=\"small\"\n        >\n          Tải xuống\n        </Button>\n      </Box>\n    </Paper>\n  );\n};\n\nexport default AIChatbot;","import React from 'react';\nimport { \n  Box, \n  Paper, \n  Typography, \n  Avatar,\n  Chip\n} from '@mui/material';\nimport {\n  Person as PersonIcon,\n  Description as DescriptionIcon,\n  TrendingUp as TrendingUpIcon,\n  AttachMoney as AttachMoneyIcon,\n  EmojiEvents as EmojiEventsIcon\n} from '@mui/icons-material';\n\n// Dữ liệu mẫu cho các KPI\nconst KPI_DATA = {\n  newCustomers: {\n    value: 12,\n    change: '+20%',\n    positive: true\n  },\n  totalDeals: {\n    value: 156,\n    change: '+5%',\n    positive: true\n  },\n  dealStages: {\n    lead: 45,\n    quote: 32,\n    negotiation: 18,\n    win: 38,\n    lose: 23\n  },\n  revenue: {\n    value: '2.4 tỷ',\n    change: '+15%',\n    positive: true\n  },\n  topEmployee: {\n    name: 'Nguyễn Văn A',\n    deals: 24,\n    avatar: ''\n  }\n};\n\nconst KPIStats: React.FC = () => {\n  return (\n    <Box sx={{ mb: 4 }}>\n      <Typography variant=\"h6\" sx={{ mb: 2, fontWeight: 'bold' }}>\n        📊 Thống kê KPI tổng quan\n      </Typography>\n      \n      <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', sm: '1fr 1fr', md: 'repeat(3, 1fr)', lg: 'repeat(5, 1fr)' }, gap: 2 }}>\n        {/* Khách hàng mới */}\n        <Box>\n          <Paper \n            elevation={2}\n            sx={{ \n              p: 2, \n              height: '100%', \n              display: 'flex', \n              flexDirection: 'column',\n              borderTop: '4px solid #3b82f6',\n              borderRadius: '8px'\n            }}\n          >\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n              <Avatar sx={{ bgcolor: '#93c5fd', mr: 1 }}>\n                <PersonIcon />\n              </Avatar>\n              <Typography variant=\"subtitle2\" color=\"textSecondary\">\n                Khách hàng mới\n              </Typography>\n            </Box>\n            \n            <Typography variant=\"h4\" sx={{ fontWeight: 'bold', mb: 1 }}>\n              {KPI_DATA.newCustomers.value}\n            </Typography>\n            \n            <Box sx={{ mt: 'auto', display: 'flex', alignItems: 'center' }}>\n              <Chip \n                label={KPI_DATA.newCustomers.change} \n                size=\"small\" \n                color={KPI_DATA.newCustomers.positive ? \"success\" : \"error\"}\n                sx={{ fontSize: '0.75rem' }}\n              />\n              <Typography variant=\"caption\" sx={{ ml: 1, color: 'text.secondary' }}>\n                so với hôm qua\n              </Typography>\n            </Box>\n          </Paper>\n        </Box>\n\n        {/* Tổng deal */}\n        <Box>\n          <Paper \n            elevation={2}\n            sx={{ \n              p: 2, \n              height: '100%', \n              display: 'flex', \n              flexDirection: 'column',\n              borderTop: '4px solid #8b5cf6',\n              borderRadius: '8px'\n            }}\n          >\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n              <Avatar sx={{ bgcolor: '#c4b5fd', mr: 1 }}>\n                <DescriptionIcon />\n              </Avatar>\n              <Typography variant=\"subtitle2\" color=\"textSecondary\">\n                Tổng deal\n              </Typography>\n            </Box>\n            \n            <Typography variant=\"h4\" sx={{ fontWeight: 'bold', mb: 1 }}>\n              {KPI_DATA.totalDeals.value}\n            </Typography>\n            \n            <Box sx={{ mt: 'auto', display: 'flex', alignItems: 'center' }}>\n              <Chip \n                label={KPI_DATA.totalDeals.change} \n                size=\"small\" \n                color={KPI_DATA.totalDeals.positive ? \"success\" : \"error\"}\n                sx={{ fontSize: '0.75rem' }}\n              />\n              <Typography variant=\"caption\" sx={{ ml: 1, color: 'text.secondary' }}>\n                so với tuần trước\n              </Typography>\n            </Box>\n          </Paper>\n        </Box>\n\n        {/* Deal theo giai đoạn */}\n        <Box>\n          <Paper \n            elevation={2}\n            sx={{ \n              p: 2, \n              height: '100%', \n              display: 'flex', \n              flexDirection: 'column',\n              borderTop: '4px solid #ec4899',\n              borderRadius: '8px'\n            }}\n          >\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n              <Avatar sx={{ bgcolor: '#fbcfe8', mr: 1 }}>\n                <TrendingUpIcon />\n              </Avatar>\n              <Typography variant=\"subtitle2\" color=\"textSecondary\">\n                Deal theo giai đoạn\n              </Typography>\n            </Box>\n            \n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5, mb: 1 }}>\n              <Chip label={`Lead: ${KPI_DATA.dealStages.lead}`} size=\"small\" sx={{ bgcolor: '#fee2e2' }} />\n              <Chip label={`Báo giá: ${KPI_DATA.dealStages.quote}`} size=\"small\" sx={{ bgcolor: '#fef3c7' }} />\n              <Chip label={`Đàm phán: ${KPI_DATA.dealStages.negotiation}`} size=\"small\" sx={{ bgcolor: '#e0f2fe' }} />\n              <Chip label={`Win: ${KPI_DATA.dealStages.win}`} size=\"small\" sx={{ bgcolor: '#dcfce7' }} />\n              <Chip label={`Lose: ${KPI_DATA.dealStages.lose}`} size=\"small\" sx={{ bgcolor: '#f3f4f6' }} />\n            </Box>\n            \n            <Typography variant=\"caption\" sx={{ mt: 'auto', color: 'text.secondary' }}>\n              Tổng: {Object.values(KPI_DATA.dealStages).reduce((a, b) => a + b, 0)} deal\n            </Typography>\n          </Paper>\n        </Box>\n\n        {/* Doanh thu thực tế */}\n        <Box>\n          <Paper \n            elevation={2}\n            sx={{ \n              p: 2, \n              height: '100%', \n              display: 'flex', \n              flexDirection: 'column',\n              borderTop: '4px solid #10b981',\n              borderRadius: '8px'\n            }}\n          >\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n              <Avatar sx={{ bgcolor: '#a7f3d0', mr: 1 }}>\n                <AttachMoneyIcon />\n              </Avatar>\n              <Typography variant=\"subtitle2\" color=\"textSecondary\">\n                Doanh thu thực tế\n              </Typography>\n            </Box>\n            \n            <Typography variant=\"h4\" sx={{ fontWeight: 'bold', mb: 1 }}>\n              {KPI_DATA.revenue.value}\n            </Typography>\n            \n            <Box sx={{ mt: 'auto', display: 'flex', alignItems: 'center' }}>\n              <Chip \n                label={KPI_DATA.revenue.change} \n                size=\"small\" \n                color={KPI_DATA.revenue.positive ? \"success\" : \"error\"}\n                sx={{ fontSize: '0.75rem' }}\n              />\n              <Typography variant=\"caption\" sx={{ ml: 1, color: 'text.secondary' }}>\n                so với tháng trước\n              </Typography>\n            </Box>\n          </Paper>\n        </Box>\n\n        {/* Nhân viên top deal */}\n        <Box>\n          <Paper \n            elevation={2}\n            sx={{ \n              p: 2, \n              height: '100%', \n              display: 'flex', \n              flexDirection: 'column',\n              borderTop: '4px solid #f59e0b',\n              borderRadius: '8px'\n            }}\n          >\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n              <Avatar sx={{ bgcolor: '#fde68a', mr: 1 }}>\n                <EmojiEventsIcon />\n              </Avatar>\n              <Typography variant=\"subtitle2\" color=\"textSecondary\">\n                Nhân viên top deal\n              </Typography>\n            </Box>\n            \n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n              <Avatar sx={{ mr: 1 }}>\n                {KPI_DATA.topEmployee.avatar || KPI_DATA.topEmployee.name.charAt(0)}\n              </Avatar>\n              <Typography variant=\"body1\" sx={{ fontWeight: 'bold' }}>\n                {KPI_DATA.topEmployee.name}\n              </Typography>\n            </Box>\n            \n            <Box sx={{ mt: 'auto' }}>\n              <Typography variant=\"body2\">\n                <strong>{KPI_DATA.topEmployee.deals} deals</strong> đã chốt trong tháng\n              </Typography>\n            </Box>\n          </Paper>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default KPIStats;","import React, { useState } from 'react';\nimport { \n  Box, \n  Paper, \n  Typography, \n  ToggleButtonGroup, \n  ToggleButton,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  SelectChangeEvent\n} from '@mui/material';\nimport {\n  BarChart as BarChartIcon,\n  PieChart as PieChartIcon,\n  ShowChart as LineChartIcon,\n  TableChart as TableChartIcon\n} from '@mui/icons-material';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  PieChart,\n  Pie,\n  Cell,\n  LineChart,\n  Line\n} from 'recharts';\n\n// Dữ liệu mẫu cho biểu đồ doanh thu theo nhân viên\nconst REVENUE_DATA = [\n  { name: 'Nguyễn Văn A', value: 1200 },\n  { name: 'Trần Thị B', value: 950 },\n  { name: 'Lê Văn C', value: 850 },\n  { name: 'Phạm Thị D', value: 700 },\n  { name: 'Hoàng Văn E', value: 500 },\n];\n\n// Dữ liệu mẫu cho biểu đồ trạng thái deal\nconst DEAL_STATUS_DATA = [\n  { name: 'Lead', value: 45, color: '#f87171' },\n  { name: 'Báo giá', value: 32, color: '#fbbf24' },\n  { name: 'Đàm phán', value: 18, color: '#60a5fa' },\n  { name: 'Win', value: 38, color: '#34d399' },\n  { name: 'Lose', value: 23, color: '#9ca3af' },\n];\n\n// Dữ liệu mẫu cho khách hàng mới\nconst NEW_CUSTOMERS_DATA = [\n  { name: 'Hôm nay', value: 12 },\n  { name: 'Hôm qua', value: 10 },\n  { name: '2 ngày trước', value: 8 },\n  { name: '3 ngày trước', value: 15 },\n  { name: '4 ngày trước', value: 7 },\n];\n\n// Dữ liệu mẫu cho doanh thu theo tháng\nconst REVENUE_BY_MONTH_DATA = [\n  { name: 'T1', value: 800 },\n  { name: 'T2', value: 950 },\n  { name: 'T3', value: 1100 },\n  { name: 'T4', value: 1250 },\n  { name: 'T5', value: 1400 },\n  { name: 'T6', value: 1600 },\n];\n\n// Dữ liệu mẫu cho tỉ lệ chuyển đổi\nconst CONVERSION_RATE_DATA = [\n  { name: 'Chuyển đổi', value: 65, color: '#34d399' },\n  { name: 'Không chuyển đổi', value: 35, color: '#f87171' },\n];\n\n// Dữ liệu mẫu cho biểu đồ doanh thu theo tháng\nconst MONTHLY_REVENUE_DATA = [\n  { name: 'T1', value: 1200 },\n  { name: 'T2', value: 1900 },\n  { name: 'T3', value: 1500 },\n  { name: 'T4', value: 2200 },\n  { name: 'T5', value: 1800 },\n  { name: 'T6', value: 2400 },\n  { name: 'T7', value: 2100 },\n];\n\n// Màu sắc cho biểu đồ\nconst COLORS = ['#3b82f6', '#10b981', '#f59e0b', '#8b5cf6', '#ef4444'];\n\n// Loại biểu đồ\ntype ChartType = 'bar' | 'pie' | 'line' | 'table';\n\n// Loại thời gian\ntype TimeRange = 'today' | 'week' | 'month' | 'quarter' | 'year';\n\ninterface DynamicChartsProps {\n  query: string;\n}\n\nconst DynamicCharts: React.FC<DynamicChartsProps> = ({ query }) => {\n  const [chartType, setChartType] = useState<ChartType>('bar');\n  const [timeRange, setTimeRange] = useState<TimeRange>('month');\n\n  const handleChartTypeChange = (\n    event: React.MouseEvent<HTMLElement>,\n    newChartType: ChartType | null,\n  ) => {\n    if (newChartType !== null) {\n      setChartType(newChartType);\n    }\n  };\n\n  const handleTimeRangeChange = (event: SelectChangeEvent) => {\n    setTimeRange(event.target.value as TimeRange);\n  };\n\n  // Xác định loại biểu đồ và dữ liệu dựa trên query\n  const getChartTypeFromQuery = (query: string): { type: string; chartType: ChartType } => {\n    const lowercaseQuery = query.toLowerCase();\n    \n    // Khách hàng mới\n    if (lowercaseQuery.includes('khách hàng mới') || \n        (lowercaseQuery.includes('khách hàng') && lowercaseQuery.includes('mới'))) {\n      return { type: 'newCustomers', chartType: 'bar' };\n    }\n    \n    // Doanh thu theo nhân viên\n    else if (lowercaseQuery.includes('doanh thu') && lowercaseQuery.includes('nhân viên')) {\n      return { type: 'revenueByEmployee', chartType: 'bar' };\n    }\n    \n    // Trạng thái deal\n    else if ((lowercaseQuery.includes('deal') || lowercaseQuery.includes('giao dịch')) && \n             (lowercaseQuery.includes('trạng thái') || lowercaseQuery.includes('giai đoạn'))) {\n      return { type: 'dealStatus', chartType: 'pie' };\n    }\n    \n    // Doanh thu theo tháng\n    else if (lowercaseQuery.includes('doanh thu') && \n             (lowercaseQuery.includes('tháng') || lowercaseQuery.includes('thời gian'))) {\n      return { type: 'revenueByMonth', chartType: 'line' };\n    }\n    \n    // Tỉ lệ chuyển đổi\n    else if (lowercaseQuery.includes('tỉ lệ') || lowercaseQuery.includes('chuyển đổi')) {\n      return { type: 'conversionRate', chartType: 'pie' };\n    }\n    \n    // Mặc định hiển thị biểu đồ doanh thu theo nhân viên\n    return { type: 'revenueByEmployee', chartType: 'bar' };\n  };\n\n  const { type: chartDataType } = getChartTypeFromQuery(query || '');\n  \n  // Tự động cập nhật loại biểu đồ dựa trên câu hỏi nếu có query mới\n  React.useEffect(() => {\n    if (query) {\n      const { chartType: newChartType } = getChartTypeFromQuery(query);\n      setChartType(newChartType);\n    }\n  }, [query]);\n  \n  // Lấy dữ liệu phù hợp với loại biểu đồ\n  const getChartData = () => {\n    switch (chartDataType) {\n      case 'newCustomers':\n        return NEW_CUSTOMERS_DATA;\n      case 'dealStatus':\n        return DEAL_STATUS_DATA;\n      case 'revenueByMonth':\n        return REVENUE_BY_MONTH_DATA;\n      case 'conversionRate':\n        return CONVERSION_RATE_DATA;\n      case 'revenueByEmployee':\n      default:\n        return REVENUE_DATA;\n    }\n  };\n  \n  const chartData = getChartData();\n\n  // Format giá trị tiền tệ\n  const formatValue = (value: number) => {\n    return `${value} triệu`;\n  };\n\n  return (\n    <Paper elevation={2} sx={{ p: 3, borderRadius: 2, mb: 4 }}>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n        <Typography variant=\"h6\" sx={{ fontWeight: 'bold' }}>\n          📈 {query ? `Kết quả cho: \"${query}\"` : 'Phân tích dữ liệu kinh doanh'}\n        </Typography>\n        \n        <Box sx={{ display: 'flex', gap: 2 }}>\n          <ToggleButtonGroup\n            size=\"small\"\n            value={chartType}\n            exclusive\n            onChange={handleChartTypeChange}\n            aria-label=\"chart type\"\n          >\n            <ToggleButton value=\"bar\" aria-label=\"bar chart\">\n              <BarChartIcon fontSize=\"small\" />\n            </ToggleButton>\n            <ToggleButton value=\"pie\" aria-label=\"pie chart\">\n              <PieChartIcon fontSize=\"small\" />\n            </ToggleButton>\n            <ToggleButton value=\"line\" aria-label=\"line chart\">\n              <LineChartIcon fontSize=\"small\" />\n            </ToggleButton>\n            <ToggleButton value=\"table\" aria-label=\"table\">\n              <TableChartIcon fontSize=\"small\" />\n            </ToggleButton>\n          </ToggleButtonGroup>\n          \n          <FormControl size=\"small\" sx={{ minWidth: 120 }}>\n            <InputLabel id=\"time-range-label\">Thời gian</InputLabel>\n            <Select\n              labelId=\"time-range-label\"\n              id=\"time-range\"\n              value={timeRange}\n              label=\"Thời gian\"\n              onChange={handleTimeRangeChange}\n            >\n              <MenuItem value=\"today\">Hôm nay</MenuItem>\n              <MenuItem value=\"week\">Tuần này</MenuItem>\n              <MenuItem value=\"month\">Tháng này</MenuItem>\n              <MenuItem value=\"quarter\">Quý này</MenuItem>\n              <MenuItem value=\"year\">Năm nay</MenuItem>\n            </Select>\n          </FormControl>\n        </Box>\n      </Box>\n\n      <Box sx={{ height: 400, width: '100%' }}>\n        {chartType === 'bar' && (\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <BarChart\n              data={chartDataType === 'revenueByMonth' ? MONTHLY_REVENUE_DATA : REVENUE_DATA}\n              margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"name\" />\n              <YAxis />\n              <Tooltip formatter={(value) => formatValue(value as number)} />\n              <Legend />\n              <Bar \n                dataKey=\"value\" \n                name={chartDataType === 'revenueByMonth' ? 'Doanh thu theo tháng' : 'Doanh thu theo nhân viên'} \n                fill=\"#3b82f6\" \n              />\n            </BarChart>\n          </ResponsiveContainer>\n        )}\n\n        {chartType === 'pie' && (\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <PieChart>\n              <Pie\n                data={chartDataType === 'dealStatus' ? DEAL_STATUS_DATA : REVENUE_DATA}\n                cx=\"50%\"\n                cy=\"50%\"\n                labelLine={false}\n                outerRadius={150}\n                fill=\"#8884d8\"\n                dataKey=\"value\"\n                nameKey=\"name\"\n                label={({ name, percent }) => `${name}: ${percent ? (percent * 100).toFixed(0) : 0}%`}\n              >\n                {chartData.map((entry, index) => (\n                  <Cell \n                    key={`cell-${index}`} \n                    fill={(entry as any).color || COLORS[index % COLORS.length]} \n                  />\n                ))}\n              </Pie>\n              <Tooltip formatter={(value) => formatValue(value as number)} />\n              <Legend />\n            </PieChart>\n          </ResponsiveContainer>\n        )}\n\n        {chartType === 'line' && (\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <LineChart\n              data={MONTHLY_REVENUE_DATA}\n              margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"name\" />\n              <YAxis />\n              <Tooltip formatter={(value) => formatValue(value as number)} />\n              <Legend />\n              <Line \n                type=\"monotone\" \n                dataKey=\"value\" \n                name=\"Doanh thu theo tháng\" \n                stroke=\"#3b82f6\" \n                activeDot={{ r: 8 }} \n              />\n            </LineChart>\n          </ResponsiveContainer>\n        )}\n\n        {chartType === 'table' && (\n          <Box sx={{ height: '100%', overflow: 'auto' }}>\n            <table style={{ width: '100%', borderCollapse: 'collapse' }}>\n              <thead>\n                <tr style={{ borderBottom: '2px solid #e2e8f0' }}>\n                  <th style={{ padding: '12px 16px', textAlign: 'left' }}>Tên</th>\n                  <th style={{ padding: '12px 16px', textAlign: 'right' }}>Giá trị</th>\n                </tr>\n              </thead>\n              <tbody>\n                {(chartDataType === 'dealStatus' ? DEAL_STATUS_DATA : \n                  chartDataType === 'revenueByMonth' ? MONTHLY_REVENUE_DATA : REVENUE_DATA)\n                  .map((item, index) => (\n                    <tr \n                      key={index} \n                      style={{ \n                        borderBottom: '1px solid #e2e8f0',\n                        backgroundColor: index % 2 === 0 ? '#f8fafc' : 'white'\n                      }}\n                    >\n                      <td style={{ padding: '12px 16px' }}>{item.name}</td>\n                      <td style={{ padding: '12px 16px', textAlign: 'right' }}>\n                        {formatValue(item.value)}\n                      </td>\n                    </tr>\n                  ))}\n              </tbody>\n            </table>\n          </Box>\n        )}\n      </Box>\n    </Paper>\n  );\n};\n\nexport default DynamicCharts;","import React, { useState } from 'react';\nimport { \n  Box, \n  Paper, \n  Typography, \n  List, \n  ListItem, \n  ListItemText, \n  ListItemSecondaryAction, \n  IconButton, \n  Divider,\n  Menu,\n  MenuItem,\n  Chip,\n  TextField,\n  InputAdornment\n} from '@mui/material';\nimport {\n  MoreVert as MoreVertIcon,\n  Download as DownloadIcon,\n  Delete as DeleteIcon,\n  Edit as EditIcon,\n  Search as SearchIcon,\n  Share as ShareIcon,\n  Favorite as FavoriteIcon,\n  FavoriteBorder as FavoriteBorderIcon\n} from '@mui/icons-material';\n\n// Dữ liệu mẫu cho các báo cáo đã lưu\nconst SAVED_REPORTS = [\n  {\n    id: 1,\n    title: 'Báo cáo doanh thu theo nhân viên Q2/2025',\n    createdAt: '2025-06-30',\n    type: 'bar',\n    favorite: true,\n    tags: ['doanh thu', 'nhân viên', 'quý 2']\n  },\n  {\n    id: 2,\n    title: 'Phân tích tỉ lệ chuyển đổi lead sang khách hàng',\n    createdAt: '2025-06-25',\n    type: 'pie',\n    favorite: false,\n    tags: ['lead', 'chuyển đổi', 'phễu bán hàng']\n  },\n  {\n    id: 3,\n    title: 'Báo cáo doanh thu theo tháng năm 2025',\n    createdAt: '2025-06-20',\n    type: 'line',\n    favorite: true,\n    tags: ['doanh thu', 'tháng', '2025']\n  },\n  {\n    id: 4,\n    title: 'Top 10 khách hàng tiềm năng tháng 6',\n    createdAt: '2025-06-15',\n    type: 'table',\n    favorite: false,\n    tags: ['khách hàng tiềm năng', 'top 10']\n  },\n  {\n    id: 5,\n    title: 'Phân tích hiệu quả chiến dịch marketing Q2',\n    createdAt: '2025-06-10',\n    type: 'bar',\n    favorite: false,\n    tags: ['marketing', 'chiến dịch', 'quý 2']\n  }\n];\n\nconst SavedReports: React.FC = () => {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const [selectedReportId, setSelectedReportId] = useState<number | null>(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [favorites, setFavorites] = useState<Record<number, boolean>>(\n    SAVED_REPORTS.reduce((acc, report) => ({\n      ...acc,\n      [report.id]: report.favorite\n    }), {})\n  );\n\n  const handleMenuOpen = (event: React.MouseEvent<HTMLElement>, id: number) => {\n    setAnchorEl(event.currentTarget);\n    setSelectedReportId(id);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    setSelectedReportId(null);\n  };\n\n  const handleToggleFavorite = (id: number) => {\n    setFavorites(prev => ({\n      ...prev,\n      [id]: !prev[id]\n    }));\n  };\n\n  const getChartIcon = (type: string) => {\n    switch (type) {\n      case 'bar':\n        return '📊';\n      case 'pie':\n        return '🥧';\n      case 'line':\n        return '📈';\n      case 'table':\n        return '📋';\n      default:\n        return '📄';\n    }\n  };\n\n  const filteredReports = SAVED_REPORTS.filter(report => \n    report.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    report.tags.some(tag => tag.toLowerCase().includes(searchQuery.toLowerCase()))\n  );\n\n  return (\n    <Paper elevation={2} sx={{ borderRadius: 2 }}>\n      <Box sx={{ p: 2, borderBottom: '1px solid #e2e8f0' }}>\n        <Typography variant=\"h6\" sx={{ fontWeight: 'bold', mb: 2 }}>\n          📑 Báo cáo đã lưu\n        </Typography>\n        \n        <TextField\n          fullWidth\n          size=\"small\"\n          placeholder=\"Tìm kiếm báo cáo...\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <SearchIcon fontSize=\"small\" />\n              </InputAdornment>\n            ),\n          }}\n          sx={{ mb: 1 }}\n        />\n      </Box>\n\n      <List sx={{ maxHeight: '400px', overflow: 'auto' }}>\n        {filteredReports.length === 0 ? (\n          <ListItem>\n            <ListItemText \n              primary=\"Không tìm thấy báo cáo nào\" \n              secondary=\"Hãy thử tìm kiếm với từ khóa khác\" \n            />\n          </ListItem>\n        ) : (\n          filteredReports.map((report) => (\n            <React.Fragment key={report.id}>\n              <ListItem \n                sx={{ \n                  cursor: 'pointer',\n                  '&:hover': { \n                    backgroundColor: '#f8fafc' \n                  }\n                }}\n              >\n                <Box sx={{ mr: 1, fontSize: '1.5rem' }}>\n                  {getChartIcon(report.type)}\n                </Box>\n                <ListItemText\n                  primary={\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                      <Typography variant=\"body1\" sx={{ fontWeight: 'medium' }}>\n                        {report.title}\n                      </Typography>\n                      <IconButton \n                        size=\"small\" \n                        onClick={(e) => {\n                          e.stopPropagation();\n                          handleToggleFavorite(report.id);\n                        }}\n                        sx={{ ml: 1, color: favorites[report.id] ? '#f43f5e' : 'inherit' }}\n                      >\n                        {favorites[report.id] ? <FavoriteIcon fontSize=\"small\" /> : <FavoriteBorderIcon fontSize=\"small\" />}\n                      </IconButton>\n                    </Box>\n                  }\n                  secondary={\n                    <Box sx={{ mt: 0.5 }}>\n                      <Typography variant=\"caption\" color=\"text.secondary\" display=\"block\">\n                        Tạo ngày: {report.createdAt}\n                      </Typography>\n                      <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5, mt: 0.5 }}>\n                        {report.tags.map((tag, idx) => (\n                          <Chip \n                            key={idx} \n                            label={tag} \n                            size=\"small\" \n                            sx={{ \n                              height: 20, \n                              fontSize: '0.65rem',\n                              backgroundColor: '#f1f5f9'\n                            }} \n                          />\n                        ))}\n                      </Box>\n                    </Box>\n                  }\n                />\n                <ListItemSecondaryAction>\n                  <IconButton \n                    edge=\"end\" \n                    onClick={(e) => handleMenuOpen(e, report.id)}\n                  >\n                    <MoreVertIcon />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n              <Divider variant=\"inset\" component=\"li\" />\n            </React.Fragment>\n          ))\n        )}\n      </List>\n\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleMenuClose}\n        id={`report-menu-${selectedReportId}`}\n      >\n        <MenuItem onClick={handleMenuClose}>\n          <DownloadIcon fontSize=\"small\" sx={{ mr: 1 }} />\n          Tải xuống\n        </MenuItem>\n        <MenuItem onClick={handleMenuClose}>\n          <EditIcon fontSize=\"small\" sx={{ mr: 1 }} />\n          Chỉnh sửa\n        </MenuItem>\n        <MenuItem onClick={handleMenuClose}>\n          <ShareIcon fontSize=\"small\" sx={{ mr: 1 }} />\n          Chia sẻ\n        </MenuItem>\n        <Divider />\n        <MenuItem onClick={handleMenuClose} sx={{ color: 'error.main' }}>\n          <DeleteIcon fontSize=\"small\" sx={{ mr: 1 }} />\n          Xóa\n        </MenuItem>\n      </Menu>\n    </Paper>\n  );\n};\n\nexport default SavedReports;","import React, { useState } from 'react';\nimport { Box, Typography, Container } from '@mui/material';\n\n// Import các component con\nimport AIChatbot from './components/AIChatbot';\nimport KPIStats from './components/KPIStats';\nimport DynamicCharts from './components/DynamicCharts';\nimport SavedReports from './components/SavedReports';\n\nconst Dashboard = () => {\n  const [currentQuery, setCurrentQuery] = useState<string>('');\n\n  // Xử lý khi người dùng gửi yêu cầu báo cáo mới\n  const handleGenerateReport = (query: string) => {\n    console.log('Generating report for query:', query);\n    setCurrentQuery(query);\n    // Ở đây trong thực tế sẽ gọi API để xử lý yêu cầu và tạo báo cáo\n  };\n\n  return (\n    <Container maxWidth=\"xl\">\n      <Box sx={{ py: 3 }}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom sx={{ fontWeight: 'bold', color: '#1e293b' }}>\n          🚀 Dashboard Báo Cáo Thông Minh\n        </Typography>\n\n        {/* KPI Stats */}\n        <Box sx={{ mb: 3 }}>\n          <KPIStats />\n        </Box>\n\n        {/* AI Chatbot */}\n        <AIChatbot onGenerateReport={handleGenerateReport} />\n\n        {/* Grid layout cho biểu đồ và báo cáo đã lưu */}\n        <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', lg: '8fr 4fr' }, gap: 3, mt: 3 }}>\n          {/* Biểu đồ động */}\n          <Box>\n            <DynamicCharts query={currentQuery} />\n          </Box>\n\n          {/* Báo cáo đã lưu */}\n          <Box>\n            <SavedReports />\n          </Box>\n        </Box>\n\n        {/* Footer */}\n        <Box sx={{ mt: 4, pt: 2, borderTop: '1px solid #e2e8f0', textAlign: 'center' }}>\n          <Typography variant=\"caption\" color=\"text.secondary\">\n            © 2025 CRM Dashboard - Powered by AI Assistant\n          </Typography>\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n\nexport default Dashboard;\n"],"names":["SUGGESTIONS","SAMPLE_HISTORY","id","query","timestamp","_ref","onGenerateReport","setQuery","useState","showHistory","setShowHistory","_jsxs","Paper","elevation","sx","p","mb","borderRadius","background","children","Box","display","alignItems","_jsx","Typography","variant","flexGrow","fontWeight","color","IconButton","onClick","mr","HistoryIcon","onSubmit","e","preventDefault","trim","TextField","fullWidth","placeholder","value","onChange","target","backgroundColor","type","width","height","SendIcon","ml","MicIcon","flexWrap","gap","map","suggestion","index","Chip","label","mt","maxHeight","overflow","List","dense","item","React","ListItem","cursor","ListItemText","primary","secondary","size","SaveIcon","fontSize","DownloadIcon","Divider","justifyContent","Button","startIcon","KPI_DATA","newCustomers","change","positive","totalDeals","dealStages","lead","quote","negotiation","win","lose","revenue","topEmployee","name","deals","avatar","KPIStats","gridTemplateColumns","xs","sm","md","lg","flexDirection","borderTop","Avatar","bgcolor","PersonIcon","DescriptionIcon","TrendingUpIcon","concat","Object","values","reduce","a","b","AttachMoneyIcon","EmojiEventsIcon","charAt","REVENUE_DATA","DEAL_STATUS_DATA","NEW_CUSTOMERS_DATA","REVENUE_BY_MONTH_DATA","CONVERSION_RATE_DATA","MONTHLY_REVENUE_DATA","COLORS","chartType","setChartType","timeRange","setTimeRange","getChartTypeFromQuery","lowercaseQuery","toLowerCase","includes","chartDataType","newChartType","chartData","getChartData","formatValue","ToggleButtonGroup","exclusive","handleChartTypeChange","event","ToggleButton","BarChartIcon","PieChartIcon","LineChartIcon","TableChartIcon","FormControl","minWidth","InputLabel","Select","labelId","MenuItem","ResponsiveContainer","BarChart","data","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","formatter","Legend","Bar","fill","PieChart","Pie","cx","cy","labelLine","outerRadius","nameKey","_ref2","percent","toFixed","entry","Cell","length","LineChart","Line","stroke","activeDot","r","style","borderCollapse","borderBottom","padding","textAlign","SAVED_REPORTS","title","createdAt","favorite","tags","SavedReports","anchorEl","setAnchorEl","selectedReportId","setSelectedReportId","searchQuery","setSearchQuery","favorites","setFavorites","acc","report","_objectSpread","handleMenuClose","getChartIcon","filteredReports","filter","some","tag","InputProps","startAdornment","InputAdornment","position","SearchIcon","stopPropagation","prev","FavoriteIcon","FavoriteBorderIcon","idx","ListItemSecondaryAction","edge","handleMenuOpen","currentTarget","MoreVertIcon","component","Menu","open","Boolean","onClose","EditIcon","ShareIcon","DeleteIcon","Dashboard","currentQuery","setCurrentQuery","Container","maxWidth","py","gutterBottom","AIChatbot","console","log","DynamicCharts","pt"],"sourceRoot":""}