{"version":3,"file":"static/js/832.ba9fcf93.chunk.js","mappings":"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","sources":["components/RichTextEditor/index.tsx","components/PdfPageEditor/index.tsx"],"sourcesContent":["import React, { useCallback, useRef } from 'react';\nimport { useEditor, EditorContent } from '@tiptap/react';\nimport StarterKit from '@tiptap/starter-kit';\nimport Underline from '@tiptap/extension-underline';\nimport Image from '@tiptap/extension-image';\nimport Table from '@tiptap/extension-table';\nimport TableRow from '@tiptap/extension-table-row';\nimport TableHeader from '@tiptap/extension-table-header';\nimport TableCell from '@tiptap/extension-table-cell';\nimport { Box, ButtonGroup, IconButton } from '@mui/material';\nimport {\n  FormatBold,\n  FormatItalic,\n  FormatListBulleted,\n  FormatListNumbered,\n  Undo,\n  Redo,\n  Image as ImageIcon,\n  TableChart,\n  Delete as DeleteIcon,\n  KeyboardArrowUp as ArrowUpIcon,\n  KeyboardArrowDown as ArrowDownIcon,\n  KeyboardArrowLeft as ArrowLeftIcon,\n  KeyboardArrowRight as ArrowRightIcon\n} from '@mui/icons-material';\n\n\ninterface RichTextEditorProps {\n  content: string;\n  onChange: (content: string) => void;\n  readOnly?: boolean;\n}\n\nconst RichTextEditor: React.FC<RichTextEditorProps> = ({ content, onChange, readOnly = false }) => {\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const editor = useEditor({\n    extensions: [\n      StarterKit,\n      Underline,\n      Image.configure({\n        inline: true,\n        allowBase64: true,\n      }),\n      Table.configure({\n        resizable: true,\n      }),\n      TableRow,\n      TableHeader,\n      TableCell,\n    ],\n    content,\n    onUpdate: ({ editor }) => {\n      onChange(editor.getHTML());\n    },\n    editable: !readOnly,\n  });\n\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      const base64 = event.target?.result as string;\n      editor?.chain().focus().setImage({ src: base64 }).run();\n    };\n    reader.readAsDataURL(file);\n  };\n\n  const addTable = useCallback(() => {\n    editor?.chain().focus().insertTable({ rows: 3, cols: 3, withHeaderRow: true }).run();\n  }, [editor]);\n\n  const addColumnBefore = useCallback(() => {\n    editor?.chain().focus().addColumnBefore().run();\n  }, [editor]);\n\n  const addColumnAfter = useCallback(() => {\n    editor?.chain().focus().addColumnAfter().run();\n  }, [editor]);\n\n  const addRowBefore = useCallback(() => {\n    editor?.chain().focus().addRowBefore().run();\n  }, [editor]);\n\n  const addRowAfter = useCallback(() => {\n    editor?.chain().focus().addRowAfter().run();\n  }, [editor]);\n\n  const deleteRow = useCallback(() => {\n    editor?.chain().focus().deleteRow().run();\n  }, [editor]);\n\n  const deleteColumn = useCallback(() => {\n    editor?.chain().focus().deleteColumn().run();\n  }, [editor]);\n\n  const deleteTable = useCallback(() => {\n    editor?.chain().focus().deleteTable().run();\n  }, [editor]);\n\n  if (!editor) {\n    return <div>Đang tải trình soạn thảo...</div>;\n  }\n\n  return (\n    <Box sx={{ border: '1px solid #e0e0e0', borderRadius: 1, overflow: 'hidden' }}>\n      <Box\n        sx={{\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: 0.5,\n          p: 1,\n          borderBottom: '1px solid #e0e0e0',\n          bgcolor: '#f5f5f5',\n        }}\n      >\n        {/* Text Formatting Buttons */}\n        <ButtonGroup size=\"small\" variant=\"text\">\n          <IconButton\n            onClick={() => editor.chain().focus().toggleBold().run()}\n            color={editor.isActive('bold') ? 'primary' : 'default'}\n            title=\"Đậm\"\n          >\n            <FormatBold />\n          </IconButton>\n          <IconButton\n            onClick={() => editor.chain().focus().toggleItalic().run()}\n            color={editor.isActive('italic') ? 'primary' : 'default'}\n            title=\"Nghiêng\"\n          >\n            <FormatItalic />\n          </IconButton>\n          <IconButton\n            onClick={() => editor.chain().focus().toggleUnderline().run()}\n            color={editor.isActive('underline') ? 'primary' : 'default'}\n            title=\"Gạch chân\"\n          >\n            <FormatBold sx={{ textDecoration: 'underline' }} />\n          </IconButton>\n        </ButtonGroup>\n\n        {/* List Buttons */}\n        <ButtonGroup size=\"small\" variant=\"text\">\n          <IconButton\n            onClick={() => editor.chain().focus().toggleBulletList().run()}\n            color={editor.isActive('bulletList') ? 'primary' : 'default'}\n            title=\"Danh sách không thứ tự\"\n          >\n            <FormatListBulleted />\n          </IconButton>\n          <IconButton\n            onClick={() => editor.chain().focus().toggleOrderedList().run()}\n            color={editor.isActive('orderedList') ? 'primary' : 'default'}\n            title=\"Danh sách có thứ tự\"\n          >\n            <FormatListNumbered />\n          </IconButton>\n        </ButtonGroup>\n\n        {/* Table Controls */}\n        <ButtonGroup size=\"small\" variant=\"text\">\n          <IconButton\n            onClick={addTable}\n            title=\"Chèn bảng\"\n          >\n            <TableChart />\n          </IconButton>\n          <IconButton\n            onClick={addRowBefore}\n            disabled={!editor.can().addRowBefore()}\n            title=\"Thêm hàng phía trên\"\n          >\n            <ArrowUpIcon />\n          </IconButton>\n          <IconButton\n            onClick={addRowAfter}\n            disabled={!editor.can().addRowAfter()}\n            title=\"Thêm hàng phía dưới\"\n          >\n            <ArrowDownIcon />\n          </IconButton>\n          <IconButton\n            onClick={addColumnBefore}\n            disabled={!editor.can().addColumnBefore()}\n            title=\"Thêm cột bên trái\"\n          >\n            <ArrowLeftIcon />\n          </IconButton>\n          <IconButton\n            onClick={addColumnAfter}\n            disabled={!editor.can().addColumnAfter()}\n            title=\"Thêm cột bên phải\"\n          >\n            <ArrowRightIcon />\n          </IconButton>\n          <IconButton\n            onClick={deleteRow}\n            disabled={!editor.can().deleteRow()}\n            title=\"Xóa hàng\"\n          >\n            <DeleteIcon />\n          </IconButton>\n          <IconButton\n            onClick={deleteColumn}\n            disabled={!editor.can().deleteColumn()}\n            title=\"Xóa cột\"\n          >\n            <DeleteIcon />\n          </IconButton>\n          <IconButton\n            onClick={deleteTable}\n            disabled={!editor.can().deleteTable()}\n            title=\"Xóa bảng\"\n          >\n            <TableChart />\n          </IconButton>\n        </ButtonGroup>\n\n        {/* Image Upload */}\n        <ButtonGroup size=\"small\" variant=\"text\">\n          <IconButton\n            onClick={() => fileInputRef.current?.click()}\n            title=\"Chèn ảnh\"\n          >\n            <ImageIcon />\n          </IconButton>\n        </ButtonGroup>\n\n        {/* Undo/Redo */}\n        <ButtonGroup size=\"small\" variant=\"text\">\n          <IconButton\n            onClick={() => editor.chain().focus().undo().run()}\n            disabled={!editor.can().undo()}\n            title=\"Hoàn tác\"\n          >\n            <Undo />\n          </IconButton>\n          <IconButton\n            onClick={() => editor.chain().focus().redo().run()}\n            disabled={!editor.can().redo()}\n            title=\"Làm lại\"\n          >\n            <Redo />\n          </IconButton>\n        </ButtonGroup>\n      </Box>\n\n      {/* Editor Content */}\n      <Box sx={{ \n        p: 2, \n        minHeight: '300px', \n        maxHeight: '70vh', \n        overflowY: 'auto',\n        '& .ProseMirror': {\n          '& table': {\n            borderCollapse: 'collapse',\n            margin: '1rem 0',\n            width: '100%',\n            tableLayout: 'fixed',\n          },\n          '& table td, & table th': {\n            border: '1px solid #ccc',\n            padding: '8px 12px',\n            position: 'relative',\n            textAlign: 'left',\n            verticalAlign: 'top',\n          },\n          '& table th': {\n            backgroundColor: '#f3f3f3',\n            fontWeight: 'bold',\n          },\n          '& table .selectedCell': {\n            backgroundColor: 'rgba(200, 200, 255, 0.4)',\n          },\n        }\n      }}>\n        <EditorContent editor={editor} />\n      </Box>\n\n      {/* Hidden file input for image upload */}\n      <input\n        type=\"file\"\n        ref={fileInputRef}\n        style={{ display: 'none' }}\n        accept=\"image/*\"\n        onChange={handleFileChange}\n      />\n    </Box>\n  );\n};\n\nexport default RichTextEditor;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { Box, Typography, IconButton, Paper, Button } from '@mui/material';\nimport { Add as AddIcon, Save as SaveIcon, PictureAsPdf as PdfIcon, Print as PrintIcon, Delete as DeleteIcon, Edit as EditIcon } from '@mui/icons-material';\nimport { Document, Page, Text, View, StyleSheet, pdf, Font } from '@react-pdf/renderer';\nimport RichTextEditor from '../RichTextEditor';\n\n// Đăng ký font chữ hỗ trợ tiếng Việt\nFont.register({\n  family: 'Roboto',\n  fonts: [\n    { src: 'https://cdnjs.cloudflare.com/ajax/libs/ink/3.1.10/fonts/Roboto/roboto-regular-webfont.ttf', fontWeight: 'normal' },\n    { src: 'https://cdnjs.cloudflare.com/ajax/libs/ink/3.1.10/fonts/Roboto/roboto-bold-webfont.ttf', fontWeight: 'bold' },\n    { src: 'https://cdnjs.cloudflare.com/ajax/libs/ink/3.1.10/fonts/Roboto/roboto-italic-webfont.ttf', fontStyle: 'italic' },\n  ],\n});\n\n// Đăng ký font Noto Sans hỗ trợ tiếng Việt tốt hơn\nFont.register({\n  family: 'NotoSans',\n  fonts: [\n    { src: 'https://cdn.jsdelivr.net/npm/@fontsource/noto-sans@4.5.1/files/noto-sans-vietnamese-400-normal.woff', fontWeight: 'normal' },\n    { src: 'https://cdn.jsdelivr.net/npm/@fontsource/noto-sans@4.5.1/files/noto-sans-vietnamese-700-normal.woff', fontWeight: 'bold' },\n  ],\n});\n\n// Đăng ký font Source Sans Pro hỗ trợ tiếng Việt\nFont.register({\n  family: 'SourceSansPro',\n  fonts: [\n    { src: 'https://cdn.jsdelivr.net/npm/source-sans-pro@3.6.0/TTF/SourceSansPro-Regular.ttf', fontWeight: 'normal' },\n    { src: 'https://cdn.jsdelivr.net/npm/source-sans-pro@3.6.0/TTF/SourceSansPro-Bold.ttf', fontWeight: 'bold' },\n    { src: 'https://cdn.jsdelivr.net/npm/source-sans-pro@3.6.0/TTF/SourceSansPro-Italic.ttf', fontStyle: 'italic' },\n    { src: 'https://cdn.jsdelivr.net/npm/source-sans-pro@3.6.0/TTF/SourceSansPro-BoldItalic.ttf', fontWeight: 'bold', fontStyle: 'italic' },\n  ],\n});\n\n// Đặt font mặc định cho toàn bộ PDF\nFont.registerHyphenationCallback(word => [word]);\n\n// A4 dimensions in mm\nconst A4_WIDTH_MM = 210;\nconst A4_HEIGHT_MM = 297;\nconst MM_TO_PX = 3.78; // Approximate conversion factor\n\n// Calculate pixel dimensions based on 96 DPI\nconst A4_WIDTH_PX = A4_WIDTH_MM * MM_TO_PX;\nconst A4_HEIGHT_PX = A4_HEIGHT_MM * MM_TO_PX;\n\n// Reduced padding for better space utilization\nconst PAGE_PADDING = '10mm';\n\n// Định nghĩa styles cho PDF\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: 'column',\n    backgroundColor: '#ffffff',\n    padding: 30,\n    fontFamily: 'SourceSansPro',\n  },\n  section: {\n    margin: 10,\n    padding: 10,\n    flexGrow: 1,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    textAlign: 'center',\n    fontFamily: 'SourceSansPro',\n  },\n  subtitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    fontFamily: 'SourceSansPro',\n  },\n  text: {\n    fontSize: 12,\n    marginBottom: 5,\n    fontFamily: 'SourceSansPro',\n  },\n  table: {\n    width: 'auto',\n    borderStyle: 'solid',\n    borderWidth: 1,\n    borderColor: '#bfbfbf',\n    marginVertical: 10,\n  },\n  tableRow: {\n    flexDirection: 'row',\n  },\n  tableHeaderCell: {\n    backgroundColor: '#f0f0f0',\n    fontWeight: 'bold',\n    padding: 5,\n    borderStyle: 'solid',\n    borderWidth: 1,\n    borderColor: '#bfbfbf',\n    fontFamily: 'SourceSansPro',\n  },\n  tableCell: {\n    padding: 5,\n    borderStyle: 'solid',\n    borderWidth: 1,\n    borderColor: '#bfbfbf',\n    fontFamily: 'SourceSansPro',\n  },\n  pageNumber: {\n    position: 'absolute',\n    fontSize: 10,\n    bottom: 20,\n    right: 20,\n    textAlign: 'right',\n    color: 'grey',\n    fontFamily: 'SourceSansPro',\n  },\n});\n\n// Hàm chuyển đổi HTML thành cấu trúc dữ liệu cho React-PDF\nconst parseHtmlContent = (htmlContent: string) => {\n  // Tạo một DOM parser\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(htmlContent, 'text/html');\n  \n  // Mảng chứa các phần tử đã parse\n  const parsedElements: any[] = [];\n  \n  // Xử lý các phần tử con\n  const processNode = (node: Node, depth = 0): any => {\n    if (node.nodeType === Node.TEXT_NODE) {\n      const text = node.textContent?.trim();\n      if (text) {\n        // Đảm bảo hiển thị đúng tiếng Việt bằng cách giữ nguyên mã Unicode\n        return { type: 'text', content: text };\n      }\n      return null;\n    }\n    \n    if (node.nodeType === Node.ELEMENT_NODE) {\n      const element = node as Element;\n      const tagName = element.tagName.toLowerCase();\n      \n      // Xử lý các loại phần tử khác nhau\n      switch (tagName) {\n        case 'h1':\n          return { type: 'heading1', content: element.textContent || '' };\n        case 'h2':\n          return { type: 'heading2', content: element.textContent || '' };\n        case 'p':\n          return { type: 'paragraph', content: element.textContent || '' };\n        case 'strong':\n        case 'b':\n          return { type: 'bold', content: element.textContent || '' };\n        case 'em':\n        case 'i':\n          return { type: 'italic', content: element.textContent || '' };\n        case 'u':\n          return { type: 'underline', content: element.textContent || '' };\n        case 'table':\n          const rows: any[] = [];\n          const tableRows = element.querySelectorAll('tr');\n          \n          tableRows.forEach((row, rowIndex) => {\n            const cells: any[] = [];\n            const isHeader = rowIndex === 0 || row.querySelector('th');\n            \n            row.querySelectorAll('th, td').forEach((cell) => {\n              cells.push({\n                content: cell.textContent || '',\n                isHeader: cell.tagName.toLowerCase() === 'th',\n              });\n            });\n            \n            rows.push({ cells, isHeader });\n          });\n          \n          return { type: 'table', rows };\n        case 'ul':\n        case 'ol':\n          const items: string[] = [];\n          element.querySelectorAll('li').forEach((li) => {\n            items.push(li.textContent || '');\n          });\n          return { \n            type: tagName === 'ul' ? 'bulletList' : 'numberedList', \n            items \n          };\n        default:\n          // Xử lý các phần tử có phần tử con\n          const children: any[] = [];\n          element.childNodes.forEach((child) => {\n            const processed = processNode(child, depth + 1);\n            if (processed) {\n              children.push(processed);\n            }\n          });\n          \n          if (children.length > 0) {\n            return { type: 'container', children };\n          }\n          return null;\n      }\n    }\n    \n    return null;\n  };\n  \n  // Xử lý tất cả các phần tử con của body\n  doc.body.childNodes.forEach((node) => {\n    const processed = processNode(node);\n    if (processed) {\n      parsedElements.push(processed);\n    }\n  });\n  \n  return parsedElements;\n};\n\n// Component để render các phần tử đã parse\nconst RenderPdfElement = ({ element }: { element: any }) => {\n  switch (element.type) {\n    case 'heading1':\n      return <Text style={styles.title}>{element.content}</Text>;\n    case 'heading2':\n      return <Text style={styles.subtitle}>{element.content}</Text>;\n    case 'paragraph':\n      return <Text style={styles.text}>{element.content}</Text>;\n    case 'bold':\n      return <Text style={{ ...styles.text, fontWeight: 'bold' }}>{element.content}</Text>;\n    case 'italic':\n      return <Text style={{ ...styles.text, fontStyle: 'italic' }}>{element.content}</Text>;\n    case 'underline':\n      return <Text style={{ ...styles.text, textDecoration: 'underline' }}>{element.content}</Text>;\n    case 'text':\n      return <Text style={styles.text}>{element.content}</Text>;\n    case 'table':\n      return (\n        <View style={styles.table as any}>\n          {element.rows.map((row: any, rowIndex: number) => (\n            <View key={rowIndex} style={styles.tableRow}>\n              {row.cells.map((cell: any, cellIndex: number) => {\n                const cellStyle = cell.isHeader || row.isHeader ? styles.tableHeaderCell : styles.tableCell;\n                return (\n                  <View key={cellIndex} style={[cellStyle, { flex: 1 }]}>\n                    <Text>{cell.content}</Text>\n                  </View>\n                );\n              })}\n            </View>\n          ))}\n        </View>\n      );\n    case 'bulletList':\n      return (\n        <View style={{ marginLeft: 10 }}>\n          {element.items.map((item: string, index: number) => (\n            <View key={index} style={{ flexDirection: 'row', marginBottom: 5 }}>\n              <Text style={{ marginRight: 5 }}>•</Text>\n              <Text style={styles.text}>{item}</Text>\n            </View>\n          ))}\n        </View>\n      );\n    case 'numberedList':\n      return (\n        <View style={{ marginLeft: 10 }}>\n          {element.items.map((item: string, index: number) => (\n            <View key={index} style={{ flexDirection: 'row', marginBottom: 5 }}>\n              <Text style={{ marginRight: 5 }}>{index + 1}.</Text>\n              <Text style={styles.text}>{item}</Text>\n            </View>\n          ))}\n        </View>\n      );\n    case 'container':\n      return (\n        <View>\n          {element.children.map((child: any, index: number) => (\n            <RenderPdfElement key={index} element={child} />\n          ))}\n        </View>\n      );\n    default:\n      return null;\n  }\n};\n\n// Component để render PDF\nconst PdfDocument = ({ pages }: { pages: string[] }) => (\n  <Document>\n    {pages.map((content, index) => {\n      const parsedContent = parseHtmlContent(content);\n      return (\n        <Page key={index} size=\"A4\" style={styles.page}>\n          <View style={styles.section}>\n            {parsedContent.map((element, elementIndex) => (\n              <RenderPdfElement key={elementIndex} element={element} />\n            ))}\n            <Text style={styles.pageNumber}>Trang {index + 1}</Text>\n          </View>\n        </Page>\n      );\n    })}\n  </Document>\n);\n\ninterface PdfPageProps {\n  content: string;\n  pageNumber: number;\n  isEditing: boolean;\n  onContentChange: (content: string) => void;\n}\n\nconst PdfPage: React.FC<PdfPageProps> = ({ content, pageNumber, isEditing, onContentChange }) => {\n  const handleContentChange = (newContent: string) => {\n    onContentChange(newContent);\n  };\n\n  return (\n    <Paper \n      elevation={2}\n      className=\"pdf-page\"\n      data-page-number={pageNumber}\n      sx={{\n        width: `${A4_WIDTH_PX}px`,\n        minHeight: `${A4_HEIGHT_PX}px`,\n        maxWidth: '100%', // Đảm bảo không vượt quá chiều rộng của container\n        padding: PAGE_PADDING,\n        margin: '0 0 20px 0', // Chỉ để margin dưới, bỏ margin trái phải\n        position: 'relative',\n        backgroundColor: 'white',\n        boxSizing: 'border-box',\n        display: 'flex',\n        flexDirection: 'column',\n        '@media print': {\n          boxShadow: 'none',\n          margin: 0,\n          padding: PAGE_PADDING,\n          pageBreakAfter: 'always',\n          '&:last-child': {\n            pageBreakAfter: 'auto',\n          },\n        },\n      }}\n    >\n      <Box sx={{ \n        flex: 1, \n        overflow: 'hidden',\n        '& .ProseMirror': {\n          overflow: 'hidden !important', // Ngăn scroll trong editor\n          height: '100%',\n          '& table': {\n            borderCollapse: 'collapse',\n            margin: '1rem 0',\n            width: '100%',\n            tableLayout: 'fixed',\n            border: '1px solid #000',\n          },\n          '& table td, & table th': {\n            border: '1px solid #000',\n            padding: '8px 12px',\n            position: 'relative',\n            textAlign: 'left',\n            verticalAlign: 'top',\n          },\n          '& table th': {\n            backgroundColor: '#f3f3f3',\n            fontWeight: 'bold',\n          },\n        }\n      }}>\n        <RichTextEditor \n          content={content} \n          onChange={handleContentChange} \n          readOnly={!isEditing}\n        />\n      </Box>\n      <Box sx={{ \n        position: 'absolute', \n        bottom: 10, \n        right: 10, \n        fontSize: '12px', \n        color: '#666',\n        backgroundColor: 'rgba(255, 255, 255, 0.8)',\n        px: 1,\n        borderRadius: 1\n      }}>\n        Trang {pageNumber}\n      </Box>\n    </Paper>\n  );\n};\n\ninterface PdfPageEditorProps {\n  initialContent: string[];\n  onSave: (pages: string[]) => void;\n  onExportPdf?: () => void;\n}\n\nexport const PdfPageEditor: React.FC<PdfPageEditorProps> = ({\n  initialContent,\n  onSave,\n  onExportPdf,\n}) => {\n  const [pages, setPages] = useState<string[]>(initialContent);  \n  const [isEditing, setIsEditing] = useState(true);\n  const contentRef = useRef<HTMLDivElement>(null);\n  \n  // Initialize with empty content if no content is provided\n  useEffect(() => {\n    if (initialContent.length === 0) {\n      setPages(['<p>Nhập nội dung tại đây...</p>']);\n    }\n  }, [initialContent]);\n\n  const handleAddPage = () => {\n    setPages([...pages, '<p>Nhập nội dung tại đây...</p>']);\n  };\n  \n  const handleRemovePage = (index: number) => {\n    if (pages.length <= 1) return; // Don't remove the last page\n    const newPages = [...pages];\n    newPages.splice(index, 1);\n    setPages(newPages);\n  };\n\n  const handlePageContentChange = (index: number, content: string) => {\n    const newPages = [...pages];\n    newPages[index] = content;\n    setPages(newPages);\n  };\n\n  const toggleEdit = () => {\n    const newEditState = !isEditing;\n    setIsEditing(newEditState);\n    \n    // Save when toggling out of edit mode\n    if (newEditState === false) {\n      onSave(pages);\n    }\n  };\n\n  const handleExportPdf = async () => {\n    try {\n      // Tạo một instance của Document\n      const pdfDoc = <PdfDocument pages={pages} />;\n      \n      // Tạo blob từ document\n      const blob = await pdf(pdfDoc).toBlob();\n      \n      // Tạo URL từ blob\n      const url = URL.createObjectURL(blob);\n      \n      // Tạo link tải xuống\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = 'bao-gia.pdf';\n      link.click();\n      \n      // Giải phóng URL\n      setTimeout(() => URL.revokeObjectURL(url), 100);\n      \n      if (onExportPdf) {\n        onExportPdf();\n      }\n    } catch (error) {\n      console.error('Lỗi khi xuất PDF:', error);\n    }\n  };\n\n  const handlePrint = () => {\n    window.print();\n  };\n\n  return (\n    <Box sx={{ \n      display: 'flex', \n      height: 'calc(100vh - 48px)', // Trừ đi chiều cao của AppBar nếu có\n      bgcolor: '#f8f9fa',\n      overflow: 'hidden' // Ngăn không cho scroll ở container ngoài cùng\n    }}>\n      {/* Sidebar */}\n      <Box sx={{ \n        width: 250, \n        bgcolor: 'white', \n        p: 2, \n        boxShadow: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 2,\n        overflowY: 'auto' // Cho phép sidebar scroll nếu cần\n      }}>\n        <Typography variant=\"h6\" sx={{ fontWeight: 'bold', mb: 2, color: 'primary.main' }}>Tài liệu</Typography>\n        \n        <Button \n          variant=\"contained\" \n          fullWidth\n          onClick={toggleEdit}\n          startIcon={isEditing ? <SaveIcon /> : <EditIcon />}\n          sx={{ mb: 1, justifyContent: 'flex-start' }}\n        >\n          {isEditing ? 'Lưu thay đổi' : 'Chỉnh sửa'}\n        </Button>\n        \n        <Button \n          variant=\"outlined\" \n          fullWidth\n          onClick={handleExportPdf}\n          startIcon={<PdfIcon />}\n          sx={{ mb: 1, justifyContent: 'flex-start' }}\n        >\n          Xuất PDF\n        </Button>\n        \n        <Button \n          variant=\"outlined\" \n          fullWidth\n          onClick={handlePrint}\n          startIcon={<PrintIcon />}\n          sx={{ mb: 3, justifyContent: 'flex-start' }}\n        >\n          In tài liệu\n        </Button>\n\n        {isEditing && (\n          <Button \n            variant=\"contained\" \n            color=\"primary\"\n            fullWidth\n            onClick={handleAddPage}\n            startIcon={<AddIcon />}\n            sx={{ mt: 'auto', mb: 2 }}\n          >\n            Thêm trang mới\n          </Button>\n        )}\n      </Box>\n\n      {/* Main Content - Chỉ cho phép scroll ở đây */}\n      <Box sx={{ \n        flex: 1, \n        p: 3, \n        overflowY: 'auto',\n        overflowX: 'hidden', // Ngăn scroll ngang\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center' // Căn giữa nội dung\n      }}>\n        <Box \n          ref={contentRef}\n          sx={{ \n            width: 'fit-content', // Để tự động co giãn theo nội dung\n            maxWidth: '100%', // Đảm bảo không vượt quá chiều rộng của container\n            bgcolor: 'transparent', // Loại bỏ nền trắng của khung\n            p: 0, // Loại bỏ padding không cần thiết\n          }}\n        >\n          {pages.map((page, index) => (\n            <Box \n              key={index} \n              sx={{ \n                position: 'relative',\n                mb: 4,\n                '&:hover .page-actions': {\n                  opacity: 1\n                }\n              }}\n            >\n              <PdfPage\n                content={page}\n                pageNumber={index + 1}\n                isEditing={isEditing}\n                onContentChange={(content) => handlePageContentChange(index, content)}\n              />\n              {isEditing && (\n                <Box \n                  className=\"page-actions\"\n                  sx={{\n                    position: 'absolute',\n                    top: 8,\n                    right: 8,\n                    display: 'flex',\n                    gap: 1,\n                    opacity: 0,\n                    transition: 'opacity 0.2s',\n                    '&:hover': {\n                      opacity: 1\n                    }\n                  }}\n                >\n                  <IconButton \n                    onClick={() => handleRemovePage(index)}\n                    size=\"small\"\n                    sx={{ \n                      backgroundColor: 'error.light',\n                      color: 'white',\n                      '&:hover': {\n                        backgroundColor: 'error.dark',\n                      },\n                    }}\n                    disabled={pages.length <= 1}\n                    title=\"Xóa trang\"\n                  >\n                    <DeleteIcon fontSize=\"small\" />\n                  </IconButton>\n                </Box>\n              )}\n            </Box>\n          ))}\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default PdfPageEditor;\n"],"names":["_ref","content","onChange","readOnly","fileInputRef","useRef","editor","useEditor","extensions","StarterKit","Underline","Image","configure","inline","allowBase64","Table","resizable","TableRow","TableHeader","TableCell","onUpdate","_ref2","getHTML","editable","addTable","useCallback","chain","focus","insertTable","rows","cols","withHeaderRow","run","addColumnBefore","addColumnAfter","addRowBefore","addRowAfter","deleteRow","deleteColumn","deleteTable","_jsxs","Box","sx","border","borderRadius","overflow","children","display","flexWrap","gap","p","borderBottom","bgcolor","ButtonGroup","size","variant","_jsx","IconButton","onClick","toggleBold","color","isActive","title","FormatBold","toggleItalic","FormatItalic","toggleUnderline","textDecoration","toggleBulletList","FormatListBulleted","toggleOrderedList","FormatListNumbered","TableChart","disabled","can","ArrowUpIcon","ArrowDownIcon","ArrowLeftIcon","ArrowRightIcon","DeleteIcon","_fileInputRef$current","current","click","ImageIcon","undo","Undo","redo","Redo","minHeight","maxHeight","overflowY","borderCollapse","margin","width","tableLayout","padding","position","textAlign","verticalAlign","backgroundColor","fontWeight","EditorContent","type","ref","style","accept","e","_e$target$files","file","target","files","reader","FileReader","onload","event","_event$target","base64","result","setImage","src","readAsDataURL","Font","register","family","fonts","fontStyle","registerHyphenationCallback","word","A4_HEIGHT_PX","PAGE_PADDING","styles","StyleSheet","create","page","flexDirection","fontFamily","section","flexGrow","fontSize","marginBottom","subtitle","text","table","borderStyle","borderWidth","borderColor","marginVertical","tableRow","tableHeaderCell","tableCell","pageNumber","bottom","right","RenderPdfElement","element","Text","_objectSpread","View","map","row","rowIndex","cells","cell","cellIndex","cellStyle","isHeader","flex","marginLeft","items","item","index","marginRight","child","PdfDocument","pages","Document","parsedContent","htmlContent","doc","DOMParser","parseFromString","parsedElements","processNode","node","depth","arguments","length","undefined","nodeType","Node","TEXT_NODE","_node$textContent","textContent","trim","ELEMENT_NODE","tagName","toLowerCase","querySelectorAll","forEach","querySelector","push","li","childNodes","processed","body","parseHtmlContent","Page","elementIndex","PdfPage","_ref3","isEditing","onContentChange","Paper","elevation","className","concat","A4_WIDTH_MM","maxWidth","boxSizing","boxShadow","pageBreakAfter","height","RichTextEditor","newContent","px","PdfPageEditor","_ref4","initialContent","onSave","onExportPdf","setPages","useState","setIsEditing","contentRef","useEffect","Typography","mb","Button","fullWidth","toggleEdit","newEditState","startIcon","SaveIcon","EditIcon","justifyContent","async","pdfDoc","blob","pdf","toBlob","url","URL","createObjectURL","link","document","createElement","href","download","setTimeout","revokeObjectURL","error","console","PdfIcon","handlePrint","window","print","PrintIcon","handleAddPage","AddIcon","mt","overflowX","alignItems","opacity","handlePageContentChange","newPages","top","transition","splice","handleRemovePage"],"sourceRoot":""}